(lp0
S'@sect3{Include files}'
p1
aS'`std::sqrt`'
p2
aS'`std::fabs`'
p3
aS'<code>dealii</code>'
p4
aS'<code>dealii::</code>'
p5
aS'@sect3{Creating the first mesh}'
p6
aS'$4^4=256$'
p7
aS'@sect3{Creating the second mesh}'
p8
aS'step-53'
p9
aS'@ref manifold'
p10
aS'GridGenerator::hyper_shell'
p11
aS'GridGenerator::hyper_shell'
p12
aS'GridGenerator::hyper_ball),'
p13
aS'numbers::flat_manifold_id,'
p14
aS'@ref GlossManifoldIndicator'
p15
aS'GridGenerator::hyper_shell'
p16
aS'Triangulation::active_cell_iterators().'
p17
aS'Triangulation::active_cell_iterators().'
p18
aS'`Triangulation::active_cell_iterator`.'
p19
aS'@note'
p20
aS'@ref Iterators'
p21
aS'@ref CPP11'
p22
aS'step-4'
p23
aS'(std::abs(distance_from_center'
p24
aS'$10^{-6}$'
p25
aS'@sect3{The main function}'
p26
aS'$\\pi$'
p27
aS'$\\pi$'
p28
aS'$\\pi$'
p29
aS'<code>long double</code>'
p30
aS'$Q_p$'
p31
aS'<code>p</code>'
p32
aS'GridGenerator::hyper_ball'
p33
aS'$Q_1$'
p34
aS'$Q_2$'
p35
aS'$Q_3$'
p36
aS'<code>1</code>'
p37
aS'$\\pi$'
p38
aS'$\\pi r^2$'
p39
aS'$\\int_K 1 dx=\\int_{\\hat K} 1\n \\ \\textrm{det}\\ J(\\hat x) d\\hat x \\approx \\sum_i \\textrm{det}\n \\ J(\\hat x_i)w(\\hat x_i)$'
p40
aS'$w(x_i)$'
p41
aS'$x_i$'
p42
aS'step-46'
p43
aS'<code>reinit</code>'
p44
aS'$\\pi$'
p45
aS'$\\pi$'
p46
aS'$\\pi$'
p47
aS'FEValues::reinit'
p48
aS'<code>fabs</code>'
p49
aS'<code>std</code>'
p50
aS'<code>long double</code>'
p51
aS'std::cout.'
p52
aS'$\\pi$'
p53
aS'$2\\pi r$'
p54
aS'std::find'
p55
aS'step-5'
p56
aS'<code>assemble_system</code> now calls <code>solve</code>'
p57
aS'<code>assemble_and_solve</code>'
p58
aS'<code>fe</code>'
p59
aS'<code>DoFHandler</code>'
p60
aS'<code>DoFTools</code>'
p61
aS'<code>first_boundary_dof</code>'
p62
aS'<code>DoFTools::make_sparsity_pattern</code>'
p63
aS'<code>SparsityPattern</code>'
p64
aS'DoFHandler::max_couplings_between_dofs),'
p65
aS'<code>DoFTools::make_sparsity_pattern</code>'
p66
aS'<code>SparsityPattern</code>'
p67
aS'<code>SparsityPattern</code>'
p68
aS'<code>SparsityPattern</code>'
p69
aS'<code>compress</code>'
p70
aS'<code>copy_from</code>'
p71
aS'<code>compress</code>'
p72
aS'<code>copy_from</code>'
p73
aS'<code>DoFHandler</code>'
p74
aS'<code>MatrixCreator</code>'
p75
aS'<code>MatrixTools</code>'
p76
aS'$r$'
p77
aS'$2r -\n 1$'
p78
aS'$p$'
p79
aS'$p+1$'
p80
aS'$2r \\geq p$'
p81
aS'$2$'
p82
aS'<code>gauss_degree</code>'
p83
aS'<code>VectorTools::create_right_hand_side</code>'
p84
aS'<code>VectorTools::create_boundary_right_hand_side</code>'
p85
aS'<code>VectorTools::integrate_difference</code>'
p86
aS'<code>MappingQ1</code>'
p87
aS'step-5'
p88
aS'DataOut::build_patches().)'
p89
aS'DataOutBase::VtkFlags'
p90
aS'DataOut::build_patches()'
p91
aS'<code>LaplaceProblem@<2@></code>'
p92
aS'<code>run</code>'
p93
aS'<code>DoFHandler</code>'
p94
aS'<code>FEValues</code>'
p95
aS'@sect3{Equation data}'
p96
aS'$[0,1]^2$'
p97
aS'$\\beta=\\beta(\\mathbf x)$'
p98
aS'$z$'
p99
aS'@sect3{The ScratchData and CopyData classes}'
p100
aS'MeshWorker::mesh_loop().'
p101
aS'@sect3{The AdvectionProblem class}'
p102
aS'<code>system_matrix</code> and <code>right_hand_side</code>'
p103
aS'<code>assemble_system()</code>, the <code>solution</code>'
p104
aS'<code>solve()</code>. The <code>sparsity_pattern</code>'
p105
aS'<code>system_matrix</code>'
p106
aS'<code>fe</code>'
p107
aS'<code>sparsity_pattern</code>'
p108
aS'DoFTools::make_sparsity_pattern,'
p109
aS'DoFTools::make_flux_sparsity_pattern:'
p110
aS'@sect4{The assemble_system function}'
p111
aS'MeshWorker::mesh_loop()'
p112
aS'@sect3{All the rest}'
p113
aS'<code>DerivativeApproximation</code>'
p114
aS'<code>GradientEstimation</code>'
p115
aS'step-9'
p116
aS'<code>DerivativeApproximation</code>'
p117
aS'<code>GradientEstimation</code>'
p118
aS'step-9'
p119
aS'step-9'
p120
aS'$h^{1+d/2}|\\nabla_h u_h|$'
p121
aS'$H^2$'
p122
aS'$H^1$'
p123
aS'$H^1_\\beta$'
p124
aS'$\\beta$'
p125
aS'<code>DerivativeApproximation</code>'
p126
aS'$h^{1+d/2}$'
p127
aS'VectorTools::integrate_difference().'
p128
aS'<code>run</code>'
p129
aS'<code>main</code>'
p130
aS'<code>DoFHandler</code>'
p131
aS'<code>FEValues</code>'
p132
aS'MeshWorker::DoFInfo,'
p133
aS'MeshWorker::LocalResults.'
p134
aS'MeshWorker::IntegrationInfo,'
p135
aS'@sect3{Equation data}'
p136
aS'$[0,1]^2$'
p137
aS'$\\beta=\\beta(\\mathbf x)$'
p138
aS'$z$'
p139
aS'@sect3{The AdvectionProblem class}'
p140
aS'step-6'
p141
aS'<code>system_matrix</code> and <code>right_hand_side</code>'
p142
aS'<code>assemble_system()</code>, the <code>solution</code>'
p143
aS'<code>solve()</code>. The <code>sparsity_pattern</code>'
p144
aS'<code>system_matrix</code>'
p145
aS'<code>static</code>'
p146
aS'<code>fe</code>'
p147
aS'<code>sparsity_pattern</code>'
p148
aS'DoFTools::make_sparsity_pattern,'
p149
aS'DoFTools::make_flux_sparsity_pattern:'
p150
aS'@sect4{The assemble_system function}'
p151
aS'MeshWorker::Assembler'
p152
aS'MeshWorker::loop(),'
p153
aS'MeshWorker::integration_loop()'
p154
aS'MeshWorker::Assembler::SystemSimple'
p155
aS'@p true'
p156
aS'@sect4{The local integrators}'
p157
aS'MeshWorker::integration_loop()'
p158
aS'@p info.'
p159
aS'$(\\beta\\cdot n u,\\hat\n   v)_{\\partial \\kappa_+}$'
p160
aS'$(\\beta\\cdot n \\hat u,\\hat\n   v)_{\\partial \\kappa_-}$'
p161
aS'@sect3{All the rest}'
p162
aS'<code>DerivativeApproximation</code>'
p163
aS'<code>GradientEstimation</code>'
p164
aS'step-9'
p165
aS'<code>DerivativeApproximation</code>'
p166
aS'<code>GradientEstimation</code>'
p167
aS'step-9'
p168
aS'step-9'
p169
aS'$h^{1+d/2}|\\nabla_h u_h|$'
p170
aS'$H^2$'
p171
aS'$H^1$'
p172
aS'$H^1_\\beta$'
p173
aS'$\\beta$'
p174
aS'<code>DerivativeApproximation</code>'
p175
aS'$h^{1+d/2}$'
p176
aS'<code>run</code>'
p177
aS'<code>main</code>'
p178
aS'<code>base</code>'
p179
aS'<code>lac</code> -- <code>grid</code> -- <code>dofs</code>'
p180
aS'<code>fe</code> -- <code>numerics</code>'
p181
aS'@sect3{Evaluation of the solution}'
p182
aS'<code>DoFHandler</code>'
p183
aS'<code>evaluation</code>'
p184
aS'<code>operator()</code>'
p185
aS'<code>functor</code>'
p186
aS'<code>operator()</code>'
p187
aS'<code>DoFHandler</code>'
p188
aS'@sect4{%Point evaluation}'
p189
aS'<code>operator()</code>'
p190
aS'step-9'
p191
aS'<code>DeclExceptionN</code>'
p192
aS'@>'
p193
aS'<code>cell-@>vertex_dof_index(vertex,0)</code>'
p194
aS'<code>AssertThrow</code>'
p195
aS'step-9'
p196
aS'<code>throw</code>'
p197
aS'<code>catch</code>'
p198
aS'<code>Assert</code>'
p199
aS'<code>AssertThrow</code>'
p200
aS'<code>AssertThrow</code>'
p201
aS'@sect4{Generating output}'
p202
aS'<code>evaluation</code>'
p203
aS'<code>DoFHandler</code>'
p204
aS'<code>EvaluationBase</code>'
p205
aS'<code>operator()</code>'
p206
aS'DataOutBase::OutputFormat'
p207
aS'<code>ucd</code>'
p208
aS'<code>gnuplot</code>, <code>povray</code>, <code>eps</code>'
p209
aS'<code>gmv</code>, <code>tecplot</code>, <code>tecplot_binary</code>'
p210
aS'<code>dx</code>, <code>vtk</code>'
p211
aS'<code>write</code>'
p212
aS'<code>write_gnuplot</code>, <code>write_ucd</code>'
p213
aS'DataOutBase::default_suffix'
p214
aS'DataOut::write()'
p215
aS'<code>this-@></code>'
p216
aS'step-7'
p217
aS'<code>two-stage name lookup</code>'
p218
aS'@sect4{Other evaluations}'
p219
aS'@sect3{The Laplace solver classes}'
p220
aS'@sect4{An abstract base class}'
p221
aS'<code>Object</code>'
p222
aS'<code>SmartPointer</code>'
p223
aS'step-7'
p224
aS'<code>refine_grid</code>'
p225
aS'<code>n_dofs</code>'
p226
aS'@sect4{A general solver class}'
p227
aS'<code>solve_problem</code>'
p228
aS'<code>postprocess</code>'
p229
aS'<code>refine_grid</code>'
p230
aS'<code>assemble_rhs</code>'
p231
aS'<code>DoFHandler</code>'
p232
aS'<code>solve_problem</code>'
p233
aS'<code>postprocess</code>'
p234
aS'<code>n_dofs</code>'
p235
aS'<code>assemble_linear_system()</code>'
p236
aS'step-9'
p237
aS'@ref threads'
p238
aS'<code>DoFHandler</code>'
p239
aS'<code>solve_problem</code>'
p240
aS'<code>postprocess</code>'
p241
aS'<code>n_dofs</code>'
p242
aS'@ref threads'
p243
aS'step-9'
p244
aS'<code>Solver::assemble_rhs</code>'
p245
aS'WorkStream::run'
p246
aS'WorkStream::run'
p247
aS'step-9'
p248
aS'WorkStream::run'
p249
aS'<code>LinearSystem</code>'
p250
aS'WorkStream::run'
p251
aS'<code>operator()</code>'
p252
aS'VectorTools::interpolate_boundary_values(),'
p253
aS'<code>&VectorTools::interpolate_boundary_values</code>'
p254
aS'Threads::new_task()'
p255
aS'step-9'
p256
aS'<code>Threads::TaskGroup</code>'
p257
aS'<code>DoFTools::make_hanging_node_constraints</code>'
p258
aS'<code>&</code>'
p259
aS'<code>mhnc_p</code>'
p260
aS'@sect4{A primal solver}'
p261
aS'<code>SmartPointer</code>'
p262
aS'<code>assemble_rhs</code>'
p263
aS'<code>assemble_rhs</code>'
p264
aS'@sect4{Global refinement}'
p265
aS'<code>refine_grid</code>'
p266
aS'<code>PrimalSolver</code>'
p267
aS'<code>triangulation-@>refine_global (1);</code>'
p268
aS'<code>Base</code>'
p269
aS'<code>Solver</code>'
p270
aS'@sect4{Local refinement by the Kelly error indicator}'
p271
aS'@sect3{Equation data}'
p272
aS'$u(x,y)=exp(x+sin(10y+5x^2))$'
p273
aS'<code>y</code> replaced by <code>z</code>'
p274
aS'@sect3{The driver routines}'
p275
aS'<code>alive</code>'
p276
aS'<code>std::flush</code>'
p277
aS'`std::unique_ptr`'
p278
aS'@sect3{Evaluating the solution}'
p279
aS'step-13'
p280
aS'@sect4{The EvaluationBase class}'
p281
aS'@sect4{The PointValueEvaluation class}'
p282
aS'@sect4{The PointXDerivativeEvaluation class}'
p283
aS'<code>PointValueEvaluation</code>'
p284
aS'<code>FEValues</code>'
p285
aS'<code>FEValues</code>'
p286
aS'<code>FEValues</code>'
p287
aS'@sect4{The GridOutput class}'
p288
aS'<code>SolutionOutput</code>'
p289
aS'@sect3{The Laplace solver classes}'
p290
aS'@sect4{The Laplace solver base class}'
p291
aS'<code>output_solution</code>'
p292
aS'<code>set_refinement_cycle</code>'
p293
aS'@sect4{The Laplace Solver class}'
p294
aS'<code>Solver</code>'
p295
aS'step-13'
p296
aS'step-13'
p297
aS'<code>Threads::TaskGroup</code>'
p298
aS'<code>Solver::assemble_linear_system()</code>'
p299
aS'<code>DoFTools::make_hanging_node_constraints</code>'
p300
aS'<code>&</code>'
p301
aS'<code>mhnc_p</code>'
p302
aS'@sect4{The PrimalSolver class}'
p303
aS'<code>PrimalSolver</code>'
p304
aS'<code>output_solution</code>'
p305
aS'<code>GlobalRefinement</code> and <code>RefinementKelly</code>'
p306
aS'@sect4{The RefinementGlobal and RefinementKelly classes}'
p307
aS'@sect4{The RefinementWeightedKelly class}'
p308
aS'CellAccessor::active_cell_index().'
p309
aS'CellAccessor::active_cell_index()'
p310
aS'@sect3{Equation data}'
p311
aS'<code>BoundaryValues</code>'
p312
aS'<code>RightHandSide</code>'
p313
aS'<code>Data::SetUp</code>'
p314
aS'<code>Data::SetUp@<Data::CurvedRidge@></code>'
p315
aS'<code>SetUp</code>'
p316
aS'<code>CurvedRidges</code>'
p317
aS'<code>SetUp</code>'
p318
aS'<code>dim</code>'
p319
aS'<code>CurvedRidges</code>'
p320
aS'@sect4{The SetUpBase and SetUp classes}'
p321
aS'<code>SetUpBase</code>'
p322
aS'<code>SmartPointer</code>'
p323
aS'<code>Subscriptor</code>'
p324
aS'@sect4{The CurvedRidges class}'
p325
aS'<code>curved ridge</code>'
p326
aS'step-13'
p327
aS'@sect4{The Exercise_2_3 class}'
p328
aS'step-49'
p329
aS'@sect4{Discussion}'
p330
aS'<code>CurvedRidges</code>'
p331
aS'<code>Data::SetUpBase</code>'
p332
aS'<code>CurvedRidges</code>'
p333
aS'<code>SetUp</code>'
p334
aS'<code>Data::SetUpBase</code>'
p335
aS'<code>Data::SetUpBase</code>'
p336
aS'<code>Data::SetUp@<SomeSetUp@></code>'
p337
aS'<code>SomeSetUp</code>'
p338
aS'<code>Data::SetUp@<SomeSetUp@></code>'
p339
aS'<code>SetUp</code>'
p340
aS'<code>switch</code>'
p341
aS'<code>switch</code>'
p342
aS'@sect3{Dual functionals}'
p343
aS'@sect4{The DualFunctionalBase class}'
p344
aS'@sect4{The dual functional PointValueEvaluation class}'
p345
aS'@sect4{The dual functional PointXDerivativeEvaluation class}'
p346
aS'<code>surrounds</code>'
p347
aS'<code>FEValues</code>'
p348
aS'<code>FEValues</code>'
p349
aS'@sect3{Extending the LaplaceSolver namespace}'
p350
aS'@sect4{The DualSolver class}'
p351
aS'<code>PrimalSolver</code>'
p352
aS'<code>DualSolver</code>'
p353
aS'<code>DualFunctionalBase</code>'
p354
aS'<code>Base</code>'
p355
aS'<code>PrimalSolver</code>'
p356
aS'<code>DualSolver</code>, it would have two <code>Base</code>'
p357
aS'@sect4{The WeightedResidual class}'
p358
aS'<code>solve_problem</code>'
p359
aS'<code>solve_problem</code>'
p360
aS'<code>FEValues</code>'
p361
aS'<code>FEFaceValues</code>'
p362
aS'@ref threads'
p363
aS'WorkStream::run'
p364
aS'step-9'
p365
aS'WorkStream::run()'
p366
aS'<code>CellData</code> and <code>FaceData</code>'
p367
aS'<code>WeightedResidual</code>'
p368
aS'<code>refine_grid()</code>'
p369
aS'<code>output_solution</code>'
p370
aS'<code>DataOut</code>'
p371
aS'<code>DataOut</code>'
p372
aS'@sect3{Estimating errors}'
p373
aS'@sect4{Error estimation driver functions}'
p374
aS'<code>WeightedResidual::output_solution</code>'
p375
aS'<code>interpolate_difference</code>'
p376
aS'std::map'
p377
aS'WorkStream::run()'
p378
aS'@sect4{Estimating on a single cell}'
p379
aS'<code>error_indicators</code>'
p380
aS'@sect4{Computing cell term error contributions}'
p381
aS'@sect4{Computing edge term error contributions -- 1}'
p382
aS'<code>FEFaceValues</code>'
p383
aS"<code>how-many'th</code>"
p384
aS'<code>neighbor_neighbor</code>'
p385
aS'<code>FEFaceValues</code>'
p386
aS'@sect4{Computing edge term error contributions -- 2}'
p387
aS'<code>neighbor_neighbor</code>'
p388
aS'@sect3{A simulation framework}'
p389
aS'<code>dual_weighted_error_estimator</code>'
p390
aS'<code>RefinementWeightedKelly</code>'
p391
aS'<code>weighted_kelly_indicator</code>'
p392
aS'@sect3{The main function}'
p393
aS'<code>global_refinement</code>'
p394
aS'<code>weighted_kelly_indicator</code>'
p395
aS'<code>Exercise_2_3</code>'
p396
aS'<code>CurvedRidges@<dim@></code>'
p397
aS'<code>PointValueEvaluation</code>'
p398
aS'<code>PointXDerivativeEvaluation</code>'
p399
aS'@sect3{Include files}'
p400
aS'@sect3{The <code>MinimalSurfaceProblem</code> class template}'
p401
aS'step-6'
p402
aS'$\\delta u^n$'
p403
aS'$u^n$'
p404
aS'<code>setup_system</code>'
p405
aS'$u^n$'
p406
aS'<code>refine_mesh</code>'
p407
aS'<code>set_boundary_values()</code>'
p408
aS'<code>compute_residual()</code>'
p409
aS'$\\alpha^n$'
p410
aS'$u^n + \\alpha^n\n   \\; \\delta u^n$'
p411
aS'<code>determine_step_length()</code>'
p412
aS'$\\alpha^n$'
p413
aS'step-77'
p414
aS'@sect3{Boundary condition}'
p415
aS'step-4'
p416
aS'$g(x,y)=\\sin(2 \\pi (x+y))$'
p417
aS'@sect3{The <code>MinimalSurfaceProblem</code> class implementation}'
p418
aS'@sect4{MinimalSurfaceProblem::MinimalSurfaceProblem}'
p419
aS'@sect4{MinimalSurfaceProblem::setup_system}'
p420
aS'step-6'
p421
aS'<code>refine_mesh()</code>'
p422
aS'step-6'
p423
aS'@sect4{MinimalSurfaceProblem::assemble_system}'
p424
aS'FEValues::get_function_gradients'
p425
aS'$a_{n}$'
p426
aS'$\\delta u^n$'
p427
aS'@sect4{MinimalSurfaceProblem::solve}'
p428
aS'$u^{n+1}=u^n+\\alpha^n\\;\\delta u^n$'
p429
aS'@sect4{MinimalSurfaceProblem::refine_mesh}'
p430
aS'step-6'
p431
aS'Triangulation::prepare_coarsening_and_refinement'
p432
aS'(Triangulation::execute_coarsening_and_refinement'
p433
aS'$u^n$'
p434
aS'<code>setup_dofs()</code>'
p435
aS'@sect4{MinimalSurfaceProblem::set_boundary_values}'
p436
aS'@sect4{MinimalSurfaceProblem::compute_residual}'
p437
aS'$\\left<F(u^n),\\varphi_i\\right>$'
p438
aS'$F(u)=-\\nabla \\cdot \\left(\n \\frac{1}{\\sqrt{1+|\\nabla u|^{2}}}\\nabla u \\right)$'
p439
aS'$\\left<F(u^n+\\alpha^n\\;\\delta u^n),\\varphi_i\\right>$'
p440
aS'$\\alpha^n$'
p441
aS'$u^n+\\alpha^n\\;\\delta u^n$'
p442
aS'<code>assemble_system()</code>'
p443
aS'$u^n+\\alpha^n\\,\\delta u^n$'
p444
aS'$a_n$'
p445
aS'step-11'
p446
aS'@sect4{MinimalSurfaceProblem::determine_step_length}'
p447
aS'$u^{n+1}=u^n+\\delta\n u^n$'
p448
aS'$\\alpha^n$'
p449
aS'$u^{n+1}=u^n+\\alpha^n\\delta u^n$'
p450
aS'$\\alpha^n$'
p451
aS'step-77'
p452
aS'@sect4{MinimalSurfaceProblem::output_results}'
p453
aS'@sect4{MinimalSurfaceProblem::run}'
p454
aS'step-6'
p455
aS'$10^{-3}$'
p456
aS'$u^{n+1}=u^n+\\alpha^n\\;\\delta u^n$'
p457
aS'@sect4{The main function}'
p458
aS'@sect3{Include files}'
p459
aS'MeshWorker::mesh_loop'
p460
aS'@sect3{The Scratch and Copy objects}'
p461
aS'MeshWorker::mesh_loop()'
p462
aS'@sect3{The <code>LaplaceProblem</code> class template}'
p463
aS'step-6'
p464
aS'<code>assemble_multigrid</code>'
p465
aS'<code>cell_worker</code>'
p466
aS'@ref mg_paper'
p467
aS'@sect3{The <code>LaplaceProblem</code> class implementation}'
p468
aS'@image html limit_level_difference_at_vertices.png ""'
p469
aS'Triangulation::limit_level_difference_at_vertices'
p470
aS'@sect4{LaplaceProblem::setup_system}'
p471
aS'<code>n_levels-1</code>'
p472
aS'MGTools::make_sparsity_pattern'
p473
aS'@ref Sparsity'
p474
aS'@sect4{LaplaceProblem::cell_worker}'
p475
aS'@sect4{LaplaceProblem::assemble_system}'
p476
aS'@sect4{LaplaceProblem::assemble_multigrid}'
p477
aS'@sect4{LaplaceProblem::solve}'
p478
aS'mg::SmootherRelaxation'
p479
aS'<code>initialize()</code>'
p480
aS'<code>set_steps()</code>'
p481
aS'<code>mg_smoother</code>'
p482
aS'@sect4{Postprocessing}'
p483
aS'step-6'
p484
aS'@sect4{LaplaceProblem::run}'
p485
aS'step-6'
p486
aS'<code>assemble_multigrid</code>'
p487
aS'@sect3{The main() function}'
p488
aS'step-6'
p489
aS'@sect3{Include files}'
p490
aS'@sect3{The integrator on each cell}'
p491
aS'MeshWorker::integration_loop()'
p492
aS'MeshWorker::LocalResults'
p493
aS'MeshWorker::DoFInfo'
p494
aS'(MeshWorker::LocalResults::n_matrices()).'
p495
aS'MeshWorker::LocalResults::matrix(),'
p496
aS'MeshWorker::IntegrationInfo'
p497
aS'LocalIntegrators::Laplace::cell_matrix()'
p498
aS'LocalIntegrators::L2::L2().'
p499
aS'MeshWorker::LocalResults::n_vectors()'
p500
aS'@sect3{The <code>LaplaceProblem</code> class template}'
p501
aS'step-6'
p502
aS'<code>assemble_multigrid</code>'
p503
aS'@ref mg_paper'
p504
aS'@sect3{The <code>LaplaceProblem</code> class implementation}'
p505
aS'@image html limit_level_difference_at_vertices.png ""'
p506
aS'Triangulation::limit_level_difference_at_vertices'
p507
aS'@sect4{LaplaceProblem::setup_system}'
p508
aS'<code>dirichlet_boundary</code>'
p509
aS'<code>n_levels-1</code>'
p510
aS'MGTools::make_sparsity_pattern'
p511
aS'@ref Sparsity'
p512
aS'@sect4{LaplaceProblem::assemble_system}'
p513
aS'MeshWorker::IntegrationInfoBox'
p514
aS'MeshWorker::DoFInfo'
p515
aS'@sect4{LaplaceProblem::assemble_multigrid}'
p516
aS'@sect4{LaplaceProblem::solve}'
p517
aS'mg::SmootherRelaxation'
p518
aS'<code>initialize()</code>'
p519
aS'<code>set_steps()</code>'
p520
aS'<code>mg_smoother</code>'
p521
aS'@sect4{Postprocessing}'
p522
aS'step-6'
p523
aS'step-6'
p524
aS'@sect4{LaplaceProblem::run}'
p525
aS'step-6'
p526
aS'<code>assemble_multigrid</code>'
p527
aS'@sect3{The main() function}'
p528
aS'step-6'
p529
aS'@sect3{Include files}'
p530
aS'step-8'
p531
aS'<code>std::cout</code> by a new stream <code>pcout</code>'
p532
aS'Utilities::MPI'
p533
aS'@ref GlossMPIProcess'
p534
aS'<code>GridTools</code>'
p535
aS'<code>DoFRenumbering</code>'
p536
aS'@sect3{The <code>ElasticProblem</code> class template}'
p537
aS'step-8'
p538
aS'<code>solve</code>'
p539
aS'@ref GlossMPICommunicator'
p540
aS'<code>n_mpi_processes</code>'
p541
aS'<code>this_mpi_process</code>'
p542
aS'@ref GlossMPIRank'
p543
aS'<code>n_mpi_processes</code>'
p544
aS'<code>1</code> and <code>0</code>'
p545
aS'<code>pcout</code>'
p546
aS'@ref GlossMPIProcess'
p547
aS'@ref GlossMPIRank'
p548
aS'<code>if (my_rank==0)</code>'
p549
aS'<code>this_mpi_process==0</code>'
p550
aS'<code>this_mpi_process</code>'
p551
aS'<code>pcout</code>'
p552
aS'<code>operator&lt;&lt;</code>'
p553
aS'step-8'
p554
aS'@sect3{Right hand side values}'
p555
aS'step-8'
p556
aS'@sect3{The <code>ElasticProblem</code> class implementation}'
p557
aS'@sect4{ElasticProblem::ElasticProblem}'
p558
aS'step-8'
p559
aS'Utilities::MPI'
p560
aS'(<code>std::cout</code>)'
p561
aS'@sect4{ElasticProblem::setup_system}'
p562
aS'@ref GlossSubdomainId'
p563
aS'GridTools::partition_triangulation()'
p564
aS'@note'
p565
aS'parallel::shared::Triangulation'
p566
aS'step-18'
p567
aS'DoFRenumbering::subdomain_wise().'
p568
aS'step-40'
p569
aS'parallel::distributed::Triangulation'
p570
aS'step-40'
p571
aS'step-18'
p572
aS'step-40'
p573
aS'@p locally_owned_dofs.'
p574
aS'@sect4{ElasticProblem::assemble_system}'
p575
aS'<code>owns</code>'
p576
aS'<code>compress()</code>'
p577
aS'AffineConstraints::condense()).'
p578
aS'step-4'
p579
aS'AffineConstraints::distribute_local_to_global()'
p580
aS'step-6'
p581
aS'step-6'
p582
aS'step-4'
p583
aS'MatrixTools::apply_boundary_values().'
p584
aS'<code>setup_system()</code>'
p585
aS'<code>subdomain</code> and <code>MPI process</code>'
p586
aS'step-8'
p587
aS'step-6'
p588
aS'step-3'
p589
aS'step-4'
p590
aS'MatrixTools::apply_boundary_values()'
p591
aS'<code>true</code>'
p592
aS'@sect4{ElasticProblem::solve}'
p593
aS'<code>setup_system()</code>'
p594
aS'step-40'
p595
aS'AffineConstraints::distributed().'
p596
aS'@sect4{ElasticProblem::refine_grid}'
p597
aS'<code>solve()</code>'
p598
aS'<code>solve()</code>'
p599
aS'<code>local_error_per_cell</code>'
p600
aS'<code>compress()</code>'
p601
aS'@sect4{ElasticProblem::output_results}'
p602
aS'step-8'
p603
aS'step-18'
p604
aS'step-40'
p605
aS'step-18'
p606
aS'step-40'
p607
aS'step-32'
p608
aS'<code>solve()</code>'
p609
aS'step-8'
p610
aS'@sect4{ElasticProblem::run}'
p611
aS'step-8'
p612
aS'<code>std::cout</code> by the <code>pcout</code>'
p613
aS'@sect3{The <code>main</code> function}'
p614
aS'<code>main()</code>'
p615
aS'<code>run</code>'
p616
aS'@sect3{The <code>PointHistory</code> class}'
p617
aS'<code>struct</code> rather than <code>class</code>'
p618
aS'@sect3{The stress-strain tensor}'
p619
aS'$C_{ijkl} = \\mu (\\delta_{ik} \\delta_{jl} + \\delta_{il}\n \\delta_{jk}) + \\lambda \\delta_{ij} \\delta_{kl}$'
p620
aS'$\\lambda$'
p621
aS'$\\mu$'
p622
aS'@sect3{Auxiliary functions}'
p623
aS'<code>inline</code>'
p624
aS'<code>shape_func</code> at quadrature point <code>q_point</code>'
p625
aS'<code>fe.system_to_component_index</code>'
p626
aS'<code>fe_values.shape_value</code>'
p627
aS'<code>fe_values.shape_grad</code>'
p628
aS'<code>fe_values</code>'
p629
aS'<code>fe_values.shape_grad_component(shape_func,q_point,i)</code>'
p630
aS'<code>i</code>'
p631
aS'<code>shape_func</code>'
p632
aS'<code>q_point</code>'
p633
aS'<code>fe_values.shape_grad_component</code>'
p634
aS'<code>fe.system_to_component_index</code>'
p635
aS'<code>fe_values.shape_grad</code>'
p636
aS'<code>i</code> of the <code>i</code>'
p637
aS'<code>SymmetricTensor</code>'
p638
aS'<code>fe_values.get_function_gradients</code>'
p639
aS'<code>SymmetricTensor</code>'
p640
aS'<code>dim</code>'
p641
aS'<code>Assert</code>'
p642
aS'<code>tan_angle==0</code>'
p643
aS'@sect3{The <code>TopLevel</code> class}'
p644
aS'<code>run</code>'
p645
aS'step-17'
p646
aS'step-44'
p647
aS'<code>user pointer</code>'
p648
aS'<code>void*</code>'
p649
aS'step-17'
p650
aS'step-17'
p651
aS'step-17'
p652
aS'<code>incremental_displacement</code>'
p653
aS'<code>MPI</code>'
p654
aS'step-17'
p655
aS'@sect3{The <code>BodyForce</code> class}'
p656
aS'<code>rho g</code>, where <code>rho</code>'
p657
aS'<code>g</code>'
p658
aS'<code>g</code>'
p659
aS'<code>dim</code>'
p660
aS'<code>dim-1</code>'
p661
aS'<code>vector_value</code>'
p662
aS'@sect3{The <code>IncrementalBoundaryValue</code> class}'
p663
aS'<code>Functions::ZeroFunction</code>'
p664
aS'@sect3{Implementation of the <code>TopLevel</code> class}'
p665
aS'*/'
p666
aS'@sect4{The public interface}'
p667
aS'<code>dim</code>'
p668
aS'<code>run()</code>'
p669
aS'@sect4{TopLevel::create_coarse_grid}'
p670
aS'@sect4{TopLevel::setup_system}'
p671
aS'step-17'
p672
aS'<code>do_initial_timestep</code>'
p673
aS'<code>do_timestep</code>'
p674
aS'step-17'
p675
aS'*/'
p676
aS'<code>DynamicSparsityPattern</code>'
p677
aS'step-11'
p678
aS'<code>SparsityPattern</code>'
p679
aS'<code>DoFHandler::max_couplings_between_dofs()</code>'
p680
aS'<code>SparsityPattern</code>'
p681
aS'<code>DoFTools::make_sparsity_pattern</code>'
p682
aS'<code>DynamicSparsityPattern</code>'
p683
aS'parallel::shared::Triangulation,'
p684
aS'<code>sparsity_pattern</code>'
p685
aS'@sect4{TopLevel::assemble_system}'
p686
aS'step-17'
p687
aS'<code>SymmetricTensor</code>'
p688
aS'step-17'
p689
aS'<code>FEValues</code>'
p690
aS'<code>eps_phi_i : C : eps_phi_j</code>'
p691
aS'step-17'
p692
aS'step-17'
p693
aS'<code>apply_boundary_values</code>'
p694
aS'<code>IncrementalBoundaryValues</code>'
p695
aS'<code>VectorTools::interpolate_boundary_values</code>'
p696
aS'@sect4{TopLevel::solve_timestep}'
p697
aS'@sect4{TopLevel::solve_linear_problem}'
p698
aS'<code>apply_boundary_values</code>'
p699
aS'<code>assemble_system</code>'
p700
aS'@sect4{TopLevel::output_results}'
p701
aS'<code>DataOut</code>'
p702
aS'step-17'
p703
aS'<code>DataOut</code>'
p704
aS'step-17'
p705
aS'@sect4{TopLevel::do_initial_timestep}'
p706
aS'step-17'
p707
aS'<code>pcout</code> instead of <code>std::cout</code>'
p708
aS'@sect4{TopLevel::do_timestep}'
p709
aS'@sect4{TopLevel::refine_initial_grid}'
p710
aS'@sect4{TopLevel::move_mesh}'
p711
aS'<code>cell-@>vertex_dof_index(v,d)</code>'
p712
aS'<code>d</code>th degree of freedom at vertex <code>v</code>'
p713
aS'<code>FESystem</code>'
p714
aS'<code>p</code>'
p715
aS'<code>QTrapezoid</code>'
p716
aS'<code>FEValues</code>'
p717
aS'<code>FEValues::get_function_values</code>'
p718
aS'<code>JxW</code>'
p719
aS'<code>FEValues</code>'
p720
aS'@ref GlossSupport'
p721
aS'FiniteElement::get_unit_support_points().'
p722
aS'<code>cell-&gt;n_vertices()*fe.dofs_per_vertex</code>'
p723
aS'<code>cell-@>vertex(i)</code>'
p724
aS'<code>fe.dofs_per_vertex</code>'
p725
aS'<code>Triangulation::n_vertices</code>'
p726
aS'<code>cell-@>vertex(v)</code>'
p727
aS'<code>Point@<dim@></code>'
p728
aS'@sect4{TopLevel::setup_quadrature_point_history}'
p729
aS'<code>user_pointer</code>'
p730
aS'<code>Assert</code>'
p731
aS'@sect4{TopLevel::update_quadrature_point_history}'
p732
aS'<code>FEValues</code>'
p733
aS'<code>FEValues</code>'
p734
aS'<code>new_stress</code>'
p735
aS'<code>SymmetricTensor</code>'
p736
aS'<code>Step18</code>'
p737
aS'step-17'
p738
aS'<code>main()</code>'
p739
aS'@sect3{Include files}'
p740
aS'step-6'
p741
aS'Particles::ParticleHandler'
p742
aS'Particles::DataOut'
p743
aS'@sect3{Global definitions}'
p744
aS'@ref GlossBoundaryIndicator'
p745
aS'@sect3{The main class}'
p746
aS'step-6'
p747
aS'step-6'
p748
aS'@sect3{The <code>CathodeRaySimulator</code> class implementation}'
p749
aS'@sect4{The <code>CathodeRaySimulator</code> constructor}'
p750
aS'Particles::ParticleHandler'
p751
aS'$10^{-4}$'
p752
aS'@sect4{The <code>CathodeRaySimulator::make_grid</code> function}'
p753
aS'<p align="center">\n     <img\n     src="https:www.dealii.org/images/steps/developer/step-19.geometry.png"\n          alt="The geometry used in this program"\n          width="600">\n   </p>'
p754
aS'$4\\times 2$'
p755
aS'$15=5\\times 3$'
p756
aS'step-14'
p757
aS'@ref GlossMaterialId'
p758
aS'Triangulation::create_triangulation()'
p759
aS'@sect4{The <code>CathodeRaySimulator::setup_system</code> function}'
p760
aS'step-6'
p761
aS'*/'
p762
aS'@sect4{The <code>CathodeRaySimulator::assemble_system</code> function}'
p763
aS'step-6'
p764
aS'$p$'
p765
aS'$\\varphi_i$'
p766
aS'$\\mathbf x_p$'
p767
aS'$p$'
p768
aS'$\\varphi_i$'
p769
aS'$dx$'
p770
aS'$K$'
p771
aS'$K$'
p772
aS'FEValues::JxW).'
p773
aS'@note'
p774
aS'Particles::ParticleHandler::particles_in_cell()'
p775
aS'Particles::ParticleHandler::n_particles_in_cell()'
p776
aS'step-70'
p777
aS'@sect4{CathodeRaySimulator::solve}'
p778
aS'step-6'
p779
aS'@sect4{CathodeRaySimulator::refine_grid}'
p780
aS'step-6'
p781
aS'@sect4{CathodeRaySimulator::create_particles}'
p782
aS'$\\mathbf E=\\nabla V$'
p783
aS'$|\\mathbf E| \\ge E_\\text{threshold}$'
p784
aS'$\\mathbf E \\cdot \\mathbf n < 0$'
p785
aS'@ref vector_valued'
p786
aS'Particles::Particle'
p787
aS'Particles::ParticleHandler'
p788
aS'@sect4{CathodeRaySimulator::move_particles}'
p789
aS'$\\mathbf E$'
p790
aS'@sect4{CathodeRaySimulator::track_lost_particle}'
p791
aS'$x$'
p792
aS'$x=4$'
p793
aS'$x$'
p794
aS'$1$'
p795
aS'$x=4$'
p796
aS'$0.5$'
p797
aS'$1.5$'
p798
aS'@sect4{CathodeRaySimulator::update_timestep_size}'
p799
aS'DiscreteTime::set_desired_time_step_size()'
p800
aS'@sect4{The <code>CathodeRaySimulator::output_results()</code> function}'
p801
aS'$V_h(\\mathbf x)$'
p802
aS'Particles::DataOut'
p803
aS'@sect4{CathodeRaySimulator::run}'
p804
aS'@sect3{The <code>main</code> function}'
p805
aS'step-6'
p806
aS'step-1'
p807
aS'@sect3{Mesh generation}'
p808
aS'step-1'
p809
aS'@sect3{Creation of a DoFHandler}'
p810
aS'<code>DoFHandler</code>'
p811
aS'<code>FE_Q</code>'
p812
aS'<code>FE_Q</code>'
p813
aS'<code>DoFHandler</code>'
p814
aS'(DoFHandler::distribute_dofs),'
p815
aS'DoFHandler::max_couplings_between_dofs()'
p816
aS'@ref Sparsity'
p817
aS'<code>.svg</code>'
p818
aS'<code>DoFTools::make_sparsity_pattern</code>'
p819
aS'@sect3{Renumbering of DoFs}'
p820
aS'$(i,j)$'
p821
aS'$i$'
p822
aS'$j$'
p823
aS'<code>DoFRenumbering::Cuthill_McKee</code>'
p824
aS'<code>DoFRenumbering</code>'
p825
aS'<code>DoFRenumbering</code>'
p826
aS'@sect3{The main function}'
p827
aS'<code>DoFHandler</code>'
p828
aS'@sect3{Include files}'
p829
aS'step-4'
p830
aS'<code>TensorFunction</code>'
p831
aS'step-7'
p832
aS'@sect3{The <code>MixedLaplaceProblem</code> class template}'
p833
aS'step-6'
p834
aS'<code>compute_error</code>'
p835
aS'@sect3{Right hand side, boundary values, and exact solution}'
p836
aS'<code>dim+1</code>'
p837
aS'<code>Function@<dim@></code>'
p838
aS'@sect3{The inverse permeability tensor}'
p839
aS'<code>KInverse</code>'
p840
aS'<code>Function</code>'
p841
aS'<code>TensorFunction</code>'
p842
aS'<code>dim</code>'
p843
aS'<code>TensorFunction</code>'
p844
aS'<code>Function</code>'
p845
aS'<code>value_list</code>'
p846
aS'step-5'
p847
aS'@sect3{MixedLaplaceProblem class implementation}'
p848
aS'@sect4{MixedLaplaceProblem::MixedLaplaceProblem}'
p849
aS'$X_h$'
p850
aS'<code>fe</code> variable. The <code>FESystem</code>'
p851
aS'<code>FESystem</code>'
p852
aS'<code>FE_RaviartThomas</code>'
p853
aS'<code>FE_DGQ</code>'
p854
aS'<code>dim</code>'
p855
aS'<code>dim+1</code>'
p856
aS'<code>dim</code>'
p857
aS'step-8'
p858
aS'<code>fe (FE_Q@<dim@>(1), dim)</code>'
p859
aS'<code>dim</code> copies of the <code>FE_Q(1)</code>'
p860
aS'@sect4{MixedLaplaceProblem::make_grid_and_dofs}'
p861
aS'$2 \\times 2$'
p862
aS'DoFTools::count_dofs_per_fe_component()'
p863
aS'<code>dim+1</code>'
p864
aS'DoFTools::count_dofs_per_fe_component()'
p865
aS'$x$'
p866
aS'<code>dofs_per_component[0]</code>'
p867
aS'$y$'
p868
aS'<code>dofs_per_component[1]</code>'
p869
aS'<code>dofs_per_component[dim]</code>'
p870
aS'@ref GlossPrimitive'
p871
aS'$x$'
p872
aS'$y$'
p873
aS'<code>dofs_per_component[c]</code>'
p874
aS'$0\\le c\\le \\text{dim}$'
p875
aS'<code>dim</code>'
p876
aS'<code>dofs_per_component</code>'
p877
aS'@note'
p878
aS'DoFTools::count_dofs_per_fe_block()'
p879
aS'step-22'
p880
aS'@ref GlossBlock'
p881
aS'@ref GlossComponent'
p882
aS'<code>system_matrix</code>'
p883
aS'<code>BlockDynamicSparsityPattern</code>'
p884
aS'<code>DynamicSparsityPattern</code>'
p885
aS'$2 \\times 2$'
p886
aS'<code>n_u</code> and <code>n_p</code>'
p887
aS'<code>dsp.collect_sizes ()</code>'
p888
aS'@sect4{MixedLaplaceProblem::assemble_system}'
p889
aS'<code>FEValues</code>'
p890
aS'@ref'
p891
aS'<code>dim</code>'
p892
aS'<code>dim</code>'
p893
aS'@sect3{Implementation of linear solvers and preconditioners}'
p894
aS'@sect4{MixedLaplace::solve}'
p895
aS'<code>op_M_inv</code>'
p896
aS'<code>op_S</code>'
p897
aS'<code>op_aS</code>'
p898
aS'<code>op_aS</code>'
p899
aS'$B^TM^{-1}F-G$'
p900
aS'$MU=-BP+F$'
p901
aS'@sect3{MixedLaplaceProblem class implementation (continued)}'
p902
aS'@sect4{MixedLaplace::compute_errors}'
p903
aS'<code>VectorTools::integrate_difference</code>'
p904
aS'step-7'
p905
aS'step-11'
p906
aS'<code>VectorTools::integrate_difference</code>'
p907
aS'<code>dim</code>'
p908
aS'<code>dim</code>'
p909
aS'<code>ComponentSelectFunction</code>'
p910
aS'<code>dim+1</code>'
p911
aS'<code>integrate_difference</code>'
p912
aS'step-7'
p913
aS'<code>QGauss@<dim@>(degree+1)</code>'
p914
aS'<code>degree+2</code>'
p915
aS'step-7'
p916
aS'@sect4{MixedLaplace::output_results}'
p917
aS'DataComponentInterpretation::component_is_part_of_vector'
p918
aS'DataOut<dim>::write_vtu()'
p919
aS'step-22'
p920
aS'@ref VVOutput'
p921
aS'@ref vector_valued'
p922
aS'step-7'
p923
aS'@sect4{MixedLaplace::run}'
p924
aS'@sect3{The <code>main</code> function}'
p925
aS'step-6'
p926
aS'step-4'
p927
aS'step-6'
p928
aS'step-20'
p929
aS'step-12'
p930
aS'step-20'
p931
aS'@sect3{Include files}'
p932
aS'<code>TensorFunction</code>'
p933
aS'<code>DiscreteTime</code>'
p934
aS'@sect3{The <code>TwoPhaseFlowProblem</code> class}'
p935
aS'step-20'
p936
aS'<ul>'
p937
aS'<li>'
p938
aS'<code>assemble_rhs_S</code>'
p939
aS'<code>assemble_rhs</code>'
p940
aS'<li>'
p941
aS'<code>get_maximal_velocity</code>'
p942
aS'<li>'
p943
aS'<code>project_back_saturation</code>'
p944
aS'</ul>'
p945
aS'<code>viscosity</code>'
p946
aS'$\\mu$'
p947
aS'<code>time</code>'
p948
aS'@sect3{Equation data}'
p949
aS'@sect4{Pressure right hand side}'
p950
aS'@sect4{Pressure boundary values}'
p951
aS'@sect4{Saturation boundary values}'
p952
aS'@sect4{Initial data}'
p953
aS'Functions::ZeroFunction'
p954
aS'<code>InitialValues</code>'
p955
aS'@sect3{The inverse permeability tensor}'
p956
aS'@sect4{Single curving crack permeability}'
p957
aS'step-20'
p958
aS'@sect4{Random medium permeability}'
p959
aS'<code>get_centers</code>'
p960
aS'@sect3{The inverse mobility and saturation functions}'
p961
aS'@sect3{Linear solvers and preconditioners}'
p962
aS'step-20'
p963
aS'step-20'
p964
aS'<code>src.size()</code>'
p965
aS'<code>vmult()</code>'
p966
aS'<code>src.size()</code>'
p967
aS'@sect3{<code>TwoPhaseFlowProblem</code> class implementation}'
p968
aS'step-20'
p969
aS'@sect4{TwoPhaseFlowProblem::TwoPhaseFlowProblem}'
p970
aS'$RT_k \\times DQ_k \\times DQ_k$'
p971
aS'$dt = 0$'
p972
aS'$dt$'
p973
aS'@sect4{TwoPhaseFlowProblem::make_grid_and_dofs}'
p974
aS'step-20'
p975
aS'@sect4{TwoPhaseFlowProblem::assemble_system}'
p976
aS'<code>assemble_rhs_S</code>'
p977
aS'step-20'
p978
aS'RandomMedium::KInverse'
p979
aS'FEValues::get_function_values'
p980
aS'step-9'
p981
aS'step-14'
p982
aS'step-15'
p983
aS'step-20'
p984
aS'@sect4{TwoPhaseFlowProblem::assemble_rhs_S}'
p985
aS'$(S^n,\\sigma)-(F(S^n) \\mathbf{v}^{n+1},\\nabla\n \\sigma)$'
p986
aS'$\\sigma$'
p987
aS'step-9'
p988
aS'@sect4{TwoPhaseFlowProblem::solve}'
p989
aS'step-20'
p990
aS'step-24'
p991
aS'GridTools::minimal_cell_diameter'
p992
aS'DiscreteTime::set_desired_next_time_step()'
p993
aS'@sect4{TwoPhaseFlowProblem::output_results}'
p994
aS'@sect4{TwoPhaseFlowProblem::project_back_saturation}'
p995
aS'$[0,1]$'
p996
aS'@sect4{TwoPhaseFlowProblem::get_maximal_velocity}'
p997
aS'@sect4{TwoPhaseFlowProblem::run}'
p998
aS'VectorTools::project'
p999
aS'AffineConstraints::close'
p1000
aS'VectorTools::project'
p1001
aS'<code>AffineConstraints<double>()</code>'
p1002
aS'DiscreteTime::advance_time()'
p1003
aS'DiscreteTime::get_previous_step_size()'
p1004
aS'DiscreteTime::get_next_step_size().'
p1005
aS'@sect3{The <code>main</code> function}'
p1006
aS'$RT_0\\times DQ_0 \\times DQ_0$'
p1007
aS'@sect3{Include files}'
p1008
aS'@sect3{Defining the inner preconditioner type}'
p1009
aS'step-4'
p1010
aS'@sect3{The <code>StokesProblem</code> class template}'
p1011
aS'step-20'
p1012
aS'<code>preconditioner_matrix</code>'
p1013
aS'<code>preconditioner_sparsity_pattern</code>'
p1014
aS'step-6'
p1015
aS'<code>hanging_node_constraints</code> into <code>constraints</code>'
p1016
aS'@sect3{Boundary values and right hand side}'
p1017
aS'step-20'
p1018
aS'VectorTools::interpolate_boundary_values'
p1019
aS'$(u,p)$'
p1020
aS'@sect3{Linear solvers and preconditioners}'
p1021
aS'@sect4{The <code>InverseMatrix</code> class template}'
p1022
aS'<code>InverseMatrix</code>'
p1023
aS'step-20'
p1024
aS'step-20'
p1025
aS'<code>InverseMatrix</code>'
p1026
aS'<code>vmult</code>'
p1027
aS'<code>vmult</code>'
p1028
aS'@sect4{The <code>SchurComplement</code> class template}'
p1029
aS'step-20'
p1030
aS'<code>PreconditionerType</code>'
p1031
aS'<code>InverseMatrix</code>'
p1032
aS'<code>SmartPointer</code> object <code>m_inverse</code>'
p1033
aS'@sect3{StokesProblem class implementation}'
p1034
aS'@sect4{StokesProblem::StokesProblem}'
p1035
aS'step-20'
p1036
aS'<code>degree+1</code>'
p1037
aS'<code>degree</code>'
p1038
aS'$Q_{degree+1}^d\\times Q_{degree}$'
p1039
aS'<code>Triangulation::MeshSmoothing</code>'
p1040
aS'@sect4{StokesProblem::setup_dofs}'
p1041
aS'step-20'
p1042
aS'step-21'
p1043
aS'<code>DoFRenumbering::component_wise</code>'
p1044
aS'<code>dim</code>'
p1045
aS'$x$'
p1046
aS'$y$'
p1047
aS'DoFRenumbering::component_wise'
p1048
aS'<code>block_component</code>'
p1049
aS'step-20'
p1050
aS'<code>DoFTools::count_dofs_per_fe_block</code>'
p1051
aS'<code>DoFTools::count_dofs_per_fe_component</code>'
p1052
aS'<code>block_component</code>'
p1053
aS'step-20'
p1054
aS'DoFTools::make_sparsity_pattern.'
p1055
aS'DoFTools::max_couplings_between_dofs'
p1056
aS'step-18'
p1057
aS'step-11'
p1058
aS'step-18'
p1059
aS'$(1,1)$'
p1060
aS'<code>dsp</code>'
p1061
aS'<code>sparsity_pattern</code>'
p1062
aS'step-20'
p1063
aS'@sect4{StokesProblem::assemble_system}'
p1064
aS'step-20'
p1065
aS'@ref'
p1066
aS'step-20'
p1067
aS'step-21'
p1068
aS'step-20'
p1069
aS'<code>dofs_per_cell</code>'
p1070
aS'<code>dofs_per_cell*dofs_per_cell</code>'
p1071
aS'<code>i</code>'
p1072
aS'<code>j</code>'
p1073
aS'$89^2=7921$'
p1074
aS'$89$'
p1075
aS'$i$'
p1076
aS'$j$'
p1077
aS'<code>dofs_per_cell</code>, but only up to <code>i</code>'
p1078
aS'$\\varphi_{i,\\textbf{u}}$'
p1079
aS'$\\varphi_{i,p}$'
p1080
aS'$i$'
p1081
aS'FiniteElement::system_to_component_index'
p1082
aS'<code>block(0,0)</code>'
p1083
aS'<code>InnerPreconditioner::type</code>'
p1084
aS'@sect4{StokesProblem::solve}'
p1085
aS'<code>solve</code>'
p1086
aS'step-20'
p1087
aS'<code>InverseMatrix</code>'
p1088
aS'<code>InnerPreconditioner::type</code>'
p1089
aS'step-20'
p1090
aS'$B A^{-1} F - G$'
p1091
aS'$B A^{-1} B^T$'
p1092
aS'$P^{-1}$'
p1093
aS'<code>InverseMatrix</code>'
p1094
aS'<code>vmult</code>'
p1095
aS'step-20'
p1096
aS'$p$'
p1097
aS'$B^T$'
p1098
aS'$A$'
p1099
aS'@sect4{StokesProblem::output_results}'
p1100
aS'<code>velocity</code> to the <code>dim</code>'
p1101
aS'<code>pressure</code>'
p1102
aS'$d$'
p1103
aS'$d$'
p1104
aS'<code>DataComponentInterpretation</code>'
p1105
aS'<code>dim</code>'
p1106
aS'DataComponentInterpretation::component_is_part_of_vector;'
p1107
aS'DataComponentInterpretation::component_is_scalar'
p1108
aS'step-20'
p1109
aS'@sect4{StokesProblem::refine_mesh}'
p1110
aS'<code>StokesProblem</code>'
p1111
aS'step-6'
p1112
aS'@sect4{StokesProblem::run}'
p1113
aS'$4 \\times 1$'
p1114
aS'$4 \\times 1\n \\times 1$'
p1115
aS'$R^2/R^3$'
p1116
aS'$(-2,2)\\times(-1,0)$'
p1117
aS'$(-2,2)\\times(0,1)\\times(-1,0)$'
p1118
aS'step-6'
p1119
aS'@sect3{The <code>main</code> function}'
p1120
aS'step-20'
p1121
aS'@sect3{Include files}'
p1122
aS'VectorTools::interpolate_boundary_values'
p1123
aS'MatrixTools::apply_boundary_values'
p1124
aS'VectorTools::project'
p1125
aS'$L^2$'
p1126
aS'VectorTools::create_right_hand_side'
p1127
aS'$(f^n,\\phi^n_i)$'
p1128
aS'<code>assemble_system</code>'
p1129
aS'MatrixCreator::create_mass_matrix'
p1130
aS'MatrixCreator::create_laplace_matrix'
p1131
aS'Utilities::int_to_string'
p1132
aS'<code>solution-XXX.vtu</code> where <code>XXX</code>'
p1133
aS'@sect3{The <code>WaveEquation</code> class}'
p1134
aS'$M$'
p1135
aS'$A$'
p1136
aS'$M+k^2\\theta^2A$'
p1137
aS'$U^n$'
p1138
aS'$V^n$'
p1139
aS'$U^n,V^n$'
p1140
aS'$U^{n-1},V^{n-1}$'
p1141
aS'<code>system_rhs</code>'
p1142
aS'<code>solve_u</code>'
p1143
aS'<code>solve_v</code>'
p1144
aS'<code>theta</code>'
p1145
aS'$\\theta$'
p1146
aS'@sect3{Equation data}'
p1147
aS'$u$'
p1148
aS'$v$'
p1149
aS'$u$'
p1150
aS'$v$'
p1151
aS'$u$'
p1152
aS'$v$'
p1153
aS'@sect3{Implementation of the <code>WaveEquation</code> class}'
p1154
aS'@sect4{WaveEquation::setup_system}'
p1155
aS'step-6'
p1156
aS'$M+k^2\\theta^2A$'
p1157
aS'$U^n$'
p1158
aS'@ref threads'
p1159
aS'DoFTools::make_hanging_node_constraints'
p1160
aS'@sect4{WaveEquation::solve_u and WaveEquation::solve_v}'
p1161
aS'$U^n$'
p1162
aS'$V^n$'
p1163
aS'@sect4{WaveEquation::output_results}'
p1164
aS'Utilities::int_to_string'
p1165
aS'step-15'
p1166
aS'@sect4{WaveEquation::run}'
p1167
aS'VectorTools::project'
p1168
aS'$L^2$'
p1169
aS'$T=5$'
p1170
aS'$U^n$'
p1171
aS'$(M^n + k^2\\theta^2 A^n)U^n =$'
p1172
aS'$(M^{n,n-1} - k^2\\theta(1-\\theta) A^{n,n-1})U^{n-1} + kM^{n,n-1}V^{n-1}\n +$'
p1173
aS'$k\\theta \\left[k \\theta F^n + k(1-\\theta) F^{n-1} \\right]$'
p1174
aS'$M^n=M^{n,n-1}=M$'
p1175
aS'$A^n=A^{n,n-1}=A$'
p1176
aS'$MU^{n-1} - k^2\\theta(1-\\theta) AU^{n-1} + kMV^{n-1}$'
p1177
aS'<code>system_rhs</code>'
p1178
aS'Function::set_time'
p1179
aS'Function::get_time.'
p1180
aS'$V^n$'
p1181
aS'$MV^{n-1} - k\\left[ \\theta A U^n +\n (1-\\theta) AU^{n-1}\\right]$'
p1182
aS'SparseMatrix::matrix_norm_square'
p1183
aS'$\\left<V^n,MV^n\\right>$'
p1184
aS'$\\left<U^n,AU^n\\right>$'
p1185
aS'@sect3{The <code>main</code> function}'
p1186
aS'@sect3{Include files}'
p1187
aS'@sect3{The "forward problem" class template}'
p1188
aS'step-23'
p1189
aS'$B$'
p1190
aS'$c_0$'
p1191
aS'$(\\nabla \\phi_i,\\nabla \\phi_j)$'
p1192
aS'@sect3{Equation data}'
p1193
aS'step-23'
p1194
aS'@sect3{Implementation of the <code>TATForwardProblem</code> class}'
p1195
aS'$k =\n \\frac hc$'
p1196
aS'@sect4{TATForwardProblem::setup_system}'
p1197
aS'step-23'
p1198
aS'step-6'
p1199
aS'step-10'
p1200
aS'step-23'
p1201
aS'$k=\\frac h{c_0}$'
p1202
aS'$h$'
p1203
aS'$h$'
p1204
aS'$h$'
p1205
aS'GridTools::minimal_cell_diameter'
p1206
aS'<code>std::sqrt(dim)</code>'
p1207
aS'step-23'
p1208
aS'SparseMatrix::add'
p1209
aS'<code>dim-1</code>'
p1210
aS'@sect4{TATForwardProblem::solve_p and TATForwardProblem::solve_v}'
p1211
aS'$u$'
p1212
aS'$p$'
p1213
aS'step-23'
p1214
aS'@sect4{TATForwardProblem::output_results}'
p1215
aS'step-23'
p1216
aS'@sect4{TATForwardProblem::run}'
p1217
aS'step-23'
p1218
aS'$v$'
p1219
aS'VectorTools::point_value'
p1220
aS'@sect3{The <code>main</code> function}'
p1221
aS'@sect3{Include files and global variables}'
p1222
aS'step-1'
p1223
aS'step-4'
p1224
aS'<code>base</code> -- <code>lac</code> -- <code>grid</code>'
p1225
aS'<code>dofs</code> -- <code>fe</code> -- <code>numerics</code>'
p1226
aS'@sect3{The <code>SineGordonProblem</code> class template}'
p1227
aS'step-3'
p1228
aS'step-4'
p1229
aS'step-23'
p1230
aS'step-24'
p1231
aS'<code>compute_nl_term</code>'
p1232
aS'<code>compute_nl_matrix</code>'
p1233
aS'<code>solution_update</code>'
p1234
aS'<code>M_x_velocity</code>'
p1235
aS'<code>output_timestep_skip</code>'
p1236
aS'$n$'
p1237
aS'$n$'
p1238
aS'@sect3{Initial conditions}'
p1239
aS'VectorTools::integrate_difference'
p1240
aS'step-23'
p1241
aS'FunctionTime::set_time()'
p1242
aS'FunctionTime::get_time()'
p1243
aS'<code>ExactSolution</code>'
p1244
aS'@sect3{Implementation of the <code>SineGordonProblem</code> class}'
p1245
aS'@sect4{SineGordonProblem::SineGordonProblem}'
p1246
aS'<code>SineGordonProblem</code>'
p1247
aS'<code>DoFHandler</code> to the <code>triangulation</code>'
p1248
aS'step-3'
p1249
aS'step-4'
p1250
aS'$\\theta$'
p1251
aS'$\\theta = 0$'
p1252
aS'$k \\le h$'
p1253
aS'$\\theta = \\frac{1}{2}$'
p1254
aS'$\\theta=1$'
p1255
aS'$h$'
p1256
aS'step-24'
p1257
aS'GridTools::minimal_cell_diameter'
p1258
aS'@sect4{SineGordonProblem::make_grid_and_dofs}'
p1259
aS'<code>dim</code>'
p1260
aS'<code>SineGordonProblem</code>'
p1261
aS'step-24'
p1262
aS'<code>MatrixCreator</code>'
p1263
aS'$M$'
p1264
aS'$A$'
p1265
aS'@sect4{SineGordonProblem::assemble_system}'
p1266
aS'step-23'
p1267
aS'step-24'
p1268
aS'<code>compute_nl_matrix</code>'
p1269
aS'<code>compute_nl_term</code>'
p1270
aS"$F'_h(U^{n,l})$"
p1271
aS'$U^{n,l}$'
p1272
aS'<code>solution</code>'
p1273
aS'$-F_h(U^{n,l})$'
p1274
aS'@sect4{SineGordonProblem::compute_nl_term}'
p1275
aS'$S(\\cdot,\\cdot)$'
p1276
aS'$\\theta\\ne 0$'
p1277
aS'<code>old_solution</code> and <code>solution</code>'
p1278
aS'$w_{\\mathrm{old}}$'
p1279
aS'$w_{\\mathrm{new}}$'
p1280
aS'$\\sin(\\cdot)$'
p1281
aS'<code>FEValues</code>'
p1282
aS'<code>get_function_values</code>'
p1283
aS'$t=t_{n-1}$'
p1284
aS'$t=t_n$'
p1285
aS'$\\int_K \\sin\\left[\\theta w_{\\mathrm{new}} +\n (1-\\theta) w_{\\mathrm{old}}\\right] \\,\\varphi_j\\,\\mathrm{d}x$'
p1286
aS'@sect4{SineGordonProblem::compute_nl_matrix}'
p1287
aS'$N(\\cdot,\\cdot)$'
p1288
aS'$F(\\cdot)$'
p1289
aS'<code>compute_nl_term</code>'
p1290
aS'$w_{\\mathrm{old}}$'
p1291
aS'$w_{\\mathrm{new}}$'
p1292
aS'<code>FEValues</code>'
p1293
aS'$\\int_K \\cos\\left[\\theta w_{\\mathrm{new}} +\n (1-\\theta) w_{\\mathrm{old}}\\right]\\, \\varphi_i\\,\n \\varphi_j\\,\\mathrm{d}x$'
p1294
aS'@sect4{SineGordonProblem::solve}'
p1295
aS'$\\delta U^{n,l}$'
p1296
aS'<code>solution_update</code> and used to update <code>solution</code>'
p1297
aS'<code>run</code>'
p1298
aS'@sect4{SineGordonProblem::output_results}'
p1299
aS'step-23'
p1300
aS'step-24'
p1301
aS'@sect4{SineGordonProblem::run}'
p1302
aS'$u_0(x)$'
p1303
aS'$U^0$'
p1304
aS'<code>InitialValues</code>'
p1305
aS'<code>Function</code>'
p1306
aS'$t_0$'
p1307
aS'$t=t_0$'
p1308
aS'$U^0$'
p1309
aS'$u_0(x)$'
p1310
aS'<code>VectorTools::project</code>'
p1311
aS'step-21'
p1312
aS'VectorTools::project'
p1313
aS'$\\delta U^{n,l}$'
p1314
aS'$U^{n,l+1}$'
p1315
aS'$\\|F_h(U^{n,l})\\|_2 \\le 10^{-6} \\|F_h(U^{n,0})\\|_2$'
p1316
aS'$U^n$'
p1317
aS'$t=t_n$'
p1318
aS'$V^n$'
p1319
aS'$V^n$'
p1320
aS'$MV^n$'
p1321
aS'<code>output_timestep_skip</code>'
p1322
aS'@sect3{The <code>main</code> function}'
p1323
aS'<code>SineGordonProblem</code>'
p1324
aS'step-6'
p1325
aS'@sect3{The <code>HeatEquation</code> class}'
p1326
aS'step-6'
p1327
aS'<code>refine_mesh</code>'
p1328
aS'@sect3{Equation data}'
p1329
aS'@sect3{The <code>HeatEquation</code> implementation}'
p1330
aS'$\\theta=1/2$'
p1331
aS'@sect4{<code>HeatEquation::setup_system</code>}'
p1332
aS'*/'
p1333
aS'@sect4{<code>HeatEquation::solve_time_step</code>}'
p1334
aS'@sect4{<code>HeatEquation::output_results</code>}'
p1335
aS'@sect4{<code>HeatEquation::refine_mesh</code>}'
p1336
aS'<code>refine_and_coarsen_fixed_fraction</code>'
p1337
aS'<code>triangulation.end()</code>'
p1338
aS'<code>triangulation.end_active(max_grid_level)</code>'
p1339
aS'<code>max_grid_level</code>'
p1340
aS'<code>setup_system()</code>'
p1341
aS'<code>setup_system</code>'
p1342
aS'@sect4{<code>HeatEquation::run</code>}'
p1343
aS'@note'
p1344
aS'<code>goto</code>'
p1345
aS'<code>goto</code>'
p1346
aS'<code>goto</code>'
p1347
aS'$MU^{n-1}-(1-\\theta)k_n AU^{n-1}$'
p1348
aS'$k_n\n \\left[ (1-\\theta)F^{n-1} + \\theta F^n \\right]$'
p1349
aS'VectorTools::create_right_hand_side'
p1350
aS'$F$'
p1351
aS'$M+k_n\\theta A$'
p1352
aS'<code>goto</code>'
p1353
aS'<code>goto</code>'
p1354
aS'<code>goto</code>'
p1355
aS'<code>while(true)</code>'
p1356
aS'<code>break</code>'
p1357
aS'<code>goto</code>'
p1358
aS'<code>goto</code>'
p1359
aS'@cite CodeComplete'
p1360
aS'step-1'
p1361
aS'<code>goto</code>'
p1362
aS'@sect3{The <code>main</code> function}'
p1363
aS'step-6'
p1364
aS'@sect3{Include files}'
p1365
aS'$hp$'
p1366
aS'@sect3{The main class}'
p1367
aS'step-6'
p1368
aS'step-6'
p1369
aS'<code>max_degree</code>'
p1370
aS'@sect3{Equation data}'
p1371
aS'$x+1$'
p1372
aS'$(x+1)(y+1)$'
p1373
aS'@sect3{Implementation of the main class}'
p1374
aS'@sect4{LaplaceProblem::LaplaceProblem constructor}'
p1375
aS'hp::FECollection'
p1376
aS'@sect4{LaplaceProblem::~LaplaceProblem destructor}'
p1377
aS'step-6'
p1378
aS'@sect4{LaplaceProblem::setup_system}'
p1379
aS'step-6'
p1380
aS'$hp$'
p1381
aS'@sect4{LaplaceProblem::assemble_system}'
p1382
aS'hp::FEValues'
p1383
aS'<code>dofs_per_cell</code>'
p1384
aS'<code>reinit</code>'
p1385
aS'@sect4{LaplaceProblem::solve}'
p1386
aS'$l_2$'
p1387
aS'@sect4{LaplaceProblem::postprocess}'
p1388
aS'$h$'
p1389
aS'$p$'
p1390
aS'FESeries::Fourier'
p1391
aS'<code>cell-@>active_fe_index()</code>'
p1392
aS'<code>float</code> or <code>double</code>'
p1393
aS'$h$'
p1394
aS'$p$'
p1395
aS'$p$'
p1396
aS'$h$'
p1397
aS'$p$'
p1398
aS'$p$'
p1399
aS'$h$'
p1400
aS'$h$'
p1401
aS'$p$'
p1402
aS'$h$'
p1403
aS'$p$'
p1404
aS'$h$'
p1405
aS'Triangulation::prepare_coarsening_and_refinement().'
p1406
aS'hp::Refinement::limit_p_level_difference()'
p1407
aS'DoFHandler::distribute_dofs().'
p1408
aS'@sect4{LaplaceProblem::create_coarse_grid}'
p1409
aS'step-14'
p1410
aS'$[-1,1]^d$'
p1411
aS'$4^d$'
p1412
aS'@sect4{LaplaceProblem::run}'
p1413
aS'step-6'
p1414
aS'@sect3{The main function}'
p1415
aS'<code>try</code>'
p1416
aS'@sect3{Include files}'
p1417
aS'<code>timer.h</code>'
p1418
aS'@p get_finest_common_cells'
p1419
aS'<code>run</code>'
p1420
aS'@sect3{Material data}'
p1421
aS"$\\chi_g\\nu\\Sigma_{f,g'}$"
p1422
aS"$\\Sigma_{s,g'\\to\n g}$"
p1423
aS'@p'
p1424
aS'<code>n_materials=8</code>'
p1425
aS'@sect3{The <code>EnergyGroup</code> class}'
p1426
aS"$g'=g$"
p1427
aS'$\\phi_g$'
p1428
aS"$\\phi_{g'}$"
p1429
aS'$\\phi_g$'
p1430
aS"$\\phi_{g'}$"
p1431
aS'$n-1$'
p1432
aS"$g'\\ge g$"
p1433
aS"$\\phi_{g'}$"
p1434
aS"$g'<g$"
p1435
aS"$g'$"
p1436
aS'@sect5{<code>EnergyGroup</code> public member functions}'
p1437
aS'<code>setup_linear_system</code>'
p1438
aS'<code>NeutronDiffusionProblem</code>'
p1439
aS'@sect5{<code>EnergyGroup</code> public data members}'
p1440
aS'@sect5{<code>EnergyGroup</code> private data members}'
p1441
aS'@sect5{<code>EnergyGroup</code> private member functions}'
p1442
aS'@sect4{Implementation of the <code>EnergyGroup</code> class}'
p1443
aS'@sect5{<code>EnergyGroup::setup_linear_system</code>}'
p1444
aS'<code>EnergyGroup::refine_grid</code>'
p1445
aS'<code>GridGenerator::subdivided_hyper_rectangle</code>'
p1446
aS'<code>NeutronDiffusionProblem::initialize_problem</code>'
p1447
aS'<code>true</code>'
p1448
aS'<code>VectorTools::interpolate_boundary_values</code>'
p1449
aS'@sect5{<code>EnergyGroup::assemble_system_matrix</code>}'
p1450
aS'<code>cell->material_id()</code>'
p1451
aS'<code>EnergyGroup::solve</code>'
p1452
aS'@sect5{<code>EnergyGroup::assemble_ingroup_rhs</code>}'
p1453
aS'<code>EnergyGroup</code>'
p1454
aS'@sect5{<code>EnergyGroup::assemble_cross_group_rhs</code>}'
p1455
aS'$g$'
p1456
aS"$g'$"
p1457
aS'<code>get_finest_common_cells</code>'
p1458
aS"$g=g'$"
p1459
aS'@sect5{<code>EnergyGroup::assemble_cross_group_rhs_recursive</code>}'
p1460
aS"$g'$"
p1461
aS'$g$'
p1462
aS"$g'$"
p1463
aS"$B_{c^{(k)}}^T \\cdots\n B_{c'}^T B_c^T$"
p1464
aS"$\\chi_g\\nu\\Sigma_{f,g'}$"
p1465
aS"$\\Sigma_{s,g'\\to g}$"
p1466
aS'<code>vmult</code>'
p1467
aS'<code>Tvmult</code>'
p1468
aS'$g$'
p1469
aS'<code>mmult</code>'
p1470
aS'@sect5{<code>EnergyGroup::get_fission_source</code>}'
p1471
aS'$k$'
p1472
aS'@sect5{<code>EnergyGroup::solve</code>}'
p1473
aS'@sect5{<code>EnergyGroup::estimate_errors</code>}'
p1474
aS'@sect5{<code>EnergyGroup::refine_grid</code>}'
p1475
aS'<code>GridRefinement</code>'
p1476
aS'@sect5{<code>EnergyGroup::output_results</code>}'
p1477
aS'<code>Utilities::int_to_string</code>'
p1478
aS'@sect3{The <code>NeutronDiffusionProblem</code> class template}'
p1479
aS'<code>EnergyGroup</code>'
p1480
aS'<code>run</code>'
p1481
aS'@ref threads'
p1482
aS'<code>declare_parameters</code>'
p1483
aS'<code>get_parameters</code>'
p1484
aS'step-29'
p1485
aS'@sect5{<code>NeutronDiffusionProblem</code> private member functions}'
p1486
aS'<code>EnergyGroup</code>'
p1487
aS'<code>run()</code>'
p1488
aS'@sect5{<code>NeutronDiffusionProblem</code> private member variables}'
p1489
aS'@sect4{Implementation of the <code>Parameters</code> class}'
p1490
aS'@sect4{Implementation of the <code>NeutronDiffusionProblem</code> class}'
p1491
aS'<code>NeutronDiffusionProblem</code>'
p1492
aS'@sect5{<code>NeutronDiffusionProblem::initialize_problem</code>}'
p1493
aS'<code>GridGenerator::subdivided_hyper_rectangle</code>'
p1494
aS'<ol>'
p1495
aS'<li>'
p1496
aS'<li>'
p1497
aS'<li>'
p1498
aS'<li>'
p1499
aS'</ol>'
p1500
aS'@sect5{<code>NeutronDiffusionProblem::get_total_fission_source</code>}'
p1501
aS'<code>EnergyGroup</code>'
p1502
aS'<ol>'
p1503
aS'<li>'
p1504
aS'</li>'
p1505
aS'<li>'
p1506
aS'</li>'
p1507
aS'</ol>'
p1508
aS'<code>std::atomic</code>'
p1509
aS'<code>std::atomic<double>::fetch_add()</code>'
p1510
aS'@sect5{<code>NeutronDiffusionProblem::refine_grid</code>}'
p1511
aS'Threads::TaskGroup'
p1512
aS'@sect5{<code>NeutronDiffusionProblem::run</code>}'
p1513
aS'<code>std::cout</code>'
p1514
aS'<code>restore_flags</code>'
p1515
aS'<code>ios_flags_saver</code>'
p1516
aS'Timer::start(),'
p1517
aS'Timer::cpu_time()'
p1518
aS'Timer::stop()'
p1519
aS'@sect3{The <code>main()</code> function}'
p1520
aS'<code>main()</code>'
p1521
aS'<code>NeutronDiffusionProblem::Parameters</code>'
p1522
aS'<code>NeutronDiffusionProblem</code>'
p1523
aS'@sect3{Include files}'
p1524
aS'<code>dealii</code><code>::</code>'
p1525
aS'@sect3{The <code>DirichletBoundaryValues</code> class}'
p1526
aS'$v$'
p1527
aS'$w$'
p1528
aS'<code>vector_value</code>'
p1529
aS'<code>vector_value_list</code>'
p1530
aS'$v$'
p1531
aS'$w$'
p1532
aS'@sect3{The <code>ParameterReader</code> class}'
p1533
aS'<code>declare_parameters</code>'
p1534
aS'<code>read_parameters</code>'
p1535
aS'@sect4{<code>ParameterReader::declare_parameters</code>}'
p1536
aS'<code>declare_parameters</code>'
p1537
aS'$d$'
p1538
aS'$[0,\\infty)$'
p1539
aS'Patterns::Integer'
p1540
aS'$\\omega$'
p1541
aS'$c$'
p1542
aS'$[0,\\infty)$'
p1543
aS'Patterns::Double'
p1544
aS'<code>FormatFlags::declare_parameters</code>'
p1545
aS'DataOutInterface<1>::declare_parameters'
p1546
aS'<code>declare_parameters</code>'
p1547
aS'<code>@<1@></code>'
p1548
aS'@sect4{<code>ParameterReader::read_parameters</code>}'
p1549
aS'<code>prm</code>'
p1550
aS'@sect3{The <code>ComputeIntensity</code> class}'
p1551
aS'$|u|=\\sqrt{v^2+w^2}$'
p1552
aS'$v$'
p1553
aS'$w$'
p1554
aS'$|u|$'
p1555
aS'DataOut::add_data_vector'
p1556
aS'DataPostprocessor::evaluate_scalar_field()'
p1557
aS'DataPostprocessor::evaluate_vector_field()'
p1558
aS'$|u|$'
p1559
aS'$v$'
p1560
aS'$w$'
p1561
aS'<code>ComputeIntensity</code>'
p1562
aS'$|u|$'
p1563
aS'$v$'
p1564
aS'$w$'
p1565
aS'$|u|$'
p1566
aS'DataOut::add_data_vector,'
p1567
aS'$|u|$'
p1568
aS'$v$'
p1569
aS'$w$'
p1570
aS'<code>computed_quantities</code>'
p1571
aS'<code>get_needed_update_flags</code>'
p1572
aS'<code>get_needed_update_flags</code>'
p1573
aS'$|u|$'
p1574
aS'$v$'
p1575
aS'$w$'
p1576
aS'$u$'
p1577
aS'`std::abs()`'
p1578
aS'`std::norm()`,'
p1579
aS'`std::norm()`'
p1580
aS'@sect3{The <code>UltrasoundProblem</code> class}'
p1581
aS'step-4'
p1582
aS'$v$'
p1583
aS'$w$'
p1584
aS'@sect4{<code>UltrasoundProblem::make_grid</code>}'
p1585
aS'$[0.4,0.6]$'
p1586
aS'@sect4{<code>UltrasoundProblem::setup_system</code>}'
p1587
aS'@sect4{<code>UltrasoundProblem::assemble_system</code>}'
p1588
aS'$\\Gamma_2$'
p1589
aS'$dim-1$'
p1590
aS'$\\Omega$'
p1591
aS'@ref'
p1592
aS'$\\phi$'
p1593
aS'$\\psi$'
p1594
aS'$\\alpha$'
p1595
aS'$\\beta$'
p1596
aS'$i$'
p1597
aS'$j$'
p1598
aS'FESystem::system_to_component_index,'
p1599
aS'step-8'
p1600
aS'@ref vector_valued'
p1601
aS'$i$'
p1602
aS'$j$'
p1603
aS'$\\phi$'
p1604
aS'$\\psi$'
p1605
aS'$\\phi$'
p1606
aS'$\\psi$'
p1607
aS'$\\Gamma_2$'
p1608
aS'$\\psi$'
p1609
aS'$\\phi$'
p1610
aS'$i$'
p1611
aS'$j$'
p1612
aS'$\\Gamma_1$'
p1613
aS'<code>DirichletBoundaryValues</code>'
p1614
aS'@sect4{<code>UltrasoundProblem::solve</code>}'
p1615
aS'<code>initialize</code>'
p1616
aS'<code>A_direct</code>'
p1617
aS'@sect4{<code>UltrasoundProblem::output_results</code>}'
p1618
aS'$v$'
p1619
aS'$w$'
p1620
aS'$|u|$'
p1621
aS'$|u|$'
p1622
aS'$v$'
p1623
aS'$w$'
p1624
aS'<code>ComputeIntensity</code>'
p1625
aS'<code>ComputeIntensity</code>'
p1626
aS'DataOut::parse_parameters'
p1627
aS'DataOutInterface<1>::declare_parameters'
p1628
aS'<code>ParameterReader::declare_parameters</code>'
p1629
aS'$v$'
p1630
aS'$w$'
p1631
aS'<code>add_data_vector</code>'
p1632
aS'<code>ComputeIntensity</code>'
p1633
aS'$|u|$'
p1634
aS'@sect4{<code>UltrasoundProblem::run</code>}'
p1635
aS'@sect4{The <code>main</code> function}'
p1636
aS'<code>main</code>'
p1637
aS'<code>ParameterReader</code>'
p1638
aS'<code>step-29.prm</code>'
p1639
aS'@sect3{Many new include files}'
p1640
aS'@sect3{The <code>Step3</code> class}'
p1641
aS'@sect4{Step3::Step3}'
p1642
aS'@sect4{Step3::make_grid}'
p1643
aS'step-1'
p1644
aS'step-2'
p1645
aS'$[-1,1] \\times [-1,1]$'
p1646
aS'<code>n_active_cells()</code>'
p1647
aS'@note'
p1648
aS'Triangulation::n_active_cells()'
p1649
aS'Triangulation::n_cells().'
p1650
aS'<code>triangulation.n_cells()</code>'
p1651
aS'@sect4{Step3::setup_system}'
p1652
aS'DoFHandler::distribute_dofs(),'
p1653
aS'step-2'
p1654
aS'@sect4{Step3::assemble_system}'
p1655
aS'step-10'
p1656
aS'step-11'
p1657
aS'step-12'
p1658
aS'$(\\varphi_i,f)$'
p1659
aS'$(\\nabla \\varphi_i, \\nabla\n \\varphi_j)$'
p1660
aS'<code>update_</code>'
p1661
aS'<code>JxW</code>'
p1662
aS'@note'
p1663
aS'<code>operator|</code>'
p1664
aS'<code>9|10</code>. In binary, <code>9=0b1001</code>'
p1665
aS'<code>0b</code>'
p1666
aS'<code>10=0b1010</code>'
p1667
aS'<code>0b1001|0b1010=0b1011</code>'
p1668
aS'<code>9|10=11</code>'
p1669
aS'<code>update_*</code>'
p1670
aS'<code>update_values=0b00001=1</code>'
p1671
aS'<code>update_gradients=0b00010=2</code>'
p1672
aS'<code>update_JxW_values=0b10000=16</code>'
p1673
aS'<code>operator|</code>'
p1674
aS'types::global_dof_index,'
p1675
aS'$i$'
p1676
aS'<code>fe_values.shape_grad(i,q_index)</code>'
p1677
aS'@<1,dim@>,'
p1678
aS'FEValues::JxW()'
p1679
aS'$i$'
p1680
aS'$j$'
p1681
aS'VectorTools::interpolate_boundary_values().'
p1682
aS'Functions::ZeroFunction,'
p1683
aS'VectorTools::interpolate_boundary_values()'
p1684
aS'<code>std::map</code>'
p1685
aS'@sect4{Step3::solve}'
p1686
aS'$10^{-12}$'
p1687
aS'<code>Vector@<double@></code>'
p1688
aS'@sect4{Step3::output_results}'
p1689
aS'@sect4{Step3::run}'
p1690
aS'<code>Step3</code>'
p1691
aS'@sect3{The <code>main</code> function}'
p1692
aS'@p deallog'
p1693
aS'@p deallog'
p1694
aS'@p deallog'
p1695
aS'@p deallog'
p1696
aS'@p logstream'
p1697
aS'LogStream::depth_console().'
p1698
aS'@p deallog,'
p1699
aS'@p deallog'
p1700
aS'step-22'
p1701
aS'@sect3{Equation data}'
p1702
aS'step-12'
p1703
aS'$x$'
p1704
aS'step-12'
p1705
aS'$\\beta$'
p1706
aS'$u(x,y)$'
p1707
aS'@sect3{Class: DGTransportEquation}'
p1708
aS'@sect3{Class: DGMethod}'
p1709
aS'step-12'
p1710
aS'<code>degree+1</code>'
p1711
aS'<code>2*degree+1</code>'
p1712
aS'@sect4{Function: assemble_system}'
p1713
aS'<code>assemble_system</code>'
p1714
aS'<code>assemble_system</code>'
p1715
aS'step-12'
p1716
aS'@p'
p1717
aS'@p neighbor_child_on_subface'
p1718
aS'@p neighbor_of_neighbor'
p1719
aS'@p neighbor_face_no'
p1720
aS'@sect3{Solver}'
p1721
aS'@sect3{Refinement}'
p1722
aS'step-12'
p1723
aS'@p anisotropic'
p1724
aS'<code>dim</code>'
p1725
aS'@p'
p1726
aS'<code>dim</code>'
p1727
aS'@sect3{The Rest}'
p1728
aS'step-1'
p1729
aS'<code>const unsigned int dim = 3;</code>'
p1730
aS'@sect3{Include files}'
p1731
aS'@sect3{Equation data}'
p1732
aS'step-22'
p1733
aS'$\\mathbf{n}\\cdot\\mathbf{u}=0$'
p1734
aS'<code>dim-1</code>'
p1735
aS'$\\textbf{n} \\cdot [p \\textbf{1} -\n \\eta\\varepsilon(\\textbf{u})]$'
p1736
aS'$T$'
p1737
aS'$\\mathbf{n} \\cdot \\kappa \\nabla T=0$'
p1738
aS'$\\eta,\\kappa$'
p1739
aS'$\\rho$'
p1740
aS'$\\beta$'
p1741
aS'@sect3{Linear solvers and preconditioners}'
p1742
aS'step-20'
p1743
aS'step-22'
p1744
aS'step-22'
p1745
aS'@sect4{The <code>InverseMatrix</code> class template}'
p1746
aS'<code>vmult</code>'
p1747
aS'step-22'
p1748
aS'<code>PreconditionerType</code>'
p1749
aS'step-22'
p1750
aS'<code>vmult</code>'
p1751
aS'<code>main()</code>'
p1752
aS'<code>main()</code>'
p1753
aS'<code>abort()</code>'
p1754
aS'@sect4{Schur complement preconditioner}'
p1755
aS'step-20'
p1756
aS'step-22'
p1757
aS'$P=\\left(\\begin{array}{cc} A & 0 \\\\ B & -S \\end{array}\\right)$'
p1758
aS'$P$'
p1759
aS'$\\tilde{P}$'
p1760
aS'$P^{-1} A$'
p1761
aS'step-20'
p1762
aS'step-22'
p1763
aS'$P^{-1}$'
p1764
aS'$M_p$'
p1765
aS'$\\eta^{-1}$'
p1766
aS'step-22'
p1767
aS'$A$'
p1768
aS'<em>'
p1769
aS'</em>'
p1770
aS'<code>vmult</code>'
p1771
aS'step-20'
p1772
aS'TrilinosWrappers::MPI::Vector'
p1773
aS'TrilinosWrappers::MPI::BlockVector,'
p1774
aS'TrilinosWrappers::MPI::Vector'
p1775
aS'TrilinosWrappers::MPI::Vector'
p1776
aS'step-40'
p1777
aS'<code>vmult</code>'
p1778
aS'$P^{-1}$'
p1779
aS'$Y=P^{-1}X$'
p1780
aS'$X,Y$'
p1781
aS'$A$'
p1782
aS'$Y_0={\\tilde\n A}^{-1}X_0$'
p1783
aS'$B$'
p1784
aS'$X_1-BY_0$'
p1785
aS'@sect3{The <code>BoussinesqFlowProblem</code> class template}'
p1786
aS'step-22'
p1787
aS'step-21'
p1788
aS'step-21'
p1789
aS'<code>if</code>'
p1790
aS'<code>run()</code>'
p1791
aS'@sect3{BoussinesqFlowProblem class implementation}'
p1792
aS'@sect4{BoussinesqFlowProblem::BoussinesqFlowProblem}'
p1793
aS'step-22'
p1794
aS'$Q_2\\times Q_1$'
p1795
aS'$Q_2$'
p1796
aS'@sect4{BoussinesqFlowProblem::get_maximal_velocity}'
p1797
aS'$L_\\infty$'
p1798
aS'<code>stokes_fe_values.get_function_values</code>'
p1799
aS'<code>stokes_fe_values[velocities].get_function_values</code>'
p1800
aS'<code>norm()</code>'
p1801
aS'$Q_1$'
p1802
aS'$Q_p$'
p1803
aS'FiniteElement::get_unit_support_points()'
p1804
aS'<code>stokes_degree+1</code>'
p1805
aS'@sect4{BoussinesqFlowProblem::get_extrapolated_temperature_range}'
p1806
aS'$\\Omega$'
p1807
aS'$\\nu$'
p1808
aS'$\\left(1+\\frac{k_n}{k_{n-1}} \\right)T^{n-1} + \\frac{k_n}{k_{n-1}}\n T^{n-2}$'
p1809
aS'$T^{k-2}$'
p1810
aS'$T^{k-1}$'
p1811
aS'@sect4{BoussinesqFlowProblem::compute_viscosity}'
p1812
aS'$\\nu|_K$'
p1813
aS'$K$'
p1814
aS'$\\gamma$'
p1815
aS'$\\beta$'
p1816
aS'$\\beta=0.017\\cdot dim$'
p1817
aS'$\\alpha$'
p1818
aS'$\\alpha=1$'
p1819
aS'$\\alpha = 2$'
p1820
aS'$\\nu|_K$'
p1821
aS'$\\nu|_K=5\\cdot 10^3\n \\cdot h_K$'
p1822
aS'@sect4{BoussinesqFlowProblem::setup_dofs}'
p1823
aS'step-22'
p1824
aS'$2\\times 2$'
p1825
aS'step-22'
p1826
aS'$\\mathbf{u}\\cdot\n \\mathbf{n}=0$'
p1827
aS'<code>no_normal_flux_boundaries</code>'
p1828
aS'step-22'
p1829
aS'$2\\times 2$'
p1830
aS'step-27'
p1831
aS'DoFTools::make_sparsity_pattern'
p1832
aS'<code>false</code>'
p1833
aS'$\\mathbf u^{n-1}$'
p1834
aS'$\\mathbf u^{n-2}$'
p1835
aS'$T^{n}$'
p1836
aS'$T^{n-1}$'
p1837
aS'$T^{n-2}$'
p1838
aS'@sect4{BoussinesqFlowProblem::assemble_stokes_preconditioner}'
p1839
aS'$\\eta^{-1}$'
p1840
aS'<code>grad_phi_u</code> and <code>phi_p</code>'
p1841
aS'step-22'
p1842
aS'$\\eta^{-1}$'
p1843
aS'step-27'
p1844
aS'@sect4{BoussinesqFlowProblem::build_stokes_preconditioner}'
p1845
aS'<code>rebuild_stokes_preconditioner</code>'
p1846
aS'<code>false</code>'
p1847
aS'<code>assemble_stokes_preconditioner</code>'
p1848
aS'$A$'
p1849
aS'$\\hat{A}$'
p1850
aS'$A$'
p1851
aS'TrilinosWrappers::PreconditionAMG'
p1852
aS'DoFTools::extract_constant_modes,'
p1853
aS'<code>dim</code>'
p1854
aS'<code>aggregation_threshold</code>'
p1855
aS'<code>aggregation_threshold</code>'
p1856
aS'<code>std::shared_ptr</code>'
p1857
aS'@sect4{BoussinesqFlowProblem::assemble_stokes_system}'
p1858
aS'<code>rebuild_stokes_matrix</code>'
p1859
aS'step-22'
p1860
aS'FEValues::reinit'
p1861
aS'<code>old_solution_values</code>'
p1862
aS'step-22'
p1863
aS'step-22'
p1864
aS'<code>rebuild_matrices</code>'
p1865
aS'<code>local_dof_indices</code>'
p1866
aS'@sect4{BoussinesqFlowProblem::assemble_temperature_matrix}'
p1867
aS'<code>EquationData::kappa</code>'
p1868
aS'@sect4{BoussinesqFlowProblem::assemble_temperature_system}'
p1869
aS'<code>update_hessians</code>'
p1870
aS'$n-1$'
p1871
aS'$n-2$'
p1872
aS'<code>gamma_values</code>'
p1873
aS'<code>stokes_fe_values[velocities].get_function_values</code>'
p1874
aS'@sect4{BoussinesqFlowProblem::solve}'
p1875
aS'<code>BlockSchurPreconditioner</code>'
p1876
aS'<code>InverseMatrix</code>'
p1877
aS'<code>Mp_preconditioner</code>'
p1878
aS'<code>Amg_preconditioner</code>'
p1879
aS'<code>*</code>'
p1880
aS'step-22'
p1881
aS'<code>assemble_temperature_system()</code>'
p1882
aS'$ch^{-2}$'
p1883
aS'$k_n$'
p1884
aS'$[1,1+k_nh^{-2}]$'
p1885
aS'<code>TrilinosWrappers::MPI::Vector</code>'
p1886
aS'@sect4{BoussinesqFlowProblem::output_results}'
p1887
aS'step-22'
p1888
aS'<code>dim</code>'
p1889
aS'@sect4{BoussinesqFlowProblem::refine_mesh}'
p1890
aS'<code>refine_and_coarsen_fixed_fraction</code>'
p1891
aS'$\\kappa$'
p1892
aS'<code>setup_dofs</code>'
p1893
aS'@sect4{BoussinesqFlowProblem::run}'
p1894
aS'<code>dim</code>'
p1895
aS'<code>goto</code>'
p1896
aS'<code>start_time_iteration</code>'
p1897
aS'<code>goto</code>'
p1898
aS'step-26'
p1899
aS'<code>old_temperature_solution</code>'
p1900
aS'@sect3{The <code>main</code> function}'
p1901
aS'step-32'
p1902
aS'Utilities::MPI::MPI_InitFinalize'
p1903
aS'<code>argc</code>'
p1904
aS'<code>argv</code>'
p1905
aS'@sect3{Include files}'
p1906
aS'parallel::distributed::SolutionTransfer'
p1907
aS'dealii::SolutionTransfer'
p1908
aS'step-40'
p1909
aS'@sect3{Equation data}'
p1910
aS'$\\frac{\\eta}{L}$'
p1911
aS'$L$'
p1912
aS'@sect3{Preconditioning the Stokes system}'
p1913
aS'step-31'
p1914
aS'<code>vmult</code>'
p1915
aS'step-31'
p1916
aS'step-20'
p1917
aS'@sect3{Definition of assembly data structures}'
p1918
aS'@ref threads'
p1919
aS'Step-31'
p1920
aS'<code>struct</code>'
p1921
aS'<code>struct</code>s and <code>class</code>'
p1922
aS'@ref FEValues'
p1923
aS'@ref FiniteElement'
p1924
aS'@ref Mapping'
p1925
aS'@ref UpdateFlags'
p1926
aS'<code>local_dof_indices</code>'
p1927
aS'@sect3{The <code>BoussinesqFlowProblem</code> class template}'
p1928
aS'step-31'
p1929
aS'step-31'
p1930
aS'step-31'
p1931
aS'<code>get_cfl_number()</code>'
p1932
aS'<code>get_entropy_variation()</code>'
p1933
aS'<code>get_extrapolated_temperature_range()</code>'
p1934
aS'step-31'
p1935
aS'<code>pcout</code>'
p1936
aS'step-31'
p1937
aS'parallel::distributed::Triangulation'
p1938
aS'step-40'
p1939
aS'<code>mapping</code>'
p1940
aS'TrilinosWrappers::MPI'
p1941
aS'<code>*_solution</code>'
p1942
aS'@ref GlossLocallyRelevantDof'
p1943
aS'@ref GlossLocallyOwnedDof'
p1944
aS'<code>computing_timer</code>'
p1945
aS'<code>setup_dofs</code>'
p1946
aS'@ref MTWorkStream'
p1947
aS'@sect3{BoussinesqFlowProblem class implementation}'
p1948
aS'@sect4{BoussinesqFlowProblem::Parameters}'
p1949
aS'@sect4{BoussinesqFlowProblem::BoussinesqFlowProblem}'
p1950
aS'step-31'
p1951
aS'<code>MPI_COMM_WORLD</code>'
p1952
aS'step-18'
p1953
aS'<code>pcout</code>'
p1954
aS'<code>std::cout</code>'
p1955
aS'<code>false</code> argument to <code>pcout</code>'
p1956
aS'step-31'
p1957
aS'<code>pcout</code>'
p1958
aS'<code>run()</code>'
p1959
aS'@sect4{The BoussinesqFlowProblem helper functions}'
p1960
aS'@sect5{BoussinesqFlowProblem::get_maximal_velocity}'
p1961
aS'step-31'
p1962
aS'<code>subdomain_id</code>'
p1963
aS'step-18'
p1964
aS'<code>cell-@>is_locally_owned()</code>'
p1965
aS'<code>double</code>'
p1966
aS'<code>Utilities::MPI::max</code>'
p1967
aS'Utilities::MPI'
p1968
aS'<code>Utilities::MPI::max</code>'
p1969
aS'@sect5{BoussinesqFlowProblem::get_cfl_number}'
p1970
aS'step-31'
p1971
aS'@sect5{BoussinesqFlowProblem::get_entropy_variation}'
p1972
aS'$\\|E(T)-\\bar{E}(T)\\|_\\infty$'
p1973
aS'$E$'
p1974
aS'$\\alpha=2$'
p1975
aS'$\\bar{E}(T)$'
p1976
aS'$\\|E(T)-\\bar{E}(T)\\|_\\infty =\n \\max\\big(E_{\\textrm{max}}(T)-\\bar{E}(T),\n \\bar{E}(T)-E_{\\textrm{min}}(T)\\big)$'
p1977
aS'<code>area</code>, <code>entropy_integrated</code>'
p1978
aS'Utilities::MPI::sum'
p1979
aS'Utilities::MPI::max'
p1980
aS'$L^\\infty$'
p1981
aS'@sect5{BoussinesqFlowProblem::get_extrapolated_temperature_range}'
p1982
aS'step-31'
p1983
aS'step-31'
p1984
aS'@sect5{BoussinesqFlowProblem::compute_viscosity}'
p1985
aS'step-31'
p1986
aS'$\\alpha=2$'
p1987
aS'@sect4{The BoussinesqFlowProblem setup functions}'
p1988
aS'step-31'
p1989
aS'step-31'
p1990
aS'step-31'
p1991
aS'TrilinosWrappers::BlockSparsityPattern,'
p1992
aS'<code>compress()</code>'
p1993
aS'@p stokes_partitioning'
p1994
aS'DoFTools::make_sparsity_pattern()'
p1995
aS'<code>subdomain_id</code>'
p1996
aS'<code>sp</code>'
p1997
aS'DoFHandler::distributed_dofs()'
p1998
aS'parallel::distributed::Triangulation'
p1999
aS'<code>std::locale("")</code>'
p2000
aS'TimerOutput::Scope'
p2001
aS'<code>IndexSet</code>'
p2002
aS'@ref distributed_paper'
p2003
aS'@p true)'
p2004
aS'@sect4{The BoussinesqFlowProblem assembly functions}'
p2005
aS'@ref threads'
p2006
aS'<ul>'
p2007
aS'<li>'
p2008
aS'<code>local_assemble_*</code>'
p2009
aS'step-31'
p2010
aS'<li>'
p2011
aS'<code>copy_local_to_global_*</code>'
p2012
aS'<li>'
p2013
aS'<code>assemble_*</code>'
p2014
aS'</ul>'
p2015
aS'@sect5{Stokes preconditioner assembly}'
p2016
aS'WorkStream::run'
p2017
aS'DoFHandler::begin_active()'
p2018
aS'DoFHandler::end()'
p2019
aS'IteratorFilters::LocallyOwnedCell,'
p2020
aS'WorkStream::run'
p2021
aS'WorkStream::run'
p2022
aS'step-13'
p2023
aS'<code>assemble_linear_system()</code>'
p2024
aS'<code>this</code>'
p2025
aS'<code>this</code>'
p2026
aS'WorkStream::run'
p2027
aS'<code>compress()</code>'
p2028
aS'step-31'
p2029
aS'@sect5{Stokes system assembly}'
p2030
aS'<code>compress()</code>'
p2031
aS'@sect5{Temperature matrix assembly}'
p2032
aS'step-'
p2033
aS'step-31'
p2034
aS'@sect5{Temperature right hand side assembly}'
p2035
aS'<code>project()</code>'
p2036
aS'step-'
p2037
aS'step-31'
p2038
aS'$T_m$'
p2039
aS'$E(T) =\n (T-T_m)^2$'
p2040
aS'WorkStream::run'
p2041
aS'<code>local_assemble_temperature_rhs</code>'
p2042
aS'@sect4{BoussinesqFlowProblem::solve}'
p2043
aS'step-31'
p2044
aS'<code>distributed_stokes_solution</code>'
p2045
aS'<code>operator=</code>'
p2046
aS'step-31'
p2047
aS'step-31'
p2048
aS'<code>false</code>'
p2049
aS'<code>LinearSolvers::BlockSchurPreconditioner</code>'
p2050
aS'SolverControl::NoConvergence.'
p2051
aS'<code>solve()</code>'
p2052
aS'<code>catch</code>'
p2053
aS'@p true'
p2054
aS'step-31'
p2055
aS'step-31'
p2056
aS'@sect4{BoussinesqFlowProblem::output_results}'
p2057
aS'step-31'
p2058
aS'DataPostprocessor::evaluate_vector_field(),'
p2059
aS'DataOut::build_patches().'
p2060
aS'step-29'
p2061
aS'$2 \\eta \\varepsilon(\\mathbf{u}) \\cdot \\varepsilon(\\mathbf{u})$'
p2062
aS'<code>output_results()</code>'
p2063
aS'step-31'
p2064
aS'FiniteElement::system_to_base_index'
p2065
aS'DataOut::build_patches(),'
p2066
aS'step-40'
p2067
aS'@p .vtu'
p2068
aS'@sect4{BoussinesqFlowProblem::refine_mesh}'
p2069
aS'<code>setup_dofs</code>'
p2070
aS'KellyErrorEstimator::estimate'
p2071
aS'step-40'
p2072
aS'parallel::distributed::GridRefinement,'
p2073
aS'step-40'
p2074
aS'step-31'
p2075
aS'parallel::distributed::SolutionTransfer'
p2076
aS'@p execute_coarsening_and_refinement()'
p2077
aS'@sect4{BoussinesqFlowProblem::run}'
p2078
aS'step-31'
p2079
aS'GridGenerator::hyper_shell'
p2080
aS'VectorTools::project'
p2081
aS'<code>old_temperature_solution</code>'
p2082
aS'<code>old_temperature_solution</code>'
p2083
aS'<code>old_old_temperature_solution</code>'
p2084
aS'@sect3{The <code>main</code> function}'
p2085
aS'step-31'
p2086
aS'<code>\\step-32.prm</code>'
p2087
aS'@sect3{Include files}'
p2088
aS'@sect3{Euler equation specifics}'
p2089
aS'@sect4{Component description}'
p2090
aS'<code>dim+2</code>'
p2091
aS'@sect4{Transformations between variables}'
p2092
aS'$N_2$'
p2093
aS'$O_2$'
p2094
aS'$\\frac 12 \\rho |\\mathbf v|^2\n = \\frac{|\\rho \\mathbf v|^2}{2\\rho}$'
p2095
aS'$\\rho v_i$'
p2096
aS'$v_i$'
p2097
aS'@sect4{EulerEquations::compute_flux_matrix}'
p2098
aS'$F(W)$'
p2099
aS'<code>dim</code>'
p2100
aS'<code>dim</code>'
p2101
aS'@sect4{EulerEquations::compute_normal_flux}'
p2102
aS'$\\alpha$'
p2103
aS'@sect4{EulerEquations::compute_forcing_vector}'
p2104
aS'$\\mathbf F(\\mathbf w)$'
p2105
aS'$\\mathbf G(\\mathbf w) = \\left(\n g_1\\rho, g_2\\rho, g_3\\rho, 0, \\rho \\mathbf g \\cdot \\mathbf v\n \\right)^T$'
p2106
aS'$\\mathbf g=(0,0,-1)^T$'
p2107
aS'$\\mathbf g=(0,-1)^T$'
p2108
aS'@sect4{Dealing with boundary conditions}'
p2109
aS'$\\mathbf w^-$'
p2110
aS'$\\mathbf j$'
p2111
aS'$\\mathbf w^+$'
p2112
aS'$\\mathbf H(\\mathbf{w}^+, \\mathbf{w}^-,\n \\mathbf{n})$'
p2113
aS'$c$'
p2114
aS'$w^-_c = j_c$'
p2115
aS'$w^-_c\n = w^+_c$'
p2116
aS'<code>Wminus</code>'
p2117
aS'<code>const</code>'
p2118
aS'<code>Wminus</code>'
p2119
aS'<code>Table@<2,Sacado::Fad::DFad@<double@> @></code>'
p2120
aS'<code>Wminus[q]</code>'
p2121
aS'<code>const</code>'
p2122
aS'@sect4{EulerEquations::compute_refinement_indicators}'
p2123
aS'<code>ConservationLaw</code>'
p2124
aS'<code>EulerEquation</code>'
p2125
aS'$\\eta_K=\\log\\left(1+|\\nabla\\rho(x_K)|\\right)$'
p2126
aS'$x_K$'
p2127
aS'$K$'
p2128
aS'@sect4{EulerEquations::Postprocessor}'
p2129
aS'$\\mathbf m=\\rho\\mathbf\n v$'
p2130
aS'$\\rho$'
p2131
aS'$E$'
p2132
aS'$\\mathbf v=\\frac{\\mathbf\n m}{\\rho}$'
p2133
aS'$p=(\\gamma-1)(E-\\frac{1}{2} \\rho |\\mathbf\n v|^2)$'
p2134
aS'$s=|\\nabla \\rho|^2$'
p2135
aS'$s$'
p2136
aS'step-29'
p2137
aS'<code>solution_gradients</code>'
p2138
aS'<code>get_needed_update_flags()</code>'
p2139
aS'<code>dim</code>'
p2140
aS'<code>first_momentum_component</code>'
p2141
aS'<code>density_component</code>'
p2142
aS'@sect3{Run time parameter handling}'
p2143
aS'<code>Parameters</code>'
p2144
aS'<code>declare_parameters()</code>'
p2145
aS'<code>parse_parameters()</code>'
p2146
aS'<code>declare_parameters()</code>'
p2147
aS'@sect4{Parameters::Solver}'
p2148
aS'$rtol \\geq 1$'
p2149
aS'ParameterHandler::declare_entry'
p2150
aS'<code>declare_parameters()</code>'
p2151
aS'@sect4{Parameters::Refinement}'
p2152
aS'@sect4{Parameters::Flux}'
p2153
aS'$\\mathbf{H}(\\mathbf{a},\\mathbf{b},\\mathbf{n}) =\n \\frac{1}{2}(\\mathbf{F}(\\mathbf{a})\\cdot \\mathbf{n} +\n \\mathbf{F}(\\mathbf{b})\\cdot \\mathbf{n} + \\alpha (\\mathbf{a} -\n \\mathbf{b}))$'
p2154
aS'$\\alpha$'
p2155
aS'$\\alpha$'
p2156
aS'$\\frac{h}{2\\delta T}$'
p2157
aS'$h$'
p2158
aS'$\\delta T$'
p2159
aS'@sect4{Parameters::Output}'
p2160
aS'@sect4{Parameters::AllParameters}'
p2161
aS'<code>declare_parameters()</code> and <code>parse_parameters()</code>'
p2162
aS'$x,y,z$'
p2163
aS'<code>dim+2</code>'
p2164
aS'<code>max_n_boundaries</code>'
p2165
aS'<code>max_n_boundaries</code>'
p2166
aS'<code>BoundaryCondition</code>'
p2167
aS'<code>n_components</code>'
p2168
aS'<code>BoundaryCondition</code>'
p2169
aS'<code>AllParameters::parse_parameters()</code>'
p2170
aS'<code>AllParameters</code>'
p2171
aS'@sect3{Conservation law class}'
p2172
aS'<code>assemble_system</code>'
p2173
aS'$Q_1$'
p2174
aS'$h\\rightarrow 0$'
p2175
aS'<code>old_solution</code>'
p2176
aS'<code>current_solution</code>'
p2177
aS'<code>old_solution</code>'
p2178
aS'step-17'
p2179
aS'step-18'
p2180
aS'@sect4{ConservationLaw::ConservationLaw}'
p2181
aS'@sect4{ConservationLaw::setup_system}'
p2182
aS'@sect4{ConservationLaw::assemble_system}'
p2183
aS'<code>JxW</code>'
p2184
aS'<code>assemble_face_terms</code>'
p2185
aS'DoFTools::make_hanging_node_constraints).'
p2186
aS'@sect4{ConservationLaw::assemble_cell_term}'
p2187
aS'$R_i = \\left(\\frac{\\mathbf{w}^{k}_{n+1} - \\mathbf{w}_n}{\\delta t} ,\n \\mathbf{z}_i \\right)_K $'
p2188
aS'$ +\n \\theta \\mathbf{B}(\\mathbf{w}^{k}_{n+1})(\\mathbf{z}_i)_K $'
p2189
aS'$ +\n (1-\\theta) \\mathbf{B}(\\mathbf{w}_{n}) (\\mathbf{z}_i)_K $'
p2190
aS'$\\mathbf{B}(\\mathbf{w})(\\mathbf{z}_i)_K =\n - \\left(\\mathbf{F}(\\mathbf{w}),\\nabla\\mathbf{z}_i\\right)_K $'
p2191
aS'$\n + h^{\\eta}(\\nabla \\mathbf{w} , \\nabla \\mathbf{z}_i)_K $'
p2192
aS'$\n - (\\mathbf{G}(\\mathbf {w}), \\mathbf{z}_i)_K $'
p2193
aS'$\\mathbf{w} = \\mathbf{w}^k_{n+1}$'
p2194
aS'$\\mathbf{w} = \\mathbf{w}_{n}$'
p2195
aS'$\\mathbf{z}_i$'
p2196
aS'$i$'
p2197
aS'$\\left(\\mathbf{F}(\\mathbf{w}), \\nabla\\mathbf{z}_i\\right)_K$'
p2198
aS'$\\int_K \\sum_{c=1}^{\\text{n\\_components}}\n \\sum_{d=1}^{\\text{dim}} \\mathbf{F}(\\mathbf{w})_{cd}\n \\frac{\\partial z^c_i}{x_d}$'
p2199
aS'$z^c_i$'
p2200
aS'$c$'
p2201
aS'$i$'
p2202
aS'$W_{n+1}^k$'
p2203
aS'$k$'
p2204
aS'<code>W</code>'
p2205
aS'$W_{n}$'
p2206
aS'<code>W_old</code>'
p2207
aS'<code>EulerEquations::n_components</code>'
p2208
aS'<code>std::vector@<std::vector@<T@> @></code>'
p2209
aS'Sacado::Fad::DFad'
p2210
aS'<code>independent_local_dof_values[i]</code>'
p2211
aS'$i$'
p2212
aS'<code>dofs_per_cell</code>'
p2213
aS'<code>W</code>, <code>W_old</code>, <code>grad_W</code>'
p2214
aS'<code>grad_W_old</code>'
p2215
aS'$W(x_q)=\\sum_i \\mathbf W_i \\Phi_i(x_q)$'
p2216
aS'$\\mathbf W_i$'
p2217
aS'$i$'
p2218
aS'$\\Phi_i(x_q)$'
p2219
aS'$i$'
p2220
aS'$x_q$'
p2221
aS'FEValues::get_function_values'
p2222
aS'FEValues::get_function_gradients,'
p2223
aS'<code>old_solution</code>'
p2224
aS'$\\mathbf{F}({\\mathbf w}^k_{n+1})$'
p2225
aS'$\\mathbf{G}({\\mathbf w}^k_{n+1})$'
p2226
aS'$\\mathbf{F}({\\mathbf w}_n)$'
p2227
aS'$\\mathbf{G}({\\mathbf w}_n)$'
p2228
aS'$i$'
p2229
aS'$R_i$'
p2230
aS'$i$'
p2231
aS'$\\mathbf{z}_i$'
p2232
aS'@ref'
p2233
aS'<code>component_i</code>'
p2234
aS'<code>right_hand_side</code>'
p2235
aS'<code>R_i.fastAccessDx(k)</code>'
p2236
aS'@sect4{ConservationLaw::assemble_face_term}'
p2237
aS'${\\mathbf W}$'
p2238
aS'$ {\\mathbf W}^+$'
p2239
aS'${\\mathbf W}^-$'
p2240
aS'${\\mathbf W} =\n {\\mathbf W}^k_{n+1}$'
p2241
aS'${\\mathbf W} = {\\mathbf W}_n$'
p2242
aS'<code>fe_v</code>'
p2243
aS'$\\mathbf{W}^-$'
p2244
aS'$\\mathbf{W}^+$'
p2245
aS'$\\mathbf w^+$'
p2246
aS'$\\mathbf w^-$'
p2247
aS'$\\mathbf H(\\mathbf w^+,\\mathbf\n w^-, \\mathbf n)$'
p2248
aS'@sect4{ConservationLaw::solve}'
p2249
aS'@sect4{ConservationLaw::compute_refinement_indicators}'
p2250
aS'<code>EulerEquation</code>'
p2251
aS'@sect4{ConservationLaw::refine_grid}'
p2252
aS'@sect4{ConservationLaw::output_results}'
p2253
aS'@sect4{ConservationLaw::run}'
p2254
aS'<code>main()</code>'
p2255
aS'@<='
p2256
aS'$\\mathbf w^{n+1}\\approx \\mathbf w^n +\n \\delta t \\frac{\\partial \\mathbf w}{\\partial t} \\approx \\mathbf w^n\n + \\delta t \\; \\frac{\\mathbf w^n-\\mathbf w^{n-1}}{\\delta t} = 2\n \\mathbf w^n - \\mathbf w^{n-1}$'
p2257
aS'@sect3{main()}'
p2258
aS'@sect3{Include files}'
p2259
aS'@sect3{Single and double layer operator kernels}'
p2260
aS'$G$'
p2261
aS'$\\nabla G$'
p2262
aS'$R = \\mathbf{y}-\\mathbf{x}$'
p2263
aS'@sect3{The BEMProblem class}'
p2264
aS'$L^2$'
p2265
aS'$L^\\infty$'
p2266
aS'$\\alpha(\\mathbf{x})$'
p2267
aS'$\\frac 12$'
p2268
aS'$\\frac 12$'
p2269
aS'$\\frac 34$'
p2270
aS'$\\frac 78$'
p2271
aS'$\\phi$'
p2272
aS'$\\alpha(\\mathbf x)$'
p2273
aS'$\\Omega$'
p2274
aS'$\\mathbf x$'
p2275
aS'Functions::ParsedFunction'
p2276
aS'Functions::ParsedFunction'
p2277
aS'@sect4{BEMProblem::BEMProblem and BEMProblem::read_parameters}'
p2278
aS'step-4'
p2279
aS'step-6'
p2280
aS'Functions::ParsedFunction,'
p2281
aS'Functions::ParsedFunction::declare_parameters'
p2282
aS'$x+y$'
p2283
aS'$x+y+z$'
p2284
aS'$\\phi_\\infty$'
p2285
aS'Functions::ParsedFunction'
p2286
aS'Functions::ParsedFunction::declare_parameters'
p2287
aS'Functions::ParsedFunction::parse_parameters'
p2288
aS'$\\int_{\\partial\\Omega}\n \\mathbf{v}\\cdot \\mathbf{n} d \\Gamma = 0$'
p2289
aS'@sect4{BEMProblem::read_domain}'
p2290
aS'step-5'
p2291
aS'step-6'
p2292
aS'Triangulation::set_manifold'
p2293
aS'Manifold::clone()),'
p2294
aS'<code>manifold</code>'
p2295
aS'@sect4{BEMProblem::refine_and_resize}'
p2296
aS'@sect4{BEMProblem::assemble_system}'
p2297
aS'$i$'
p2298
aS'$i$'
p2299
aS'$i$'
p2300
aS'$i$'
p2301
aS'$j$'
p2302
aS'$\\mathbf{\\tilde v}$'
p2303
aS'$i$'
p2304
aS'$i$'
p2305
aS'$j$'
p2306
aS'$\\alpha(\\mathbf{x}_i) \\phi_j(\\mathbf{x}_i)$'
p2307
aS'$\\phi_j(\\mathbf{x}_i)=\\delta_{ij}$'
p2308
aS'$\\alpha(\\mathbf{x}_i)$'
p2309
aS'@sect4{BEMProblem::solve_system}'
p2310
aS'@sect4{BEMProblem::compute_errors}'
p2311
aS'Vector::linfty_norm()'
p2312
aS'$\\frac 12$'
p2313
aS'$s(x)$'
p2314
aS'$w_i,q_i$'
p2315
aS'$f(x)$'
p2316
aS'$s(x)$'
p2317
aS'$f(x)$'
p2318
aS'$w_i$'
p2319
aS'$s(q_i)$'
p2320
aS'@p factor_out_singularity'
p2321
aS'$r$'
p2322
aS'@sect4{BEMProblem::compute_exterior_solution}'
p2323
aS'$\\phi$'
p2324
aS'$[-2,2]^{\\text{dim}}$'
p2325
aS'@sect4{BEMProblem::output_results}'
p2326
aS'@sect4{BEMProblem::run}'
p2327
aS'@sect3{The main() function}'
p2328
aS'@sect3{Include files}'
p2329
aS'@sect3{Run time parameters}'
p2330
aS'$\\phi$'
p2331
aS'<code>enum</code>'
p2332
aS'step-29'
p2333
aS'@sect3{Equation data}'
p2334
aS'@sect3{The <code>NavierStokesProjection</code> class}'
p2335
aS'@ref threads'
p2336
aS'@sect4{ <code>NavierStokesProjection::NavierStokesProjection</code> }'
p2337
aS'<code>Data_Storage</code>'
p2338
aS'@sect4{<code>NavierStokesProjection::create_triangulation_and_dofs</code>}'
p2339
aS'@sect4{ <code>NavierStokesProjection::initialize</code> }'
p2340
aS'@sect4{ <code>NavierStokesProjection::initialize_*_matrices</code> }'
p2341
aS'<code>dt</code>'
p2342
aS'Threads::new_task'
p2343
aS'<code>PairedIterators</code> and <code>IteratorPair</code>'
p2344
aS'@sect4{ <code>NavierStokesProjection::run</code> }'
p2345
aS'<code>t_0</code>'
p2346
aS'<code>dt</code>'
p2347
aS'<code>T</code>'
p2348
aS'<code>verbose</code>'
p2349
aS'@sect4{<code>NavierStokesProjection::diffusion_step</code>}'
p2350
aS'Threads::new_task'
p2351
aS'<code>dim</code>'
p2352
aS'@sect4{ <code>NavierStokesProjection::assemble_advection_term</code> }'
p2353
aS'@ref threads'
p2354
aS'@sect4{<code>NavierStokesProjection::projection_step</code>}'
p2355
aS'@sect4{ <code>NavierStokesProjection::update_pressure</code> }'
p2356
aS'@sect4{ <code>NavierStokesProjection::output_results</code> }'
p2357
aS'step-32'
p2358
aS'$L^2$'
p2359
aS'$\\text{curl} u$'
p2360
aS'step-29'
p2361
aS'step-33'
p2362
aS'$\\text{curl} u$'
p2363
aS'@sect3{ The main function }'
p2364
aS'@sect3{Include files}'
p2365
aS'step-4'
p2366
aS'PETScWrappers::MPI::Vector:'
p2367
aS'@sect3{The <code>EigenvalueProblem</code> class template}'
p2368
aS'step-4'
p2369
aS'$U_i=0$'
p2370
aS'@sect3{Implementation of the <code>EigenvalueProblem</code> class}'
p2371
aS'@sect4{EigenvalueProblem::EigenvalueProblem}'
p2372
aS'@sect4{EigenvalueProblem::make_grid_and_dofs}'
p2373
aS'$[-1,1]^d$'
p2374
aS'$u|_{\\partial\\Omega}=0$'
p2375
aS'<code>reinit()</code>'
p2376
aS'PETScWrappers::MPI::Vector,'
p2377
aS'PETScWrappers::MPI::Vector'
p2378
aS'PETScWrappers::MPI::Vector'
p2379
aS'step-40'
p2380
aS'@sect4{EigenvalueProblem::assemble_system}'
p2381
aS'$A^K_{ij} = \\int_K \\nabla\\varphi_i(\\mathbf x) \\cdot\n \\nabla\\varphi_j(\\mathbf x) + V(\\mathbf x)\\varphi_i(\\mathbf\n x)\\varphi_j(\\mathbf x)$'
p2382
aS'$M^K_{ij} = \\int_K \\varphi_i(\\mathbf\n x)\\varphi_j(\\mathbf x)$'
p2383
aS'$V(\\mathbf x)$'
p2384
aS'step-5'
p2385
aS'@sect4{EigenvalueProblem::solve}'
p2386
aS'$l_2$'
p2387
aS'$L_2(\\Omega)$'
p2388
aS'$L_\\infty(\\Omega)$'
p2389
aS'$\\|\\phi_i(\\mathbf x)\\|_{L^\\infty(\\Omega)}=1$'
p2390
aS'$\\|\\Phi\\|_{l_2}=1$'
p2391
aS'$\\phi_i$'
p2392
aS'$i$'
p2393
aS'$\\Phi_i$'
p2394
aS'$Q_1$'
p2395
aS'$\\phi_i(\\mathbf x)$'
p2396
aS'$\\max_{\\mathbf\n x}\\phi_i(\\mathbf x)=\\max_j (\\Phi_i)_j$'
p2397
aS'$L_\\infty$'
p2398
aS'$Q_k$'
p2399
aS'$k>1$'
p2400
aS'$\\max_{\\mathbf x}\\phi_i(\\mathbf x)\\ge\\max_j (\\Phi_i)_j$'
p2401
aS'@sect4{EigenvalueProblem::output_results}'
p2402
aS'$V(\\mathbf x)$'
p2403
aS'@sect4{EigenvalueProblem::run}'
p2404
aS'step-4'
p2405
aS'@sect3{The <code>main</code> function}'
p2406
aS'$Q_2$'
p2407
aS'@sect3{Equation data}'
p2408
aS'step-5'
p2409
aS'$a(\\mathbf\n x)=\\frac{1}{0.05 + 2\\|\\bf x\\|^2}$'
p2410
aS'@p value'
p2411
aS'@p number.'
p2412
aS'@p number.'
p2413
aS'<code>p[0]</code>'
p2414
aS'<code>p[0][j]</code>'
p2415
aS'@p value'
p2416
aS'@sect3{Matrix-free implementation}'
p2417
aS'<code>LaplaceOperator</code>'
p2418
aS'<code>m(), n()</code>'
p2419
aS'<code>vmult()</code>'
p2420
aS'MatrixFreeOperator::Base'
p2421
aS'<code>include/deal.II/matrix_free/operators.h</code>'
p2422
aS'MatrixFreeOperators::LaplaceOperator.'
p2423
aS'@ref threads'
p2424
aS'<code>double</code>'
p2425
aS'<code>fe_degree+1</code>'
p2426
aS'MatrixFreeOperators::LaplaceOperator'
p2427
aS'MatrixFreeOperators::Base'
p2428
aS'MatrixFreeOperators::Base'
p2429
aS'@note'
p2430
aS'<code>VectorizedArray<number></code>'
p2431
aS'<code>std::vector<VectorizedArray<number> ></code>'
p2432
aS'std::vector'
p2433
aS'@p LaplaceOperator'
p2434
aS'MatrixFreeOperators::Base,'
p2435
aS'@sect4{Computation of coefficient}'
p2436
aS'<code>coefficient_function.value</code>'
p2437
aS'@sect4{Local evaluation of Laplace operator}'
p2438
aS'<code>cell_loop</code>'
p2439
aS'MatrixFree::n_cell_batches().'
p2440
aS'<ol>'
p2441
aS'<li>'
p2442
aS'<li>'
p2443
aS'@p read_dof_values),'
p2444
aS'$u_\\mathrm{cell}$'
p2445
aS'<li>'
p2446
aS'$\\mathcal O(d^2 (p+1)^{d+1})$'
p2447
aS'$p$'
p2448
aS'$d$'
p2449
aS'$\\mathcal O(d (p+1)^{2d})$'
p2450
aS'<li>'
p2451
aS'@p get_gradient'
p2452
aS'@p submit_gradient'
p2453
aS'@p get_gradient.'
p2454
aS'@p submit_gradient'
p2455
aS'@p get_gradient'
p2456
aS'<li>'
p2457
aS'<li>'
p2458
aS'$v_\\mathrm{cell}$'
p2459
aS'@p distribute_local_to_global,'
p2460
aS'</ol>'
p2461
aS'Base::apply_add()'
p2462
aS'@p cell_loop'
p2463
aS'MatrixFree::cell_loop'
p2464
aS'MatrixFree::n_cell_batches().'
p2465
aS'step-48'
p2466
aS'AffineConstraints::distribute_local_to_global()'
p2467
aS'MatrixFreeOperators::Base'
p2468
aS'@ref GlossLocallyRelevantDof'
p2469
aS'LinearAlgebra::distributed::Vector::partitioners_are_compatible.'
p2470
aS'MatrixFreeOperators::Base'
p2471
aS'MatrixFreeOperators::Base.'
p2472
aS'MatrixFreeOperators::Base::set_constrained_entries_to_one()'
p2473
aS'@p set_constrained_entries_to_one()'
p2474
aS'FEEvaluation::evaluate,'
p2475
aS'FEEvalution::integrate,'
p2476
aS'FEEvaluation::get_dof_value()'
p2477
aS'FEEvaluation::get_dof_value()'
p2478
aS'FEEvaluation::submit_dof_value()'
p2479
aS'$\\mathcal\n O((p+1)^{d+1})$'
p2480
aS'$k$'
p2481
aS'$\\mathcal O((p+1)^{2d+1})$'
p2482
aS'$\\mathcal O((p+1)^{2d})$'
p2483
aS'$\\mathcal\n O((p+1)^{d+1})$'
p2484
aS'@sect3{LaplaceProblem class}'
p2485
aS'step-16'
p2486
aS'@p pcout'
p2487
aS'@p false'
p2488
aS'@p false'
p2489
aS'@sect4{LaplaceProblem::setup_system}'
p2490
aS'step-16'
p2491
aS'step-40'
p2492
aS'<code> MatrixFree </code>'
p2493
aS'<code>LaplaceOperator</code>'
p2494
aS'MatrixFreeOperators::Base,'
p2495
aS'<code>level = numbers::invalid_unsigned_int</code>'
p2496
aS'MatrixFree::AdditionalData::tasks_parallel_scheme'
p2497
aS'MatrixFree::AdditionalData::none.'
p2498
aS'step-16'
p2499
aS'@sect4{LaplaceProblem::assemble_rhs}'
p2500
aS'MatrixFreeOperators::Base,'
p2501
aS'MatrixFree::cell_loop'
p2502
aS'@sect4{LaplaceProblem::solve}'
p2503
aS'step-16'
p2504
aS'LinearAlgebra::distributed::Vector,'
p2505
aS'step-16'
p2506
aS'$[1.2 \\hat{\\lambda}_{\\max}/15,1.2 \\hat{\\lambda}_{\\max}]$'
p2507
aS'$\\hat{\\lambda}_{\\max}$'
p2508
aS'@p numbers::invalid_unsigned_int.'
p2509
aS'@p'
p2510
aS'@p smoothing_range'
p2511
aS'@ref mg_paper'
p2512
aS'MatrixFreeOperators::MGInterfaceOperator'
p2513
aS'MatrixFreeOperators::Base::vmult_interface_down()'
p2514
aS'MatrixFreeOperators::Base::vmult_interface_up()'
p2515
aS'@p'
p2516
aS'@p Tvmult()'
p2517
aS'step-16'
p2518
aS'@p preconditioner'
p2519
aS'step-16'
p2520
aS'LaplaceOperator::vmult'
p2521
aS'@sect4{LaplaceProblem::output_results}'
p2522
aS'step-5'
p2523
aS'DataOutBase::VtkFlags::compression_level'
p2524
aS'DataOutBase::VtkFlags::best_speed'
p2525
aS'@sect4{LaplaceProblem::run}'
p2526
aS'step-16'
p2527
aS'@sect3{The <code>main</code> function}'
p2528
aS'step-40'
p2529
aS'@sect3{Include files}'
p2530
aS'step-4'
p2531
aS'step-7'
p2532
aS'@sect3{The <code>LaplaceBeltramiProblem</code> class template}'
p2533
aS'<code>LaplaceProblem</code>'
p2534
aS'step-4'
p2535
aS'@p spacedim,'
p2536
aS'@p dim'
p2537
aS'<code>spacedim-1</code>'
p2538
aS'@p dim,'
p2539
aS'@p spacedim.'
p2540
aS'step-34'
p2541
aS'step-11'
p2542
aS'@sect3{Equation data}'
p2543
aS'step-4'
p2544
aS'step-7'
p2545
aS'<code>switch</code>'
p2546
aS'<code>if</code>'
p2547
aS'@sect3{Implementation of the <code>LaplaceBeltramiProblem</code> class}'
p2548
aS'step-4'
p2549
aS'@sect4{LaplaceBeltramiProblem::make_grid_and_dofs}'
p2550
aS'<code>spacedim</code>'
p2551
aS'GridGenerator::half_hyper_ball'
p2552
aS'GridGenerator::extract_boundary_mesh'
p2553
aS'GridGenerator::extract_boundary_mesh.'
p2554
aS'@sect4{LaplaceBeltramiProblem::assemble_system}'
p2555
aS'step-4'
p2556
aS'FEValues::shape_grad()'
p2557
aS'$\\nabla_K \\phi_i(x_q)$'
p2558
aS'$i$'
p2559
aS'$q$'
p2560
aS'@sect4{LaplaceBeltramiProblem::solve}'
p2561
aS'@sect4{LaplaceBeltramiProblem::output_result}'
p2562
aS'DataOut::add_data_vector()'
p2563
aS'DataOut::attach_dof_handler();'
p2564
aS'$Q_1$'
p2565
aS'DataOut::add_data_vector()'
p2566
aS'DataOut::build_patches()'
p2567
aS'@sect4{LaplaceBeltramiProblem::compute_error}'
p2568
aS'step-7'
p2569
aS'<code>Solution</code>'
p2570
aS'@sect4{LaplaceBeltramiProblem::run}'
p2571
aS'@sect3{The main() function}'
p2572
aS'<code>main()</code>'
p2573
aS'step-6'
p2574
aS'@sect3{The local integrators}'
p2575
aS'MeshWorker::IntegrationInfo<dim>.'
p2576
aS'MeshWorker::integration_loop().'
p2577
aS'LocalIntegrators::Laplace::compute_penalty()'
p2578
aS'VectorTools::integrate_difference().'
p2579
aS'@sect3{The main class}'
p2580
aS'MeshWorker::loop(),'
p2581
aS'<code>_mg</code>'
p2582
aS'Meshworker::VectorSelector'
p2583
aS'@sect3{Include files}'
p2584
aS'@sect3{The <code>Step4</code> class template}'
p2585
aS'<code>Step4</code>'
p2586
aS'@sect3{Right hand side and boundary values}'
p2587
aS'<code>value</code>'
p2588
aS'<code>double</code>'
p2589
aS'<code>value</code>'
p2590
aS'<code>component</code>'
p2591
aS'<code>p</code>'
p2592
aS'<code>value</code>'
p2593
aS'<code>value</code>'
p2594
aS'step-3'
p2595
aS'Functions::ZeroFunction'
p2596
aS'VectorTools::interpolate_boundary_values)'
p2597
aS'Function::value(),'
p2598
aS'step-5'
p2599
aS'$4(x^4+y^4)$'
p2600
aS'$4(x^4+y^4+z^4)$'
p2601
aS'<code>dim</code>'
p2602
aS'<code>RightHandSide@<2@></code>'
p2603
aS'<code>Point@<dim@></code>'
p2604
aS'$x$'
p2605
aS'$y$'
p2606
aS'$x^2+y^2$'
p2607
aS'$x^2+y^2+z^2$'
p2608
aS'@sect3{Implementation of the <code>Step4</code> class}'
p2609
aS'<code>dim</code>'
p2610
aS'<code>Step4@<2@></code> (in the <code>main</code>'
p2611
aS'<code>dim</code>'
p2612
aS'<code>RightHandSide@<dim@></code>'
p2613
aS'<code>RightHandSide@<2@></code>'
p2614
aS'<code>Step4@<3@></code>'
p2615
aS'<code>main()</code>'
p2616
aS'<code>Step4@<dim@></code>'
p2617
aS'<code>dim</code>'
p2618
aS'<code>Step4@<2@></code>'
p2619
aS'<code>Step4@<3@></code>'
p2620
aS'@sect4{Step4::Step4}'
p2621
aS'<code>Step4</code>'
p2622
aS'step-3'
p2623
aS'@sect4{Step4::make_grid}'
p2624
aS'$[-1,1]\\times [-1,1]$'
p2625
aS'$[-1,1] \\times [-1,1] \\times\n [-1,1]$'
p2626
aS'GridGenerator::hyper_cube(),'
p2627
aS'@sect4{Step4::setup_system}'
p2628
aS'<code>dim</code>'
p2629
aS'@sect4{Step4::assemble_system}'
p2630
aS'FEValues::JxW()'
p2631
aS'<code>active_cell_iterator</code>'
p2632
aS'step-3'
p2633
aS'<code>cell_matrix(i,j)</code>'
p2634
aS'$i$'
p2635
aS'$j$'
p2636
aS'<code>fe_values.shape_grad(i,q_index)</code>'
p2637
aS'<code>dim</code>'
p2638
aS'<code>Tensor@<1,dim@></code>'
p2639
aS'<code>fe_values.shape_grad(j,q_index)</code>'
p2640
aS'<code>dim</code>'
p2641
aS'<code>dim</code>'
p2642
aS'<code>dim</code>'
p2643
aS'Functions::ZeroFunction'
p2644
aS'<code>BoundaryValues</code>'
p2645
aS'VectorTools::interpolate_boundary_values()'
p2646
aS'@sect4{Step4::solve}'
p2647
aS'@sect4{Step4::output_results}'
p2648
aS'step-3'
p2649
aS'<code>dim</code>'
p2650
aS'@sect4{Step4::run}'
p2651
aS'@sect3{The <code>main</code> function}'
p2652
aS'step-3'
p2653
aS'<code>Step4@<2@></code>'
p2654
aS'<code>dim</code> replaced by <code>2</code>'
p2655
aS'<code>laplace_problem_2d</code>'
p2656
aS'<code>laplace_problem_2d</code>'
p2657
aS'@sect3{Include files}'
p2658
aS'Utilities::System'
p2659
aS'<code>std::cout</code>'
p2660
aS'<code>if</code>'
p2661
aS'@ref distributed'
p2662
aS'$N$'
p2663
aS'$[0,N)$'
p2664
aS'$[0,N)$'
p2665
aS'SparsityTools::distribute_sparsity_pattern.'
p2666
aS'parallel::distributed::Triangulation'
p2667
aS'parallel::distributed::GridRefinement'
p2668
aS'@sect3{The <code>LaplaceProblem</code> class template}'
p2669
aS'step-6'
p2670
aS'<code>mpi_communicator</code>'
p2671
aS'<code>pcout</code>'
p2672
aS'parallel::distributed::Triangulation'
p2673
aS'@sect3{The <code>LaplaceProblem</code> class implementation}'
p2674
aS'@sect4{Constructor}'
p2675
aS'step-6'
p2676
aS'<code>pcout</code>'
p2677
aS'@sect4{LaplaceProblem::setup_system}'
p2678
aS'step-40'
p2679
aS'step-6'
p2680
aS'@ref distributed'
p2681
aS'AffineConstraints::reinit'
p2682
aS'@ref distributed_paper'
p2683
aS'DoFTools::make_sparsity_pattern'
p2684
aS'@sect4{LaplaceProblem::assemble_system}'
p2685
aS'step-6'
p2686
aS'step-17'
p2687
aS'@ref GlossCompress'
p2688
aS'@sect4{LaplaceProblem::solve}'
p2689
aS'*/'
p2690
aS'@sect4{LaplaceProblem::refine_grid}'
p2691
aS'step-6'
p2692
aS'parallel::distributed::GridRefinement'
p2693
aS'@sect4{LaplaceProblem::output_results}'
p2694
aS'step-6'
p2695
aS'step-17'
p2696
aS'step-18'
p2697
aS'step-18'
p2698
aS'@sect4{LaplaceProblem::run}'
p2699
aS'step-6'
p2700
aS'<code>pcout</code> instead of <code>std::cout</code>'
p2701
aS'step-17'
p2702
aS'step-6'
p2703
aS'@sect4{main()}'
p2704
aS'<code>main()</code>'
p2705
aS'step-6'
p2706
aS'Utilities::MPI::MPI_InitFinalize.'
p2707
aS'Utilities::MPI::MPI_InitFinalize.'
p2708
aS'Utilities::MPI::MPI_InitFinalize::~MPI_InitFinalize().'
p2709
aS'Utilities::MPI::MPI_InitFinalize::~MPI_InitFinalize()'
p2710
aS'<code>PetscFinalize</code>'
p2711
aS'Utilities::MPI::MPI_InitFinalize::~MPI_InitFinalize()'
p2712
aS'<code>MPI_Finalize</code>'
p2713
aS'@sect3{Include files}'
p2714
aS'@sect3{The <code>ObstacleProblem</code> class template}'
p2715
aS'step-4'
p2716
aS'<code>complete_system_matrix</code>'
p2717
aS'<code>complete_system_rhs</code>'
p2718
aS'$B$'
p2719
aS'step-4'
p2720
aS'@sect3{Right hand side, boundary values, and the obstacle}'
p2721
aS'$\\mathbf x$'
p2722
aS'@<dim@>,'
p2723
aS'<code>RightHandSide</code>'
p2724
aS'<code>Obstacle</code>'
p2725
aS'$f=-10$'
p2726
aS'$u|_{\\partial\\Omega}=0$'
p2727
aS'@sect3{Implementation of the <code>ObstacleProblem</code> class}'
p2728
aS'@sect4{ObstacleProblem::ObstacleProblem}'
p2729
aS'@sect4{ObstacleProblem::make_grid}'
p2730
aS'$[-1,1]\\times [-1,1]$'
p2731
aS'@sect4{ObstacleProblem::setup_system}'
p2732
aS'$B$'
p2733
aS'@sect4{ObstacleProblem::assemble_system}'
p2734
aS'step-4'
p2735
aS'@sect4{ObstacleProblem::assemble_mass_matrix_diagonal}'
p2736
aS'$B$'
p2737
aS'$i$'
p2738
aS'$j$'
p2739
aS'$Q_1$'
p2740
aS'@sect4{ObstacleProblem::update_solution_and_constraints}'
p2741
aS'$\\Lambda^k_i +\n c([BU^k]_i - G_i) = \\Lambda^k_i + cB_i(U^k_i - [g_h]_i)$'
p2742
aS'$G_i = B_i[g_h]_i$'
p2743
aS'<code>complete_system_matrix</code> and <code>complete_system_rhs</code>'
p2744
aS'$Q_1$'
p2745
aS'<code>dof_touched</code>'
p2746
aS'@sect4{ObstacleProblem::solve}'
p2747
aS'$10^{-12}$'
p2748
aS'$10^{-3}$'
p2749
aS'@sect4{ObstacleProblem::output_results}'
p2750
aS'@sect4{ObstacleProblem::run}'
p2751
aS'@sect3{The <code>main</code> function}'
p2752
aS'@sect3{Include files}'
p2753
aS'<code>mkdir</code>'
p2754
aS'<code>mkdir</code>'
p2755
aS'@sect3{The <code>ConstitutiveLaw</code> class template}'
p2756
aS'$\\varepsilon(\\mathbf u)$'
p2757
aS'$\\sigma$'
p2758
aS'$E$'
p2759
aS'$\\nu$'
p2760
aS'$\\sigma_0$'
p2761
aS'$\\gamma$'
p2762
aS'$\\gamma =\n 0$'
p2763
aS'<code>set_sigma_0()</code>'
p2764
aS'$\\sigma_0$'
p2765
aS'$\\sigma_0$'
p2766
aS'<code>sigma_0</code>'
p2767
aS'$E,\n \\nu$'
p2768
aS'$\\lambda,mu$'
p2769
aS'$E,\\nu$'
p2770
aS'$\\kappa,\\mu$'
p2771
aS'$\\sigma_0$'
p2772
aS'$\\gamma$'
p2773
aS'@sect4{ConstitutiveLaw::get_stress_strain_tensor}'
p2774
aS'<code>PlasticityContactProblem::residual_nl_system()</code>'
p2775
aS'$C_\\mu : \\varepsilon = \\tau_D$'
p2776
aS'$C_\\kappa : \\varepsilon = \\kappa\n \\text{trace}(\\varepsilon) I = \\frac 13 \\text{trace}(\\tau) I$'
p2777
aS'@sect4{ConstitutiveLaw::get_linearized_stress_strain_tensors}'
p2778
aS'$u^{i-1}$'
p2779
aS'$i-1$'
p2780
aS'<code>strain_tensor</code>'
p2781
aS'$\\varepsilon(u^{i-1})$'
p2782
aS'PlasticityContactProblem::assemble_nl_system'
p2783
aS'@sect4{The <code>SphereObstacle</code> class}'
p2784
aS'$x=y=0.5, z=z_{\\text{surface}}+0.59$'
p2785
aS'$r=0.6$'
p2786
aS'$z_{\\text{surface}}$'
p2787
aS'<code>value</code>'
p2788
aS'$x,y$'
p2789
aS'@sect4{The <code>BitmapFile</code> and <code>ChineseObstacle</code> classes}'
p2790
aS'<code>BitmapFile</code>'
p2791
aS'Functions::InterpolatedUniformGridData,'
p2792
aS'std::vector'
p2793
aS'<code>hx,hy</code>'
p2794
aS'$x$'
p2795
aS'$y$'
p2796
aS'<code>nx,ny</code>'
p2797
aS'<code>get_value()</code>'
p2798
aS'$i,j$'
p2799
aS'<code>i*hx, j*hy</code>'
p2800
aS'$x,y$'
p2801
aS'$x,y$'
p2802
aS'$x,y$'
p2803
aS'$\\xi,\\eta$'
p2804
aS'@sect3{The <code>PlasticityContactProblem</code> class template}'
p2805
aS'step-41'
p2806
aS'<code>declare_parameters</code>'
p2807
aS'step-17'
p2808
aS'step-40'
p2809
aS'@ref distributed'
p2810
aS'<code>active_set</code>'
p2811
aS'<code>fraction_of_plastic_q_points_per_cell</code>'
p2812
aS'$B$'
p2813
aS'<code>const</code>'
p2814
aS'@sect3{Implementation of the <code>PlasticityContactProblem</code> class}'
p2815
aS'@sect4{PlasticityContactProblem::declare_parameters}'
p2816
aS'@sect4{The <code>PlasticityContactProblem</code> constructor}'
p2817
aS'@sect4{PlasticityContactProblem::make_grid}'
p2818
aS'<code>make_grid()</code>'
p2819
aS'GridGenerator::half_hyper_ball(),'
p2820
aS'@sect4{PlasticityContactProblem::setup_system}'
p2821
aS'TimerOutput::Scope'
p2822
aS'*/'
p2823
aS'*/'
p2824
aS'*/'
p2825
aS'@sect4{PlasticityContactProblem::compute_dirichlet_constraints}'
p2826
aS'<code>constraints_dirichlet_and_hanging_nodes</code>'
p2827
aS'<code>make_grid()</code>'
p2828
aS'@sect4{PlasticityContactProblem::assemble_mass_matrix_diagonal}'
p2829
aS'$i$'
p2830
aS'$j$'
p2831
aS'<code>q_point</code>'
p2832
aS'@sect4{PlasticityContactProblem::update_solution_and_constraints}'
p2833
aS'<code>solve_newton()</code>'
p2834
aS'@ref GlossSupport'
p2835
aS'<code>solution</code>'
p2836
aS'<code>operator&</code>'
p2837
aS'@sect4{PlasticityContactProblem::assemble_newton_system}'
p2838
aS'<code>ConstitutiveLaw::get_linearized_stress_strain_tensors()</code>'
p2839
aS'AffineConstraints::distribute_local_to_global(),'
p2840
aS'$\\varphi_i$'
p2841
aS'$I_\\Pi\\varepsilon(\\varphi_i)$'
p2842
aS'$A_{ij}=(I_\\Pi\\varepsilon(\\varphi_i),\\varepsilon(\\varphi_j))$'
p2843
aS'$F_i=([I_\\Pi-P_\\Pi\n         C]\\varepsilon(\\varphi_i),\\varepsilon(\\mathbf u))$'
p2844
aS'$u$'
p2845
aS'$I_\\Pi=P_\\Pi$'
p2846
aS'@sect4{PlasticityContactProblem::compute_nonlinear_residual}'
p2847
aS'<code>fraction_of_plastic_q_points_per_cell</code>'
p2848
aS'@sect4{PlasticityContactProblem::solve_newton_system}'
p2849
aS'AffineConstraints::set_zero'
p2850
aS'$x_0$'
p2851
aS'$x_1$'
p2852
aS'$x_2$'
p2853
aS'$x_0 = x_1/2 +\n   \\text{gap}/2$'
p2854
aS'step-40'
p2855
aS'step-40'
p2856
aS'step-41'
p2857
aS'$\\gamma$'
p2858
aS'@sect4{PlasticityContactProblem::solve_newton}'
p2859
aS'<code>previous_residual_norm</code>'
p2860
aS'$\\tilde{\\mathbf u}$'
p2861
aS'$10^{-10}$'
p2862
aS'@sect4{PlasticityContactProblem::refine_grid}'
p2863
aS'<code>compute_nonlinear_residual()</code>'
p2864
aS'@sect4{PlasticityContactProblem::move_mesh}'
p2865
aS'<code>run()</code>'
p2866
aS'@sect4{PlasticityContactProblem::output_results}'
p2867
aS'<code>.pvtu</code>'
p2868
aS'<code>.pvtu</code>'
p2869
aS'<code>.visit</code>'
p2870
aS'@sect4{PlasticityContactProblem::output_contact_force}'
p2871
aS'@sect4{PlasticityContactProblem::run}'
p2872
aS'<code>run()</code>'
p2873
aS'<code>solve_newton()</code>'
p2874
aS'@sect3{The <code>main</code> function}'
p2875
aS'<code>main()</code>'
p2876
aS'@sect3{Include files}'
p2877
aS'step-31'
p2878
aS'@sect3{Boundary and initial value classes}'
p2879
aS'step-21'
p2880
aS'@sect3{Permeability models}'
p2881
aS'step-21'
p2882
aS'@sect3{Physical quantities}'
p2883
aS'$\\lambda_t$'
p2884
aS'$F$'
p2885
aS'step-21'
p2886
aS'step-21'
p2887
aS"$\\mathbf u F'(S)$"
p2888
aS"$F'(S)$"
p2889
aS'@sect3{Helper classes for solvers and preconditioners}'
p2890
aS'step-31'
p2891
aS'@sect3{The TwoPhaseFlowProblem class}'
p2892
aS'step-21'
p2893
aS'step-33'
p2894
aS'step-31'
p2895
aS'step-31'
p2896
aS'<code>run()</code> and <code>solve()</code>'
p2897
aS'step-31'
p2898
aS'step-31'
p2899
aS'step-31'
p2900
aS'step-31'
p2901
aS'step-21'
p2902
aS'RandomMedium::KInverse'
p2903
aS'SingleCurvingCrack::KInverse).'
p2904
aS'@sect3{TwoPhaseFlowProblem<dim>::TwoPhaseFlowProblem}'
p2905
aS'step-21'
p2906
aS'step-31'
p2907
aS'$Q_2 \\times Q_1$'
p2908
aS'$Q_1$'
p2909
aS'@sect3{TwoPhaseFlowProblem<dim>::setup_dofs}'
p2910
aS'step-31'
p2911
aS'$2 \\times 2$'
p2912
aS'$-\\nabla \\cdot [\\mathbf K\n \\lambda_t(S)]\\nabla$'
p2913
aS'step-31'
p2914
aS'step-31'
p2915
aS'@sect3{Assembling matrices and preconditioners}'
p2916
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_darcy_preconditioner}'
p2917
aS'$\\left(\\mathbf{K} \\lambda_t\\right)^{-1}$'
p2918
aS'$\\left(\\mathbf{K} \\lambda_t\\right)$'
p2919
aS'step-22'
p2920
aS'$\\left(\\mathbf{K} \\lambda_t\\right)^{-1}$'
p2921
aS'$\\left(\\mathbf{K} \\lambda_t\\right)$'
p2922
aS'$\\mathbf K$'
p2923
aS'$\\lambda_t$'
p2924
aS'AffineConstraints::condense'
p2925
aS'MatrixTools::apply_boundary_values,'
p2926
aS'@sect4{TwoPhaseFlowProblem<dim>::build_darcy_preconditioner}'
p2927
aS'$S$'
p2928
aS'$\\mathbf{M}^{\\mathbf{u}}$'
p2929
aS'$\\mathbf{S}$'
p2930
aS'$\\mathbf{M}^{\\mathbf{u}}$'
p2931
aS'$\\tilde{\\mathbf{S}}^p$'
p2932
aS'TrilinosWrappers::PreconditionIC'
p2933
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_darcy_system}'
p2934
aS'step-22'
p2935
aS'step-31'
p2936
aS'step-22'
p2937
aS'FEValues::get_function_values'
p2938
aS'step-9'
p2939
aS'step-14'
p2940
aS'step-15'
p2941
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_saturation_system}'
p2942
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_saturation_matrix}'
p2943
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_saturation_rhs}'
p2944
aS'$\\nu$'
p2945
aS'step-31'
p2946
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_saturation_rhs_cell_term}'
p2947
aS'@sect4{TwoPhaseFlowProblem<dim>::assemble_saturation_rhs_boundary_term}'
p2948
aS'step-21'
p2949
aS'@sect3{TwoPhaseFlowProblem<dim>::solve}'
p2950
aS'step-31'
p2951
aS'$dt$'
p2952
aS'<code>current_macro_time_step</code>'
p2953
aS'$DT$'
p2954
aS'<code>old_macro_time_step</code>'
p2955
aS'$u^\\ast = u_p + dt \\frac{u_p-u_{pp}}{DT} = (1+dt/DT)u_p -\n dt/DT u_{pp}$'
p2956
aS'$u_p$'
p2957
aS'$u_{pp}$'
p2958
aS'<code>time_step</code>'
p2959
aS'$[0,1]$'
p2960
aS'@sect3{TwoPhaseFlowProblem<dim>::refine_mesh}'
p2961
aS'@sect3{TwoPhaseFlowProblem<dim>::output_results}'
p2962
aS'step-31'
p2963
aS'@sect3{Tool functions}'
p2964
aS'@sect4{TwoPhaseFlowProblem<dim>::determine_whether_to_solve_for_pressure_and_velocity}'
p2965
aS'<code>AOS_threshold</code>'
p2966
aS'$5.0$'
p2967
aS'<code>solve()</code>'
p2968
aS'@sect4{TwoPhaseFlowProblem<dim>::project_back_saturation}'
p2969
aS'$[0,1]$'
p2970
aS'$F(S)$'
p2971
aS"$F'(S)$"
p2972
aS"$F'(S)<0$"
p2973
aS'$S<0$'
p2974
aS'@sect4{TwoPhaseFlowProblem<dim>::get_max_u_F_prime}'
p2975
aS"$\\|\\mathbf{u} F'(S)\\|_{L_\\infty(\\Omega)}$"
p2976
aS'@sect4{TwoPhaseFlowProblem<dim>::get_extrapolated_saturation_range}'
p2977
aS'step-31'
p2978
aS'$[0,1]$'
p2979
aS'step-31'
p2980
aS'@sect4{TwoPhaseFlowProblem<dim>::compute_viscosity}'
p2981
aS'step-31'
p2982
aS'$\\mathbf u$'
p2983
aS"$\\mathbf u F'(S)$"
p2984
aS'@sect3{TwoPhaseFlowProblem<dim>::run}'
p2985
aS'<code>solve()</code>'
p2986
aS'<code>goto start_time_iteration</code>'
p2987
aS'step-31'
p2988
aS'@sect3{The <code>main()</code> function}'
p2989
aS'step-31'
p2990
aS'@sect3{Run-time parameters}'
p2991
aS'@sect4{Finite Element system}'
p2992
aS'$\\mathbf{u}$'
p2993
aS'$\\widetilde{p}$'
p2994
aS'$\\widetilde{J}$'
p2995
aS'$\\widetilde{p}$'
p2996
aS'$\\widetilde{J}$'
p2997
aS'$\\widetilde{p}$'
p2998
aS'$\\widetilde{J}$'
p2999
aS'@sect4{Geometry}'
p3000
aS'@sect4{Materials}'
p3001
aS'$ \\mu $'
p3002
aS'$ \\nu $'
p3003
aS'@sect4{Linear solver}'
p3004
aS'@sect4{Nonlinear solver}'
p3005
aS'@sect4{Time}'
p3006
aS'$ \\varDelta t $'
p3007
aS'@sect4{All parameters}'
p3008
aS'@sect3{Time class}'
p3009
aS'@sect3{Compressible neo-Hookean material within a three-field formulation}'
p3010
aS'$ \\Psi =\n \\Psi_{\\text{iso}}(\\overline{\\mathbf{b}}) + \\Psi_{\\text{vol}}(\\widetilde{J})\n $'
p3011
aS'$\n \\Psi_{\\text{iso}}(\\overline{\\mathbf{b}}) = c_{1} [\\overline{I}_{1} - 3] $'
p3012
aS'$ c_{1} = \\frac{\\mu}{2} $'
p3013
aS'$\\overline{I}_{1}$'
p3014
aS'$\\overline{I}_1 \\dealcoloneq \\textrm{tr}(\\overline{\\mathbf{b}})$'
p3015
aS'$ \\Psi_{\\text{vol}}(\\widetilde{J}) = \\kappa \\frac{1}{4} [ \\widetilde{J}^2 -\n 1 - 2\\textrm{ln}\\; \\widetilde{J} ]$'
p3016
aS'$\\kappa \\dealcoloneq \\lambda +\n 2/3 \\mu$'
p3017
aS'$\\lambda$'
p3018
aS'$F$'
p3019
aS'$\\widetilde{p}$'
p3020
aS'$\\widetilde{J}$'
p3021
aS'$\\boldsymbol{\\tau}\n = \\boldsymbol{\\tau}_{\\textrm{iso}} + \\boldsymbol{\\tau}_{\\textrm{vol}}$'
p3022
aS'$\\mathfrak{c}$'
p3023
aS'$\\Psi$'
p3024
aS'$ J\n \\mathfrak{c}_{ijkl} = F_{iA} F_{jB} \\mathfrak{C}_{ABCD} F_{kC} F_{lD}$'
p3025
aS'$ \\mathfrak{C} = 4 \\frac{\\partial^2 \\Psi(\\mathbf{C})}{\\partial\n \\mathbf{C} \\partial \\mathbf{C}}$'
p3026
aS'$\\widetilde{J}$'
p3027
aS'$\\frac{\\partial\n \\Psi_{\\text{vol}}(\\widetilde{J})}{\\partial \\widetilde{J}}$'
p3028
aS'$\\widetilde{J}$'
p3029
aS'$\\frac{\\partial^2\n \\Psi_{\\textrm{vol}}(\\widetilde{J})}{\\partial \\widetilde{J} \\partial\n \\widetilde{J}}$'
p3030
aS'$\\kappa$'
p3031
aS'$c_1$'
p3032
aS'$\\boldsymbol{\\tau}_{\\textrm{vol}}$'
p3033
aS'$\\boldsymbol{\\tau}_{\\textrm{iso}} =\n \\mathcal{P}:\\overline{\\boldsymbol{\\tau}}$'
p3034
aS'$\\overline{\\boldsymbol{\\tau}}$'
p3035
aS'$J\n \\mathfrak{c}_\\textrm{vol}$'
p3036
aS'$J\n \\mathfrak{c}_\\textrm{iso}$'
p3037
aS'$\\overline{\\mathfrak{c}}$'
p3038
aS'@sect3{Quadrature point history}'
p3039
aS'step-18'
p3040
aS'<code> PointHistory </code>'
p3041
aS'$\\boldsymbol{\\tau}$'
p3042
aS'$J\\mathfrak{c}$'
p3043
aS'$\\textrm{Grad}\\mathbf{u}_{\\textrm{n}}$'
p3044
aS'$\\widetilde{p}$'
p3045
aS'$\\widetilde{J}$'
p3046
aS'$\\mathbf{F}$'
p3047
aS'$\\textrm{Grad}\\ \\mathbf{u}$'
p3048
aS'$\\mathbf{F}(\\mathbf{u}) = \\mathbf{I} + \\textrm{Grad}\\ \\mathbf{u}$'
p3049
aS'$\\mathbf{I} +\n \\textrm{Grad}\\ \\mathbf{u}$'
p3050
aS'$I$'
p3051
aS'<code>I + Grad_u_n</code>'
p3052
aS'<code>Grad_u_n</code>'
p3053
aS'$I$'
p3054
aS'$\\mathbf{\\tau}$'
p3055
aS'$J\\mathfrak{c}$'
p3056
aS'$J\\mathfrak{c}$'
p3057
aS'@sect3{Quasi-static quasi-incompressible finite-strain solid}'
p3058
aS'<code>run()</code>'
p3059
aS'@ref threads'
p3060
aS'step-18'
p3061
aS'$\\mathbf{u}$'
p3062
aS'$\\widetilde{p}$'
p3063
aS'$\\widetilde{J}$'
p3064
aS'@sect3{Implementation of the <code>Solid</code> class}'
p3065
aS'@sect4{Public interface}'
p3066
aS'$Q_n \\times DGPM_{n-1} \\times DGPM_{n-1}$'
p3067
aS'$Q_2 \\times DGPM_1 \\times DGPM_1$'
p3068
aS'$Q_1 \\times DGPM_0 \\times DGPM_0$'
p3069
aS'$\\widetilde{J}=1$'
p3070
aS'VectorTools::project'
p3071
aS'VectorTools::project'
p3072
aS'AffineConstraints::close'
p3073
aS'step-21'
p3074
aS'step-20'
p3075
aS'$\\varDelta\n \\mathbf{\\Xi} \\dealcoloneq \\{\\varDelta \\mathbf{u},\\varDelta \\widetilde{p},\n \\varDelta \\widetilde{J} \\}$'
p3076
aS'$\\mathbf{\\Xi}_{\\textrm{n}} = \\mathbf{\\Xi}_{\\textrm{n-1}} +\n \\varDelta \\mathbf{\\Xi}$'
p3077
aS'@sect3{Private interface}'
p3078
aS'@sect4{Threading-building-blocks structures}'
p3079
aS'@ref'
p3080
aS'<code>Nx</code>'
p3081
aS'$\\widetilde{p}$'
p3082
aS'$\\widetilde{J}$'
p3083
aS'<code>reset()</code>'
p3084
aS'Threads::new_task'
p3085
aS'@sect4{Solid::make_grid}'
p3086
aS'@sect4{Solid::system_setup}'
p3087
aS'@sect4{Solid::determine_component_extractors}'
p3088
aS'@sect4{Solid::setup_qph}'
p3089
aS'step-18'
p3090
aS'@sect4{Solid::update_qph_incremental}'
p3091
aS'@sect4{Solid::solve_nonlinear_timestep}'
p3092
aS'@sect4{Solid::print_conv_header and Solid::print_conv_footer}'
p3093
aS'@sect4{Solid::get_error_dilation}'
p3094
aS'$\\widetilde{J}$'
p3095
aS'$J\n \\dealcoloneq \\textrm{det}\\ \\mathbf{F}$'
p3096
aS'$L^2$'
p3097
aS'$ \\bigl[\n \\int_{\\Omega_0} {[ J - \\widetilde{J}]}^{2}\\textrm{d}V \\bigr]^{1/2}$'
p3098
aS'@sect4{Solid::get_error_residual}'
p3099
aS'@sect4{Solid::get_error_update}'
p3100
aS'@sect4{Solid::get_total_solution}'
p3101
aS'@sect4{Solid::assemble_system}'
p3102
aS'step-13'
p3103
aS'$\\textrm{grad}\\ \\boldsymbol{\\varphi} = \\textrm{Grad}\\ \\boldsymbol{\\varphi}\n \\ \\mathbf{F}^{-1}$'
p3104
aS'$\\mathsf{\\mathbf{k}}_{uu}$'
p3105
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p}\n \\widetilde{p}} = \\mathbf{0}$'
p3106
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{J}\n \\widetilde{J}}$'
p3107
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p} \\widetilde{J}}$'
p3108
aS'$\\mathsf{\\mathbf{k}}_{u \\widetilde{J}} = \\mathbf{0}$'
p3109
aS'$\\mathsf{\\mathbf{k}}_{u \\widetilde{p}}$'
p3110
aS'$\\mathsf{\\mathbf{k}}_{uu}$'
p3111
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{p} u}$'
p3112
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{J}\n       \\widetilde{p}}$'
p3113
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{J}\n       \\widetilde{J}}$'
p3114
aS'$\\mathbf{t} = \\mathbf{P}\\mathbf{N} = [p_0 \\mathbf{I}]\n     \\mathbf{N} = p_0 \\mathbf{N}$'
p3115
aS'@sect4{Solid::make_constraints}'
p3116
aS'@p constraints'
p3117
aS'@ref GlossComponentMask'
p3118
aS'@p constraints'
p3119
aS'@sect4{Solid::assemble_sc}'
p3120
aS'$\\mathsf{\\mathbf{K}}_{ \\widetilde{J} \\widetilde{J}}$'
p3121
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{p}\\widetilde{J}}$'
p3122
aS'$\n  \\mathsf{\\mathbf{K}}_{\\textrm{con}}\n  = \\bigl[ \\mathsf{\\mathbf{K}}_{uu} +\n  \\overline{\\overline{\\mathsf{\\mathbf{K}}}}~ \\bigr]\n  $'
p3123
aS'$\\widetilde{p}$'
p3124
aS'$\\widetilde{J}$'
p3125
aS'$\\mathbf{u}$'
p3126
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{J} \\widetilde{p}}$'
p3127
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p} \\widetilde{p}}$'
p3128
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{J} \\widetilde{p}}$'
p3129
aS'$\\mathsf{\\mathbf{k}}_{uu}$'
p3130
aS'$\\mathsf{\\mathbf{k}}$'
p3131
aS'$\\mathsf{\\mathbf{k}}_{\\textrm{con}} = \\bigl[\n \\mathsf{\\mathbf{k}}_{uu} +\\overline{\\overline{\\mathsf{\\mathbf{k}}}}~\n \\bigr]$'
p3132
aS'$               \\overline{\\overline{\\mathsf{\\mathbf{k}}}}\n \\dealcoloneq \\mathsf{\\mathbf{k}}_{u\\widetilde{p}}\n \\overline{\\mathsf{\\mathbf{k}}} \\mathsf{\\mathbf{k}}_{\\widetilde{p}u}\n $'
p3133
aS'$\n    \\overline{\\mathsf{\\mathbf{k}}} =\n     \\mathsf{\\mathbf{k}}_{\\widetilde{J}\\widetilde{p}}^{-1}\n     \\mathsf{\\mathbf{k}}_{\\widetilde{J}\\widetilde{J}}\n    \\mathsf{\\mathbf{k}}_{\\widetilde{p}\\widetilde{J}}^{-1}\n $'
p3134
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3135
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{p} \\widetilde{J}}$'
p3136
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{p}}$'
p3137
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3138
aS'$ {\\mathsf{\\mathbf{k}}}_{\\textrm{store}}$'
p3139
aS'$\\mathsf{\\mathbf{k}}_{uu}$'
p3140
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3141
aS'$\\overline{\\overline{\\mathsf{\\mathbf{k}}}}$'
p3142
aS'$\\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}$'
p3143
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p}\n                      \\widetilde{J}}$'
p3144
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p} \\widetilde{J}}$'
p3145
aS'$\\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{p}}$'
p3146
aS'$\\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}$'
p3147
aS'$\\mathsf{\\mathbf{k}}$'
p3148
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{p} u}$'
p3149
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{p} \\widetilde{J}}$'
p3150
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{J} \\widetilde{J}}$'
p3151
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p}\n \\widetilde{J}}$'
p3152
aS'$\\mathsf{\\mathbf{k}}_{\\widetilde{p} \\widetilde{J}}$'
p3153
aS'$\\mathsf{\\mathbf{k}}_{uu}$'
p3154
aS'$\n    \\mathsf{\\mathbf{A}}\n    =\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n    \\mathsf{\\mathbf{k}}_{\\widetilde{p} u}\n    $'
p3155
aS'$\n      \\mathsf{\\mathbf{B}}\n      =\n      \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{k}}_{\\widetilde{p} u}\n      $'
p3156
aS'$\n    \\mathsf{\\mathbf{C}}\n    =\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{p}}\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{J}}\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n    \\mathsf{\\mathbf{k}}_{\\widetilde{p} u}\n    $'
p3157
aS'$\n    \\overline{\\overline{\\mathsf{\\mathbf{k}}}}\n    =\n    \\mathsf{\\mathbf{k}}_{u \\widetilde{p}}\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{p}}\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{J} \\widetilde{J}}\n    \\mathsf{\\mathbf{k}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n    \\mathsf{\\mathbf{k}}_{\\widetilde{p} u}\n    $'
p3158
aS'$\\mathsf{\\mathbf{k}}^{-1}_{ \\widetilde{p} \\widetilde{J}}$'
p3159
aS'$\\mathsf{\\mathbf{k}}_{ \\widetilde{p} \\widetilde{J}}$'
p3160
aS'@sect4{Solid::solve_linear_system}'
p3161
aS'$d\\mathbf{u}$'
p3162
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{con}}\n    = \\bigl[ \\mathsf{\\mathbf{K}}_{uu} +\n    \\overline{\\overline{\\mathsf{\\mathbf{K}}}}~ \\bigr]$'
p3163
aS'$\\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}$'
p3164
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{p} \\widetilde{J}}$'
p3165
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{store}}$'
p3166
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n      =\n              \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n              \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n              $'
p3167
aS'$\n      \\mathsf{\\mathbf{B}}_{\\widetilde{J}}\n      =\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      $'
p3168
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n      =\n      \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      -\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      $'
p3169
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n      =\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{J} \\widetilde{p}}\n      [\n      \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      -\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      ]\n      $'
p3170
aS'$\n      \\mathsf{\\mathbf{A}}_{u}\n      =\n      \\mathsf{\\mathbf{K}}_{u \\widetilde{p}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{J} \\widetilde{p}}\n      [\n      \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      -\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      ]\n      $'
p3171
aS'$\n      \\mathsf{\\mathbf{F}}_{\\text{con}}\n      =\n      \\mathsf{\\mathbf{F}}_{u}\n      -\n      \\mathsf{\\mathbf{K}}_{u \\widetilde{p}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{J} \\widetilde{p}}\n      [\n      \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      -\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J} \\widetilde{J}}\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p} \\widetilde{J}}\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      ]\n      $'
p3172
aS'$\n     d \\widetilde{\\mathsf{\\mathbf{J}}}\n      = \\mathsf{\\mathbf{K}}_{\\widetilde{p}\\widetilde{J}}^{-1} \\bigl[\n       \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n     - \\mathsf{\\mathbf{K}}_{\\widetilde{p}u} d \\mathsf{\\mathbf{u}}\n      \\bigr]\n    $'
p3173
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{p}}\n      =\n      \\mathsf{\\mathbf{K}}_{\\widetilde{p}u} d \\mathsf{\\mathbf{u}}\n      $'
p3174
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{p}}\n      =\n      -\\mathsf{\\mathbf{K}}_{\\widetilde{p}u} d \\mathsf{\\mathbf{u}}\n      $'
p3175
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{p}}\n      =\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      -\\mathsf{\\mathbf{K}}_{\\widetilde{p}u} d \\mathsf{\\mathbf{u}}\n      $'
p3176
aS'$\n      d\\mathsf{\\mathbf{\\widetilde{J}}}\n      =\n      \\mathsf{\\mathbf{K}}^{-1}_{\\widetilde{p}\\widetilde{J}}\n      [\n      \\mathsf{\\mathbf{F}}_{\\widetilde{p}}\n      -\\mathsf{\\mathbf{K}}_{\\widetilde{p}u} d \\mathsf{\\mathbf{u}}\n      ]\n      $'
p3177
aS'$\n    d \\widetilde{\\mathsf{\\mathbf{p}}}\n     =\n    \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{p}}^{-1}\n    \\bigl[\n     \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      - \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{J}}\n    d \\widetilde{\\mathsf{\\mathbf{J}}}\n    \\bigr]\n    $'
p3178
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n       =\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{J}}\n      d \\widetilde{\\mathsf{\\mathbf{J}}}\n      $'
p3179
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n       =\n      -\\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{J}}\n      d \\widetilde{\\mathsf{\\mathbf{J}}}\n      $'
p3180
aS'$\n      \\mathsf{\\mathbf{A}}_{\\widetilde{J}}\n       =\n      \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      -\n      \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{J}}\n      d \\widetilde{\\mathsf{\\mathbf{J}}}\n      $'
p3181
aS'$\n    d \\widetilde{\\mathsf{\\mathbf{p}}}\n     =\n    \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{p}}^{-1}\n    \\bigl[\n     \\mathsf{\\mathbf{F}}_{\\widetilde{J}}\n      - \\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{J}}\n    d \\widetilde{\\mathsf{\\mathbf{J}}}\n    \\bigr]\n    $'
p3182
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{p}\\widetilde{J}}^{-1}$'
p3183
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3184
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{con}}$'
p3185
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{p}}$'
p3186
aS'$\\mathsf{\\mathbf{K}}_{\\widetilde{J}\\widetilde{p}}^{-1}$'
p3187
aS'$\\overline{\\mathsf{\\mathbf{K}}}$'
p3188
aS'$\\overline{\\overline{\\mathsf{\\mathbf{K}}}}$'
p3189
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{con}}$'
p3190
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{con}}^{-1}$'
p3191
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3192
aS'$\\mathsf{\\mathbf{K}}_{\\textrm{con}}$'
p3193
aS'$\\mathsf{\\mathbf{K}}_{uu}$'
p3194
aS'$\\mathsf{\\mathbf{K}}_{ \\widetilde{J} \\widetilde{J}}$'
p3195
aS'@sect4{Solid::output_results}'
p3196
aS'@sect3{Main function}'
p3197
aS'step-22'
p3198
aS'step-22'
p3199
aS'<code>StokesProblem<dim>::setup_dofs()</code>'
p3200
aS'<code>StokesProblem<dim>::create_mesh()</code>'
p3201
aS'step-22'
p3202
aS'@cond'
p3203
aS'@endcond'
p3204
aS'@sect3{Setting up periodicity constraints on distributed triangulations}'
p3205
aS'$\\text{vertices}_2$'
p3206
aS'$\\text{vertices}_1$'
p3207
aS'$\\text{vertices}_2=R\\cdot\n \\text{vertices}_1+b$'
p3208
aS'$R$'
p3209
aS'$b$'
p3210
aS'parallel::distributed::Triangulation::add_periodicity.'
p3211
aS'$\\text{vertices}_2$'
p3212
aS'$\\text{vertices}_1$'
p3213
aS'$\\text{vertices}_2=R\\cdot \\text{vertices}_1+b$'
p3214
aS'$R$'
p3215
aS'$b$'
p3216
aS'$\\text{face}_2$'
p3217
aS'$\\text{face}_1$'
p3218
aS'<code>std::vector@<GridTools::PeriodicFacePair<typename'
p3219
aS'DoFHandler@<dim@>::%cell_iterator@>'
p3220
aS'$\\text{vertices}_2=R\\cdot \\text{vertices}_1+b$'
p3221
aS'step-22'
p3222
aS'@cond'
p3223
aS'@endcond'
p3224
aS'@sect3{Include files}'
p3225
aS'step-27'
p3226
aS'@sect3{The <code>FluidStructureProblem</code> class template}'
p3227
aS'step-8'
p3228
aS'step-22'
p3229
aS'hp::FECollection'
p3230
aS'<code>viscosity, lambda, eta</code>'
p3231
aS'@sect3{Boundary values and right hand side}'
p3232
aS'$\\mathbf u=(0, \\sin(\\pi x))^T$'
p3233
aS'$\\mathbf u=(0,\n 0, \\sin(\\pi x)\\sin(\\pi y))^T$'
p3234
aS'@sect3{The <code>FluidStructureProblem</code> implementation}'
p3235
aS'@sect4{Constructors and helper functions}'
p3236
aS'hp::FECollection'
p3237
aS'hp::FECollection::push_back'
p3238
aS'@sect4{Meshes and assigning subdomains}'
p3239
aS'<code>make_grid</code>'
p3240
aS'$8\\times 8$'
p3241
aS'$8\\times 8\\times 8$'
p3242
aS'hp::FECollection'
p3243
aS'@sect4{<code>FluidStructureProblem::setup_dofs</code>}'
p3244
aS'@sect4{<code>FluidStructureProblem::assemble_system</code>}'
p3245
aS'step-27'
p3246
aS'hp::FEValues'
p3247
aS'<code>if</code>'
p3248
aS'step-22'
p3249
aS'@ref vector_valued'
p3250
aS'AffineConstraints::distribute_local_to_global'
p3251
aS'<code>local_rhs</code>'
p3252
aS'<code>f</code>'
p3253
aS'@sect4{<code>FluidStructureProblem::solve</code>}'
p3254
aS'step-29'
p3255
aS'@sect4{<code>FluidStructureProblem::output_results</code>}'
p3256
aS'step-22'
p3257
aS'@sect4{<code>FluidStructureProblem::refine_mesh</code>}'
p3258
aS'<code>assemble_system</code>'
p3259
aS'@sect4{<code>FluidStructureProblem::run</code>}'
p3260
aS'step-1'
p3261
aS'step-6'
p3262
aS'@sect4{The <code>main()</code> function}'
p3263
aS'@sect3{Include files}'
p3264
aS'step-4'
p3265
aS'$u(x,y) = \\sin(\\pi x) \\sin(\\pi y)$'
p3266
aS'@sect3{The main class}'
p3267
aS'@sect4{Assembling the linear system}'
p3268
aS'step-4'
p3269
aS'step-6'
p3270
aS'MeshWorker::mesh_loop()'
p3271
aS'MeshWorker::mesh_loop()'
p3272
aS'@ref threads'
p3273
aS'step-22'
p3274
aS'MeshWorker::mesh_loop(),'
p3275
aS'`CopyData::FaceData`'
p3276
aS'MeshWorker::mesh_loop(),'
p3277
aS'$\\frac{\\gamma}{h_K}$'
p3278
aS'$\\gamma$'
p3279
aS'$\\gamma=p(p+1)$'
p3280
aS'$p$'
p3281
aS'$h_K$'
p3282
aS'$K$'
p3283
aS'$h$'
p3284
aS'$K$'
p3285
aS'$h_K$'
p3286
aS'$\\gamma$'
p3287
aS'$j(\\mathbf x)$'
p3288
aS'$j(\\mathbf x) = \\frac{\\partial u(\\mathbf x)}{\\partial\n {\\mathbf n}}$'
p3289
aS'$\\frac{\\gamma}{h_e}\\int_e\n \\jump{\\frac{\\partial v_h}{\\partial \\mathbf n}} j \\ ds$'
p3290
aS'MeshWorker::mesh_loop()'
p3291
aS'MeshWorker::mesh_loop()'
p3292
aS'@sect4{Solving the linear system and postprocessing}'
p3293
aS'step-29'
p3294
aS'$L_2$'
p3295
aS'$H^1$'
p3296
aS'$H^2$'
p3297
aS'$H^2$'
p3298
aS'$u_h$'
p3299
aS'$u_h$'
p3300
aS'$u_h$'
p3301
aS'step-6'
p3302
aS'@sect3{The main() function}'
p3303
aS'@sect3{SineGordonOperation}'
p3304
aS'<code>SineGordonOperation</code>'
p3305
aS'<code>MatrixFree</code>'
p3306
aS'@p FEEvaluation'
p3307
aS'@sect4{SineGordonOperation::SineGordonOperation}'
p3308
aS'<code>integrate</code>'
p3309
aS'@p true'
p3310
aS'@sect4{SineGordonOperation::local_apply}'
p3311
aS'step-37'
p3312
aS'@p current'
p3313
aS'@p old.'
p3314
aS'@p src,'
p3315
aS'<tt>std::vector</tt>'
p3316
aS'@p MatrixFree'
p3317
aS'LinearAlgebra::distributed::Vector<Number>'
p3318
aS'<tt>std::vector</tt>'
p3319
aS'@p'
p3320
aS'@sect4{SineGordonOperation::apply}'
p3321
aS'FEEvaluation::distribute_local_to_global()'
p3322
aS'MatrixFree::cell_loop.'
p3323
aS'<code>local_apply()</code>'
p3324
aS'<code>SineGordonOperation</code>, i.e., <code>this</code>'
p3325
aS'@sect3{Equation data}'
p3326
aS'step-25'
p3327
aS'step-25'
p3328
aS'@sect3{SineGordonProblem class}'
p3329
aS'step-25'
p3330
aS'@sect4{SineGordonProblem::SineGordonProblem}'
p3331
aS'@sect4{SineGordonProblem::make_grid_and_dofs}'
p3332
aS'step-25'
p3333
aS'<code>dim</code>'
p3334
aS'$[-15,15]$'
p3335
aS'parallel::distributed::SolutionTransfer'
p3336
aS'step-40'
p3337
aS'MatrixFree::AdditionalData::TasksParallelScheme::none).'
p3338
aS'@sect4{SineGordonProblem::output_results}'
p3339
aS'VectorTools::compute_global_error()'
p3340
aS'step-40'
p3341
aS'step-37'
p3342
aS'VectorTools::integrate_difference()'
p3343
aS'LinearAlgebra::distributed::Vector'
p3344
aS'step-40'
p3345
aS'step-40'
p3346
aS'FEEvaluation::read_dof_values()).'
p3347
aS'@sect4{SineGordonProblem::run}'
p3348
aS'<tt>std::vector</tt>'
p3349
aS'SineGordonOperation::apply()'
p3350
aS'<code> SineGordonOperation class </code>'
p3351
aS'<code>old_solution</code> with <code>old_old_solution</code>'
p3352
aS'<code>old_old_solution</code>'
p3353
aS'<code>old_solution</code>'
p3354
aS'<code>old_solution</code> gets the content from <code>solution</code>'
p3355
aS'<code>solution</code>'
p3356
aS'<code>old_old_solution</code>'
p3357
aS'@sect3{The <code>main</code> function}'
p3358
aS'step-40'
p3359
aS'@sect3{Include files}'
p3360
aS'@sect3{Generating output for a given mesh}'
p3361
aS'std::map'
p3362
aS'@sect3{Main routines}'
p3363
aS'@sect4{grid_1: Loading a mesh generated by gmsh}'
p3364
aS'step-5'
p3365
aS'@sect4{grid_2: Merging triangulations}'
p3366
aS'@sect4{grid_3: Moving vertices}'
p3367
aS'<code>cell-@>vertex(i)</code>'
p3368
aS'<code>i</code>'
p3369
aS'$[-1,1]^2$'
p3370
aS'$y$'
p3371
aS'std::set'
p3372
aS'<code>cell-@>vertex_index(i)</code>'
p3373
aS'GridGenerator::hyper_cube_with_cylindrical_hole'
p3374
aS'<em>'
p3375
aS'</em>'
p3376
aS'GridTools::laplace_transform'
p3377
aS'@sect4{grid_4: Demonstrating extrude_triangulation}'
p3378
aS'@sect4{grid_5: Demonstrating GridTools::transform, part 1}'
p3379
aS'$(x,y) \\mapsto\n (x,y+\\sin(\\pi x/5))$'
p3380
aS'GridTools::transform()'
p3381
aS'<code>std::function@<Point@<2@>(const Point@<2@>)@></code>'
p3382
aS'@sect4{grid_6: Demonstrating GridTools::transform, part 2}'
p3383
aS'$(x,y) \\mapsto (x,\\tanh(2y)/\\tanh(2))$'
p3384
aS'<code>operator()</code>'
p3385
aS'GridTools::transform.'
p3386
aS'@sect4{grid_7: Demonstrating distort_random}'
p3387
aS'GridTools::distort_random()),'
p3388
aS'@sect3{The main function}'
p3389
aS'@sect3{Include files}'
p3390
aS'@sect3{The <code>Step5</code> class template}'
p3391
aS'<code>make_grid</code>'
p3392
aS'<code>run</code>'
p3393
aS'<code>setup_system</code>'
p3394
aS'@sect3{Working with nonconstant coefficients}'
p3395
aS'step-4'
p3396
aS'@sect3{The <code>Step5</code> class implementation}'
p3397
aS'@sect4{Step5::Step5}'
p3398
aS'@sect4{Step5::setup_system}'
p3399
aS'<code>make_grid</code>'
p3400
aS'@sect4{Step5::assemble_system}'
p3401
aS'step-4'
p3402
aS'<code>coefficient()</code>'
p3403
aS'@sect4{Step5::solve}'
p3404
aS'<code>SparseMatrix</code>'
p3405
aS'<code>PreconditionSSOR</code>'
p3406
aS'<code>PreconditionSSOR</code>'
p3407
aS'<code>SparseMatrix@<double@></code>'
p3408
aS'step-6'
p3409
aS'<code>PreconditionIdentity</code>'
p3410
aS'@sect4{Step5::output_results and setting output flags}'
p3411
aS'@sect4{Step5::run}'
p3412
aS'<code>run()</code>'
p3413
aS'<code>GridGenerator</code>'
p3414
aS'<code>Assert</code>'
p3415
aS'@p Assert'
p3416
aS'@ref Exceptions'
p3417
aS'<code>Assert</code>'
p3418
aS'<code>make</code>'
p3419
aS'<code>make debug</code>'
p3420
aS'<code>dim</code>'
p3421
aS'<code>inp</code>'
p3422
aS'<code>grid_in.read_xxx</code>'
p3423
aS'<code>GridIn</code>'
p3424
aS'step-1'
p3425
aS'GridGenerator::hyper_shell)'
p3426
aS'@sect3{The <code>main</code> function}'
p3427
aS'@sect3{Include files}'
p3428
aS'step-40'
p3429
aS'step-16'
p3430
aS'step-37'
p3431
aS'step-40'
p3432
aS'step-12'
p3433
aS'@sect3{Coefficients and helper classes}'
p3434
aS'dealii::LinearAlgebra::distributed::Vector'
p3435
aS'@p value'
p3436
aS'@p'
p3437
aS'@sect3{Run time parameters}'
p3438
aS'@p Settings'
p3439
aS'@sect3{LaplaceProblem class}'
p3440
aS'step-16'
p3441
aS'step-37'
p3442
aS'step-40'
p3443
aS'MatrixFreeOperators::LaplaceOperator'
p3444
aS'@p float'
p3445
aS'@sect4{LaplaceProblem::setup_system()}'
p3446
aS'step-16'
p3447
aS'step-37'
p3448
aS'step-37'
p3449
aS'step-40'
p3450
aS'@sect4{LaplaceProblem::setup_multigrid()}'
p3451
aS'step-37'
p3452
aS'step-16'
p3453
aS'@sect4{LaplaceProblem::assemble_system()}'
p3454
aS'step-40'
p3455
aS'@sect4{LaplaceProblem::assemble_multigrid()}'
p3456
aS'step-16'
p3457
aS'@sect4{LaplaceProblem::assemble_rhs()}'
p3458
aS'FEEvaluation::read_dof_values_plain()'
p3459
aS'step-37'
p3460
aS'$r_0 = f-Au_0$'
p3461
aS'$u_0$'
p3462
aS'$u = u_0 + A^{-1}r_0$'
p3463
aS'$u_0$'
p3464
aS'$A^{-1}r_0$'
p3465
aS'$u_0$'
p3466
aS'step-37'
p3467
aS'$A$'
p3468
aS'$u_0$'
p3469
aS'$f$'
p3470
aS'$u_0$'
p3471
aS'LA::MPI::Vector,'
p3472
aS'dealii::LinearAlgebra::distributed::Vector.'
p3473
aS'@sect4{LaplaceProblem::solve()}'
p3474
aS'step-37'
p3475
aS'step-16'
p3476
aS'LA::MPI::Vector'
p3477
aS'dealii::LinearAlgebra::distributed::Vector'
p3478
aS'LA::MPI::Vector'
p3479
aS'step-16'
p3480
aS'step-40'
p3481
aS'@sect3{The error estimator}'
p3482
aS'MeshWorker::mesh_loop()'
p3483
aS'step-12'
p3484
aS'$h^2 \\| f + \\epsilon \\triangle u \\|_K^2$'
p3485
aS'$\\sum_F h_F \\| \\jump{\\epsilon \\nabla u \\cdot n}\n \\|_F^2$'
p3486
aS'MeshWorker::assemble_ghost_faces_both'
p3487
aS'*/'
p3488
aS'@sect4{LaplaceProblem::refine_grid()}'
p3489
aS'@p estimate_vector'
p3490
aS'@sect4{LaplaceProblem::output_results()}'
p3491
aS'step-40'
p3492
aS'@sect4{LaplaceProblem::run()}'
p3493
aS'@sect3{The main() function}'
p3494
aS'step-40'
p3495
aS'step-29'
p3496
aS'@sect3{Include files}'
p3497
aS'<code>SparseMatrix</code>'
p3498
aS'<code>ChunkSparseMatrix</code>'
p3499
aS'@sect3{Equation data}'
p3500
aS'step-7'
p3501
aS'$(y, -x)$'
p3502
aS'$(y, -x, 1)$'
p3503
aS'step-7'
p3504
aS'$\\nabla \\cdot \\mathbf{c} =\n 0$'
p3505
aS'$\\mathbf{c} \\nabla u$'
p3506
aS'@sect3{The HDG solver class}'
p3507
aS'step-7'
p3508
aS'$u^*$'
p3509
aS'$u$'
p3510
aS'$\\mathbf{q}$'
p3511
aS'<code>DoFHandler</code>'
p3512
aS'$\\mathcal{O}(h^{p+2})$'
p3513
aS'$p+1$'
p3514
aS'step-7'
p3515
aS'@sect3{The HDG class implementation}'
p3516
aS'@sect4{Constructor}'
p3517
aS'@sect4{HDG::setup_system}'
p3518
aS'@p solution'
p3519
aS'@p system_matrix'
p3520
aS'@sect4{HDG::PerTaskData}'
p3521
aS'@p PerTaskData'
p3522
aS'@p'
p3523
aS'$D-CA^{-1}B$'
p3524
aS'@sect4{HDG::ScratchData}'
p3525
aS'@p ScratchData'
p3526
aS'`std::vector<std::vector<unsigned'
p3527
aS'`std::vector<std::vector<unsigned'
p3528
aS'@p fe_local'
p3529
aS'@p fe.'
p3530
aS'@sect4{HDG::PostProcessScratchData}'
p3531
aS'@p PostProcessScratchData'
p3532
aS'$u^*$'
p3533
aS'@p ScratchData.'
p3534
aS'@sect4{HDG::assemble_system}'
p3535
aS'@p assemble_system'
p3536
aS'Step-32'
p3537
aS'<code>WorkStream</code>'
p3538
aS'@p trace_reconstruct'
p3539
aS'@sect4{HDG::assemble_system_one_cell}'
p3540
aS'@p assemble_system_one_cell.'
p3541
aS'$A, B, C$'
p3542
aS'$D$'
p3543
aS'@p ll_matrix'
p3544
aS'$A$'
p3545
aS'$\\hat{u}$'
p3546
aS'@p ScratchData.'
p3547
aS'@p trace_reconstruct=false,'
p3548
aS'$\\hat{u}$'
p3549
aS'@p TaskData::cell_matrix,'
p3550
aS'@p'
p3551
aS'FullMatrix::mmult'
p3552
aS'$\\left<w,\\tau\n   u_h\\right>_{\\partial \\mathcal T}$'
p3553
aS'@p trace_reconstruct=true,'
p3554
aS'@p'
p3555
aS'@p lf_matrix'
p3556
aS'@p'
p3557
aS'@p'
p3558
aS'$D$'
p3559
aS'@p l_rhs'
p3560
aS'<code>set_dof_values</code>'
p3561
aS'@sect4{HDG::copy_local_to_global}'
p3562
aS'@p trace_reconstruct=false,'
p3563
aS'@sect4{HDG::solve}'
p3564
aS'@p assemble_system'
p3565
aS'@p trace_reconstruct'
p3566
aS'@sect4{HDG::postprocess}'
p3567
aS'$p+1$'
p3568
aS'$p+2$'
p3569
aS'step-7'
p3570
aS'VectorTools::integrate_difference.'
p3571
aS'step-7'
p3572
aS'@p L2_norm'
p3573
aS'@p H1_seminorm'
p3574
aS'<code>[0, dim)</code>'
p3575
aS'@p dim'
p3576
aS'@p'
p3577
aS'@sect4{HDG::postprocess_one_cell}'
p3578
aS'@p dofs_per_cell'
p3579
aS'@p dofs_per_cell'
p3580
aS'$\\mathcal\n Q_{-p}$'
p3581
aS'@sect4{HDG::output_results}'
p3582
aS'@p output_results'
p3583
aS'@p data_out.'
p3584
aS'<code>DataOutFaces</code>'
p3585
aS'<code>DataOut</code> class when we have a <code>DoFHandler</code>'
p3586
aS'@sect4{HDG::refine_grid}'
p3587
aS'<code>Step-7</code>'
p3588
aS'<code>KellyErrorEstimator</code>'
p3589
aS'step-7'
p3590
aS'@sect4{HDG::run}'
p3591
aS'<code>Step-7</code>'
p3592
aS'step-7'
p3593
aS'step-7'
p3594
aS'@sect3{Include files}'
p3595
aS'@sect3{The <code>Diffusion</code> class}'
p3596
aS'<code>evaluate_diffusion()</code>'
p3597
aS'<code>id_minus_tau_J_inverse()</code>. <code>evaluate_diffusion()</code>'
p3598
aS'$M^{-1}(f(t,y))$'
p3599
aS'$y$'
p3600
aS'<code>id_minus_tau_J_inverse()</code>'
p3601
aS'$\\left(I-\\tau\n M^{-1} \\frac{\\partial f(t,y)}{\\partial y}\\right)^{-1}$'
p3602
aS'$\\left(M-\\tau \\frac{\\partial f}{\\partial y}\\right)^{-1} M$'
p3603
aS'$\\tau$'
p3604
aS'$y$'
p3605
aS'@sect4{<code>Diffusion::setup_system</code>}'
p3606
aS'@sect4{<code>Diffusion::assemble_system</code>}'
p3607
aS'$-\\int D \\nabla b_i \\cdot \\nabla b_j\n d\\boldsymbol{r} - \\int \\Sigma_a b_i b_j d\\boldsymbol{r}$'
p3608
aS'$\\int b_i b_j d\\boldsymbol{r}$'
p3609
aS'<code>inverse_mass_matrix</code>'
p3610
aS'$M^{-1}$'
p3611
aS'<code>vmult()</code>'
p3612
aS'@sect4{<code>Diffusion::get_source</code>}'
p3613
aS'@sect4{<code>Diffusion::evaluate_diffusion</code>}'
p3614
aS'$t$'
p3615
aS'$y$'
p3616
aS'$M^{-1}(-{\\cal D}y - {\\cal A}y + {\\cal\n S})$'
p3617
aS'$-{\\cal D} - {\\cal A}$'
p3618
aS'<code>system_matrix</code>'
p3619
aS'$y$'
p3620
aS'VectorTools::create_right_hand_side()'
p3621
aS'$M^{-1}$'
p3622
aS'@sect4{<code>Diffusion::id_minus_tau_J_inverse</code>}'
p3623
aS'$\\left(M-\\tau \\frac{\\partial f}{\\partial y}\\right)^{-1} M$'
p3624
aS'$M-\\tau \\frac{\\partial f}{\\partial y}$'
p3625
aS'$\\left(M-\\tau \\frac{\\partial f}\n                                                 {\\partial y}\\right)^{-1}$'
p3626
aS'$tmp=My$'
p3627
aS'$z=\\left(M-\\tau \\frac{\\partial f}{\\partial y}\\right)^{-1} tmp =\n   \\left(M-\\tau \\frac{\\partial f}{\\partial y}\\right)^{-1} My$'
p3628
aS'@sect4{<code>Diffusion::output_results</code>}'
p3629
aS'@sect4{<code>Diffusion::explicit_method</code>}'
p3630
aS'<code>evolve_one_time_step</code>'
p3631
aS'<code>evolve_one_time_step</code>'
p3632
aS'$M^{-1}(f(t,y))$'
p3633
aS'<code>evaluate_diffusion</code>'
p3634
aS'<code>evaluate_diffusion</code>'
p3635
aS'<code>this</code>'
p3636
aS'@sect4{<code>Diffusion::implicit_method</code>}'
p3637
aS'<code>explicit_method</code>'
p3638
aS'$M^{-1}(f(t,y))$'
p3639
aS'$\\left(I-\\tau M^{-1} \\frac{\\partial f(t,y)}{\\partial\n y}\\right)^{-1}$'
p3640
aS'@sect4{<code>Diffusion::embedded_explicit_method</code>}'
p3641
aS'<code>delta_t_guess</code>'
p3642
aS'TimeStepping::EmbeddedExplicitRungeKutta::evolve_one_time_step().'
p3643
aS'<code>delta_t_guess</code>'
p3644
aS'<code>final_time</code>'
p3645
aS'@sect4{<code>Diffusion::run</code>}'
p3646
aS'$x=0$'
p3647
aS'$x=5$'
p3648
aS'$l_2$'
p3649
aS'@sect3{The <code>main()</code> function}'
p3650
aS'<code>main</code>'
p3651
aS'<code>tria.h</code>'
p3652
aS'<code>grid_generator.h</code>'
p3653
aS'<code>grid_out.h</code>'
p3654
aS'<code>manifold.h</code>'
p3655
aS'GridTools::transform()'
p3656
aS'Functions::InterpolatedUniformGridData'
p3657
aS'@sect3{Describing topography: AfricaTopography}'
p3658
aS'$h(\\hat phi,\\hat \\theta)$'
p3659
aS'<code>topography_data</code>'
p3660
aS'<code>value()</code>'
p3661
aS'Functions::InterpolatedUniformGridData'
p3662
aS'$[-6.983333, 11.98333]$'
p3663
aS'$[25, 35.983333]$'
p3664
aS'$380\\times 220$'
p3665
aS'$380\\times 220$'
p3666
aS'std::vector'
p3667
aS'<code>get_data()</code>'
p3668
aS'<code>get_data()</code>'
p3669
aS'<code>topography.txt.gz</code>'
p3670
aS'std::ifstream,'
p3671
aS'<code>topography_data</code>'
p3672
aS'<code>catch</code>'
p3673
aS'<code>AssertThrow(false, ...)</code>'
p3674
aS'<code>throw ExcMessage("...")</code>'
p3675
aS'@sect3{Describing the geometry: AfricaGeometry}'
p3676
aS'`std::unique_ptr<Manifold<3,3>>`,'
p3677
aS'$[0,2\\pi]$'
p3678
aS'@sect3{Creating the mesh}'
p3679
aS'$1\\times 2\\times 1$'
p3680
aS'$\\hat U=[26,35]\\times[-10,5]\\times[-500000,0]$'
p3681
aS'GridTools::transform()'
p3682
aS'$1\\times 2\\times\n 1$'
p3683
aS'GridGenerator::subdivided_hyper_rectangle()'
p3684
aS'<code>true</code>'
p3685
aS'GridGenerator::subdivided_hyper_rectangle()'
p3686
aS'@sect3{The main function}'
p3687
aS'step-6'
p3688
aS'<code>run()</code>'
p3689
aS'@sect3{Include files}'
p3690
aS'<code>-DDEAL_II_WITH_OPENCASCADE=ON</code>'
p3691
aS'<code>-DOPENCASCADE_DIR=/path/to/your/opencascade/installation</code>'
p3692
aS'<code>cmake</code>'
p3693
aS'@sect3{The TriangulationOnCAD class}'
p3694
aS'@sect4{TriangulationOnCAD::TriangulationOnCAD}'
p3695
aS'@sect4{TriangulationOnCAD::read_domain}'
p3696
aS'@p cad_file_name'
p3697
aS'Triangulation::set_manifold'
p3698
aS'@p TopoDS_Shape.'
p3699
aS'@p tol'
p3700
aS'@p tol.'
p3701
aS'@p TopoDS_Wire,'
p3702
aS'@p TopoDS_Edges'
p3703
aS'OpenCASCADE::extract_compound_shapes'
p3704
aS'std::vectors'
p3705
aS'@ref GlossManifoldIndicator'
p3706
aS'@p surface_projection_kind'
p3707
aS'@p NormalProjection,'
p3708
aS'OpenCASCADE::NormalProjectionManifold.'
p3709
aS'@p If'
p3710
aS'@p DirectionalProjection,'
p3711
aS'OpenCASCADE::DirectionalProjectionManifold'
p3712
aS'OpenCASCADE::DirectionalProjectionManifold'
p3713
aS'@p surface_projection_kind'
p3714
aS'@p NormalToMeshProjection,'
p3715
aS'OpenCASCADE::NormalToMeshProjectionManifold.'
p3716
aS'OpenCASCADE::NormalToMeshProjectionManifold'
p3717
aS'@p case'
p3718
aS'@sect4{TriangulationOnCAD::refine_mesh}'
p3719
aS'@sect4{TriangulationOnCAD::output_results}'
p3720
aS'@sect4{TriangulationOnCAD::run}'
p3721
aS'@sect3{The main() function}'
p3722
aS'step-40'
p3723
aS'@sect3{Linear solvers and preconditioners}'
p3724
aS'InverseMatrix::vmult().'
p3725
aS'step-22'
p3726
aS'@sect3{Problem setup}'
p3727
aS'@sect3{The main program}'
p3728
aS'step-40'
p3729
aS'std::vector<IndexSet>'
p3730
aS'GridGenerator::hyper_cube.'
p3731
aS'@sect3{System Setup}'
p3732
aS'step-40'
p3733
aS'step-22'
p3734
aS'step-40'
p3735
aS'DoFTools::make_sparsity_pattern.'
p3736
aS'std::vector<IndexSet>'
p3737
aS'@sect3{Assembly}'
p3738
aS'@sect3{Solving}'
p3739
aS'step-56'
p3740
aS'@sect3{The rest}'
p3741
aS'@sect3{Include files}'
p3742
aS'@sect3{Functions for Solution and Righthand side}'
p3743
aS'$f$'
p3744
aS'@sect3{ASPECT BlockSchurPreconditioner}'
p3745
aS'step-22'
p3746
aS'@p do_solve_A'
p3747
aS'@sect3{The StokesProblem class}'
p3748
aS'@sect4{StokesProblem::setup_dofs}'
p3749
aS'step-22'
p3750
aS'step-20'
p3751
aS'@sect4{StokesProblem::assemble_system}'
p3752
aS'@sect4{StokesProblem::assemble_multigrid}'
p3753
aS'step-16'
p3754
aS'@sect4{StokesProblem::solve}'
p3755
aS'@sect4{StokesProblem::process_solution}'
p3756
aS'$\\frac{1}{\\Omega} \\int_{\\Omega} p(x) dx $'
p3757
aS'$dim$'
p3758
aS'@sect4{StokesProblem::output_results}'
p3759
aS'step-22'
p3760
aS'@sect4{StokesProblem::run}'
p3761
aS'@sect3{The main function}'
p3762
aS'@sect3{Include files}'
p3763
aS'@sect3{The <code>NavierStokesProblem</code> class template}'
p3764
aS'@sect3{Boundary values and right hand side}'
p3765
aS'<code>dim+1</code>'
p3766
aS'VectorTools::interpolate_boundary_values'
p3767
aS'@sect3{BlockSchurPreconditioner for Navier Stokes equations}'
p3768
aS'$\\tilde{A}^{-1}$'
p3769
aS'$\\tilde{A}x=b$'
p3770
aS'$\\tilde{S}$'
p3771
aS'@sect3{StationaryNavierStokes class implementation}'
p3772
aS'@sect4{StationaryNavierStokes::StationaryNavierStokes}'
p3773
aS'step-22'
p3774
aS'<code>gamma</code>'
p3775
aS'@sect4{StationaryNavierStokes::setup_dofs}'
p3776
aS'$\\delta u^k$'
p3777
aS'@sect4{StationaryNavierStokes::initialize_system}'
p3778
aS'@sect4{StationaryNavierStokes::assemble}'
p3779
aS'@p initial_step'
p3780
aS'@p assemble_matrix'
p3781
aS'step-22'
p3782
aS'step-22'
p3783
aS'@sect4{StationaryNavierStokes::solve}'
p3784
aS'@sect4{StationaryNavierStokes::refine_mesh}'
p3785
aS'step-15'
p3786
aS'<code>tmp</code>'
p3787
aS'@sect4{StationaryNavierStokes<dim>::newton_iteration}'
p3788
aS'<code>is_initial_step</code>'
p3789
aS'<code>setup_system</code>'
p3790
aS'<code>output_result</code>'
p3791
aS'<code>alpha</code>'
p3792
aS'step-15'
p3793
aS'@sect4{StationaryNavierStokes::compute_initial_guess}'
p3794
aS'step-'
p3795
aS'@sect4{StationaryNavierStokes::output_results}'
p3796
aS'step-22'
p3797
aS'@sect4{StationaryNavierStokes::process_solution}'
p3798
aS'$x=0.5$'
p3799
aS'$0 \\leq y \\leq 1$'
p3800
aS'@sect4{StationaryNavierStokes::run}'
p3801
aS'$1/1000$'
p3802
aS'$8 \\times 8$'
p3803
aS'$1/1000$'
p3804
aS'@sect3{Include files}'
p3805
aS'@sect3{The <code>NonlinearSchroedingerEquation</code> class}'
p3806
aS'step-4'
p3807
aS'step-6'
p3808
aS'`std::complex<double>`'
p3809
aS'@sect3{Equation data}'
p3810
aS'@sect3{Implementation of the <code>NonlinearSchroedingerEquation</code> class}'
p3811
aS'$Q_2$'
p3812
aS'@sect4{Setting up data structures and assembling matrices}'
p3813
aS'step-6'
p3814
aS'$\\left[ -iM  +  \\frac 14 k_{n+1} A + \\frac 12 k_{n+1} W \\right]\n   \\Psi^{(n,2)}\n  =\n  \\left[ -iM  -  \\frac 14 k_{n+1} A - \\frac 12 k_{n+1} W \\right]\n   \\Psi^{(n,1)}$'
p3815
aS'$\\Psi^{(n,1)}$'
p3816
aS'@sect4{Implementing the Strang splitting steps}'
p3817
aS'$\\psi^{(n,1)} = e^{-i\\kappa|\\psi^{(n,0)}|^2 \\tfrac\n  12\\Delta t} \\; \\psi^{(n,0)}$'
p3818
aS'$\\psi^{(n,0)}=\\psi^{(n)}$'
p3819
aS'$\\psi^{(n,1)}$'
p3820
aS'$\\psi^{(n,3)} = e^{-i\\kappa|\\psi^{(n,2)}|^2 \\tfrac\n  12\\Delta t} \\; \\psi^{(n,2)}$'
p3821
aS'$\\psi^{(n,3)}=\\psi^{(n+1)}$'
p3822
aS'$\\psi^{(n,2)}$'
p3823
aS'$\\psi^{(n,0)}(\\mathbf x)$'
p3824
aS'$\\psi^{(n,1)}(\\mathbf x)$'
p3825
aS'$\\mathbf x\\in\\Omega$'
p3826
aS'$\\psi_h^{(n,1)}(\\mathbf x) = \\Pi_h\n     \\left(e^{-i\\kappa|\\psi_h^{(n,0)}(\\mathbf x)|^2 \\tfrac 12\\Delta t}\n     \\; \\psi_h^{(n,0)}(\\mathbf x) \\right)$'
p3827
aS'$\\Pi_h$'
p3828
aS'$\\Psi^{(n,1)}$'
p3829
aS'$\\Psi^{(n,1)}_j = e^{-i\\kappa|\\Psi^{(n,0)}_j|^2 \\tfrac\n  12\\Delta t} \\; \\Psi^{(n,0)}_j$'
p3830
aS'$j$'
p3831
aS'$\\Psi^{(n,0)}$'
p3832
aS'$\\Psi^{(n,1)}$'
p3833
aS'$C\\Psi^{(n,2)} = R\\Psi^{(n,1)}$'
p3834
aS'$C$'
p3835
aS'$R$'
p3836
aS'$r=R\\Psi^{(n,1)}$'
p3837
aS'SparseMatrix::vmult()'
p3838
aS'SparseDirectUMFPACK::solver()'
p3839
aS'$C$'
p3840
aS'@sect4{Creating graphical output}'
p3841
aS'$\\Psi^n$'
p3842
aS'$\\text{Re}(\\psi_h^{(n)}(\\mathbf x))$'
p3843
aS'$\\text{Im}(\\psi_h^{(n)}(\\mathbf x))$'
p3844
aS'DataOut::add_data_vector()'
p3845
aS'DataOut::build_patches().'
p3846
aS'$|\\psi|$'
p3847
aS'$\\text{arg}(\\psi)$'
p3848
aS'$|\\psi|^2$'
p3849
aS'$|\\psi_h|^2$'
p3850
aS'$\\text{arg}(\\psi_h)$'
p3851
aS'$|\\psi|$'
p3852
aS'$|\\psi|^2$'
p3853
aS'$\\psi(\\mathbf x,t)=r(\\mathbf x,t) e^{i\\varphi(\\mathbf x,t)}$'
p3854
aS'$\\varphi(\\mathbf x,t)$'
p3855
aS'$-\\pi$'
p3856
aS'$+\\pi$'
p3857
aS'@sect4{Running the simulation}'
p3858
aS'@sect4{The main() function}'
p3859
aS'step-37'
p3860
aS'step-37'
p3861
aS'step-37'
p3862
aS'@sect3{Equation data}'
p3863
aS'step-7'
p3864
aS'$x$'
p3865
aS'$x = 2.5$'
p3866
aS'$6pi$'
p3867
aS'@sect3{Matrix-free implementation}'
p3868
aS'step-37'
p3869
aS'MatrixFreeOperators::Base'
p3870
aS'MatrixFree::loop()'
p3871
aS'MatrixFreeOperators::Base.'
p3872
aS'MatrixFreeOperators::Base.'
p3873
aS'step-39'
p3874
aS'step-37'
p3875
aS'`LaplaceOperator::initialize_dof_vector`'
p3876
aS'MatrixFree::get_dof_info(0),'
p3877
aS'step-37'
p3878
aS'MatrixFreeOperators::Base.'
p3879
aS'step-37'
p3880
aS'step-37'
p3881
aS'MatrixFreeOperators::Base::vmult_add()),'
p3882
aS'FEEvaluation::set_dof_values()'
p3883
aS'FEEvaluation::distribute_local_to_global()'
p3884
aS'MatrixFree::loop()'
p3885
aS'`LinearAlgebra::distributed::Vector`,'
p3886
aS'FEEvaluation::distribute_local_to_global()'
p3887
aS'FEFaceEvaluation::distribute_local_to_global().'
p3888
aS'MatrixFree::cell_loop'
p3889
aS'step-37'
p3890
aS'step-48'
p3891
aS'step-37'
p3892
aS'`std::function`'
p3893
aS'MatrixFree::DataAccessOnFaces'
p3894
aS'MatrixFree::loop().'
p3895
aS'LinearAlgebra::distributed::Vector::update_ghost_values()'
p3896
aS'LinearAlgebra::distributed::Vector::compress()'
p3897
aS'MatrixFree::DataAccessOnFaces'
p3898
aS'MatrixFree::cell_loop(),'
p3899
aS'$(k+1)^{d-1}$'
p3900
aS'$k$'
p3901
aS'$d$'
p3902
aS'$(k+1)^d$'
p3903
aS'$2(k+1)^{d-1}$'
p3904
aS'$k$'
p3905
aS'$C^1$'
p3906
aS'*/'
p3907
aS'step-37'
p3908
aS'FEEvaluation::read_dof_values()'
p3909
aS'FEEvaluation::evaluate()'
p3910
aS'FEEvaluation::gather_evaluate()'
p3911
aS'FEEvaluation::integrate_scatter()'
p3912
aS'FEEvaluation::integrate()'
p3913
aS'FEEvaluation::distribute_local_to_global().'
p3914
aS'step-39'
p3915
aS'step-37'
p3916
aS'$2(k+1)^{d-1}$'
p3917
aS'$(k+1)^d$'
p3918
aS'$\\frac{1}{h_\\text{i}}$'
p3919
aS'$h_\\text{i}$'
p3920
aS'$\\frac{1}{2}$'
p3921
aS'$u^+$'
p3922
aS'$u^-$'
p3923
aS'$u^+ = -u^- + 2\n g_\\text{D}$'
p3924
aS'$\\mathbf{n}^-\\cdot \\nabla u^+ = \\mathbf{n}^-\\cdot \\nabla\n u^-$'
p3925
aS'$u^+=u^-$'
p3926
aS'$\\mathbf{n}^-\\cdot \\nabla\n u^+ = -\\mathbf{n}^-\\cdot \\nabla u^- + 2 g_\\text{N}$'
p3927
aS'$g_\\text{D}$'
p3928
aS'$g_\\text{N}$'
p3929
aS'`LaplaceProblem::compute_rhs()`.'
p3930
aS'$u^-$'
p3931
aS'$u^+$'
p3932
aS'$0.5$'
p3933
aS'step-39'
p3934
aS'$x$'
p3935
aS'@p dim'
p3936
aS'step-39'
p3937
aS'step-39'
p3938
aS'$A\\otimes M + M\\otimes A$'
p3939
aS'FEEvaluation::get_mapping_data_index_offset()'
p3940
aS'$\\text{det}(J) / h_d^2$'
p3941
aS'$d-1$'
p3942
aS'MatrixFree::cell_loop().'
p3943
aS'step-37'
p3944
aS'step-37'
p3945
aS'Matrixfree::reinit().'
p3946
aS'step-37'
p3947
aS'`LaplaceOperator::apply_boundary()`'
p3948
aS'$u^+ = -u^- + 2 g_\\text{D}$'
p3949
aS'$\\mathbf{n}^-\\cdot \\nabla u^+ =\n \\mathbf{n}^-\\cdot \\nabla u^-$'
p3950
aS'$u^+=u^-$'
p3951
aS'$\\mathbf{n}^-\\cdot \\nabla u^+ = -\\mathbf{n}^-\\cdot \\nabla u^- + 2\n g_\\text{N}$'
p3952
aS'$g_\\text{D}$'
p3953
aS'$g_\\text{N}$'
p3954
aS'MatrixFree::loop'
p3955
aS'MatrixFree::n_inner_face_batches(),'
p3956
aS'MatrixFree::n_boundary_face_batches().'
p3957
aS'MatrixFree::loop(),'
p3958
aS'MatrixFree::loop().'
p3959
aS'step-37'
p3960
aS'$x$'
p3961
aS'$y$'
p3962
aS'$z$'
p3963
aS'$x$'
p3964
aS'$y$'
p3965
aS'$z$'
p3966
aS'@sect3{Include files}'
p3967
aS'<code>FE_Q</code>'
p3968
aS'<code>grid_in.h</code>'
p3969
aS'@sect3{The <code>Step6</code> class template}'
p3970
aS'<code>refine_grid</code>'
p3971
aS'@sect3{Nonconstant coefficients}'
p3972
aS'step-5'
p3973
aS'@sect3{The <code>Step6</code> class implementation}'
p3974
aS'@sect4{Step6::Step6}'
p3975
aS'<code>1</code>'
p3976
aS'<code>2</code>'
p3977
aS'@sect4{Step6::setup_system}'
p3978
aS'step-5'
p3979
aS'step-5'
p3980
aS'<code>constraints</code>'
p3981
aS'<code>close()</code>'
p3982
aS'<code>constraints</code>'
p3983
aS'<code>keep_constrained_dofs</code>'
p3984
aS'<code>true</code>'
p3985
aS'*/'
p3986
aS'@sect4{Step6::assemble_system}'
p3987
aS'AffineConstraints::distribute_local_to_global()'
p3988
aS'<code>dofs_per_cell</code>'
p3989
aS'<code>quadrature_formula.size()</code>'
p3990
aS'<code>fe_values</code>'
p3991
aS'@p cell_matrix'
p3992
aS'@p cell_rhs'
p3993
aS'<code>system_rhs</code>'
p3994
aS'<code>solve</code>'
p3995
aS'@sect4{Step6::solve}'
p3996
aS'<code>distributing</code>'
p3997
aS'@sect4{Step6::refine_grid}'
p3998
aS'<code>DoFHandler</code>'
p3999
aS'<code>dim-1</code>'
p4000
aS'$\\partial_n u(\\mathbf x) = h(\\mathbf x)$'
p4001
aS'$h(\\mathbf\n x)$'
p4002
aS'<code>estimated_error_per_cell</code>'
p4003
aS'@sect4{Step6::output_results}'
p4004
aS'step-1'
p4005
aS'<ol>'
p4006
aS'<li>'
p4007
aS'</li>'
p4008
aS'<li>'
p4009
aS'</li>'
p4010
aS'<li>'
p4011
aS'GridOutFlags::Gnuplot'
p4012
aS'step-10'
p4013
aS'</li>'
p4014
aS'</ol>'
p4015
aS'@sect4{Step6::run}'
p4016
aS'<code>main()</code>'
p4017
aS'<code>run()</code>'
p4018
aS'step-5'
p4019
aS'@sect3{The <code>main</code> function}'
p4020
aS'<code>Assert</code>'
p4021
aS'<code>main</code>'
p4022
aS'<code>try</code>'
p4023
aS'<code>exception</code>, then we can use the <code>what</code>'
p4024
aS'<code>exc.what()</code>'
p4025
aS'<code>Assert</code>'
p4026
aS'<code>return 1;</code>'
p4027
aS'<code>exception</code>'
p4028
aS'@sect3{Include files}'
p4029
aS'ParameterAcceptor::prm,'
p4030
aS'ParameterAcceptor::initialize("file.prm")'
p4031
aS'ParameterHandler::add_parameter'
p4032
aS'GridTools::Cache'
p4033
aS'Triangulation::cell_iterator'
p4034
aS'GridTools::find_active_cell_around_point,'
p4035
aS'GridTools::Cache'
p4036
aS'@sect3{DistributedLagrangeProblem}'
p4037
aS'$\\Gamma$'
p4038
aS'$\\Omega$'
p4039
aS'$\\Gamma$'
p4040
aS'$\\Omega$'
p4041
aS'std::unique_ptr.'
p4042
aS'ParameterAcceptor::add_parameter()'
p4043
aS'$\\Omega$'
p4044
aS'$\\Omega$'
p4045
aS'$\\Gamma$'
p4046
aS'$C$'
p4047
aS'$\\Omega$'
p4048
aS'$\\Gamma$'
p4049
aS'$\\Gamma$'
p4050
aS'$\\partial \\Omega$'
p4051
aS'$V_h(\\Omega)$'
p4052
aS'$Q_h(\\Gamma)$'
p4053
aS'$C$'
p4054
aS'std::string,'
p4055
aS'Functions::ParsedFunction'
p4056
aS'Functions::ParsedFunction'
p4057
aS'$g$'
p4058
aS'Functions::ParsedFunction'
p4059
aS'@sect3{DistributedLagrangeProblem::Parameters}'
p4060
aS'ParameterAcceptor::add_parameter()'
p4061
aS'ParameterAcceptor::prm.add_parameter()'
p4062
aS'ParameterAcceptor::declare_parameters_call_back'
p4063
aS'ParameterAcceptor::prm.add_parameter'
p4064
aS'ParameterAcceptor::prm'
p4065
aS'$R$'
p4066
aS'$(Cx, Cy)$'
p4067
aS'$\\Gamma$'
p4068
aS'$C_{\\alpha j}$'
p4069
aS'$\\Gamma \\not\\subseteq \\Omega$'
p4070
aS'$C$'
p4071
aS'$C$'
p4072
aS'@sect3{Set up}'
p4073
aS'`DistributedLagrangeProblem::setup_grids_and_dofs()`'
p4074
aS'`std::make_unique`'
p4075
aS'`std::unique_ptr`'
p4076
aS'$\\Omega$'
p4077
aS'`std::unique_ptr`'
p4078
aS'GridGenerator::hyper_cube().'
p4079
aS'GridTools::Cache'
p4080
aS'$\\Omega$'
p4081
aS'$\\Gamma$'
p4082
aS'$\\Omega$'
p4083
aS'$\\Gamma$'
p4084
aS'DoFTools::map_dofs_to_support_points.'
p4085
aS'Mapping::transform_real_to_unit_cell'
p4086
aS'GridTools::find_active_cell_around_point'
p4087
aS'Mapping::transform_real_to_unit_cell'
p4088
aS'GridTools::Cache'
p4089
aS'GridTools::compute_point_locations,'
p4090
aS'GridTools::compute_point_locations'
p4091
aS'GridTools::compute_point_locations'
p4092
aS'$C$'
p4093
aS'$C$'
p4094
aS'$V$'
p4095
aS'$Q$'
p4096
aS'$L^2$'
p4097
aS'$V$'
p4098
aS'$Q$'
p4099
aS'$\\Omega$'
p4100
aS'$\\Omega$'
p4101
aS'$\\Gamma$'
p4102
aS'$\\Omega$'
p4103
aS'$\\Gamma$'
p4104
aS'$\\Omega$'
p4105
aS'$G$'
p4106
aS'$\\Gamma$'
p4107
aS'NonMatching::create_coupling_sparsity_pattern,'
p4108
aS'@sect3{Assembly}'
p4109
aS'$K$'
p4110
aS'$G$'
p4111
aS'NonMatching::create_coupling_mass_matrix'
p4112
aS'NonMatching::create_coupling_sparsity_pattern.'
p4113
aS'@sect3{Solve}'
p4114
aS'DataOut::build_patches'
p4115
aS'ParameterAcceptor::initialize'
p4116
aS'ParameterAcceptor::initialize'
p4117
aS'@sect3{Include files}'
p4118
aS'step-7'
p4119
aS'step-20'
p4120
aS'step-51'
p4121
aS'@sect3{The WGDarcyEquation class template}'
p4122
aS'$L_2$'
p4123
aS'$L_2$'
p4124
aS'@sect3{Right hand side, boundary values, and exact solution}'
p4125
aS'$\\mathbf{K}$'
p4126
aS'$f = 2\\pi^2 \\sin(\\pi x) \\sin(\\pi y)$'
p4127
aS'$K$'
p4128
aS'$f$'
p4129
aS'$p =\n \\sin(\\pi x) \\sin(\\pi y)$'
p4130
aS'@sect3{WGDarcyEquation class implementation}'
p4131
aS'@sect4{WGDarcyEquation::WGDarcyEquation}'
p4132
aS'$p^\\circ$'
p4133
aS'$p^\\partial$'
p4134
aS'@sect4{WGDarcyEquation::make_grid}'
p4135
aS'@sect4{WGDarcyEquation::setup_system}'
p4136
aS'<code>DoFTools::make_sparsity_pattern</code>'
p4137
aS'@sect4{WGDarcyEquation::assemble_system}'
p4138
aS'$C^K$'
p4139
aS'$K$'
p4140
aS'$M^K$'
p4141
aS'$G^K$'
p4142
aS'FEValues::reinit()'
p4143
aS'FEValuesBase::get_function_values()'
p4144
aS'FEValues::reinit()'
p4145
aS'FEValuesBase::get_function_values(),'
p4146
aS'FEValues::shape_value()'
p4147
aS'<code>FEValuesExtractors</code>'
p4148
aS'@p interior'
p4149
aS'@p face'
p4150
aS'FullMatrix::gauss_jordan().'
p4151
aS'$C^K$'
p4152
aS'$M^K$'
p4153
aS'$G^K$'
p4154
aS'$C^K$'
p4155
aS'@p cell_matrix_C'
p4156
aS'$G^K$'
p4157
aS'@p cell_matrix_M):'
p4158
aS'$A^K$'
p4159
aS'$A^K_{ij}$'
p4160
aS'$\\int_{E} \\sum_{k,l} C_{ik} C_{jl}\n (\\mathbf{K} \\mathbf{v}_k) \\cdot \\mathbf{v}_l\n \\mathrm{d}x$'
p4161
aS'$C$'
p4162
aS'$\\int_{K} f q \\mathrm{d}x$'
p4163
aS'@sect4{WGDarcyEquation<dim>::solve}'
p4164
aS'@sect4{WGDarcyEquation<dim>::compute_postprocessed_velocity}'
p4165
aS'$\\mathbf{u}_h = \\mathbf{Q}_h \\left(\n -\\mathbf{K}\\nabla_{w,d}p_h \\right)$'
p4166
aS'$E^K,D^K$'
p4167
aS'$C^K$'
p4168
aS'step-51'
p4169
aS'$L_2$'
p4170
aS'$(\\mathbf{K} \\mathbf{w}, \\mathbf{w})$'
p4171
aS'<code>cell_matrix_E</code>'
p4172
aS'$(\\mathbf{K} \\mathbf{w}, \\mathbf{w})$'
p4173
aS'<code>cell_matrix_M</code>'
p4174
aS'$D$'
p4175
aS'$D=M^{-1}E$'
p4176
aS'$C$'
p4177
aS'$-\\mathbf K \\nabla_{w,d} p_h$'
p4178
aS'@sect4{WGDarcyEquation<dim>::compute_pressure_error}'
p4179
aS'$L_2$'
p4180
aS'VectorTool::integrate_difference()'
p4181
aS'$L_2$'
p4182
aS'@sect4{WGDarcyEquation<dim>::compute_velocity_error}'
p4183
aS'$L_2$'
p4184
aS'$L_2$'
p4185
aS'$L_2$'
p4186
aS'$L_2$'
p4187
aS'$L_2$'
p4188
aS'@sect4{WGDarcyEquation::output_results}'
p4189
aS'<code>DataOut</code>'
p4190
aS'$p^\\partial$'
p4191
aS'DataOut::add_data_vector()'
p4192
aS'@sect4{WGDarcyEquation::run}'
p4193
aS'@sect3{The <code>main</code> function}'
p4194
aS'@sect3{Include files}'
p4195
aS'step-40'
p4196
aS'VectorTools::point_value'
p4197
aS'GridTools::find_active_cell_around_point'
p4198
aS'`ElasticWave::store_frequency_step_data()`'
p4199
aS'@sect3{Auxiliary classes and functions}'
p4200
aS'@sect4{The `RightHandSide` class}'
p4201
aS'HDF5::Group'
p4202
aS'`RightHandSide::data`,'
p4203
aS'`PML::data`,'
p4204
aS'`Rho::data`'
p4205
aS'`Parameters::data`'
p4206
aS'HDF5::Group'
p4207
aS'$x$'
p4208
aS'$F_y=0$'
p4209
aS'@sect4{The `PML` class}'
p4210
aS'HDF5::Group'
p4211
aS'@sect4{The `Rho` class}'
p4212
aS'HDF5::Group'
p4213
aS'@sect4{The `Parameters` class}'
p4214
aS'HDF5::Group'
p4215
aS'@sect4{The `QuadratureCache` class}'
p4216
aS'step-18'
p4217
aS'@sect4{The `get_stiffness_tensor()` function}'
p4218
aS'$\\rho$'
p4219
aS'step-8'
p4220
aS'$c_{ijkl}$'
p4221
aS'$\\lambda$'
p4222
aS'$\\mu$'
p4223
aS'@sect3{The `ElasticWave` class}'
p4224
aS'step-40'
p4225
aS'$(x,y)$'
p4226
aS'@sect3{Implementation of the auxiliary classes}'
p4227
aS'@sect4{The `RightHandSide` class implementation}'
p4228
aS'HDF5::Group'
p4229
aS'HDF5::Group::get_attribute()'
p4230
aS'$a$'
p4231
aS'$\\sigma_x$'
p4232
aS'$\\sigma_y$'
p4233
aS'$x$'
p4234
aS'$y$'
p4235
aS'$x_\\textrm{min}<x<x_\\textrm{max}$'
p4236
aS'$y_\\textrm{min} <y<y_\\textrm{max}$'
p4237
aS'@sect4{The `PML` class implementation}'
p4238
aS'HDF5::Group'
p4239
aS'HDF5::Group::get_attribute()'
p4240
aS"$s'_x = a_x x^{\\textrm{degree}}$"
p4241
aS'@sect4{The `Rho` class implementation}'
p4242
aS'$\\lambda/2$'
p4243
aS'$\\lambda$'
p4244
aS'$N$'
p4245
aS'$K_e$'
p4246
aS'$\\rho$'
p4247
aS'$K_e$'
p4248
aS'$\\rho$'
p4249
aS'step-62'
p4250
aS'@sect4{The `Parameters` class implementation}'
p4251
aS'HDF5::Group'
p4252
aS'HDF5::Group::get_attribute()'
p4253
aS'@sect4{The `QuadratureCache` class implementation}'
p4254
aS'@sect3{Implementation of the `ElasticWave` class}'
p4255
aS'@sect4{Constructor}'
p4256
aS'step-40'
p4257
aS'@sect4{ElasticWave::setup_system}'
p4258
aS'step-40'
p4259
aS'@sect4{ElasticWave::assemble_system}'
p4260
aS'step-40'
p4261
aS'$\\lambda$'
p4262
aS'$\\mu$'
p4263
aS'$\\rho$'
p4264
aS'step-20'
p4265
aS'step-18'
p4266
aS'$s$'
p4267
aS'$\\xi$'
p4268
aS'$\\alpha_{mnkl}$'
p4269
aS'$\\beta_{mnkl}$'
p4270
aS'$mnkl$'
p4271
aS'<code>Tensor@<2,dim@></code>'
p4272
aS'$G_{ij}$'
p4273
aS'$i$'
p4274
aS'$j$'
p4275
aS'$\\partial_j\\phi_i$'
p4276
aS'$\\omega$'
p4277
aS'@sect4{ElasticWave::solve}'
p4278
aS'step-40'
p4279
aS'@sect4{ElasticWave::initialize_position_vector}'
p4280
aS'@sect4{ElasticWave::store_frequency_step_data}'
p4281
aS'$x$'
p4282
aS'$y$'
p4283
aS'HDF5::DataSet::write_selection()'
p4284
aS'HDF5::DataSet::write_none().'
p4285
aS'`std::complex<double>`.'
p4286
aS'step-40'
p4287
aS'@sect4{ElasticWave::output_results}'
p4288
aS'HDF5::DataSet::write'
p4289
aS'HDF5::DataSet::write_none.'
p4290
aS'@sect4{ElasticWave::setup_quadrature_cache}'
p4291
aS'step-18'
p4292
aS'step-18'
p4293
aS'@sect4{ElasticWave::frequency_sweep}'
p4294
aS'step-40'
p4295
aS'@sect4{ElasticWave::run}'
p4296
aS'step-40'
p4297
aS'@sect4{The main function}'
p4298
aS'step-40'
p4299
aS'$x$'
p4300
aS'$y$'
p4301
aS'$x$'
p4302
aS'$y$'
p4303
aS'@sect3{Include files}'
p4304
aS'MeshWorker::mesh_loop'
p4305
aS'@sect3{MeshWorker data}'
p4306
aS'MeshWorker::mesh_loop():'
p4307
aS'@sect3{Problem parameters}'
p4308
aS'*/'
p4309
aS'*/'
p4310
aS'@sect3{Cell permutations}'
p4311
aS'@sect3{Right-hand side and boundary values}'
p4312
aS'Functions::ZeroFunction):'
p4313
aS'$x=1$'
p4314
aS'$x>0.5$'
p4315
aS'$y=-1$'
p4316
aS'@sect3{Streamline diffusion implementation}'
p4317
aS'@sect3{<code>AdvectionProlem</code> class}'
p4318
aS'step-16'
p4319
aS'`std::unique_ptr`'
p4320
aS'@sect4{<code>AdvectionProblem::setup_system()</code>}'
p4321
aS'*/'
p4322
aS'*/'
p4323
aS'@sect4{<code>AdvectionProblem::assemble_cell()</code>}'
p4324
aS'$\\delta=0$'
p4325
aS'@sect4{<code>AdvectionProblem::assemble_system_and_multigrid()</code>}'
p4326
aS'MeshWorker::mesh_loop()'
p4327
aS'$(i,j)$'
p4328
aS'$(j,i)$'
p4329
aS'$(j,i)$'
p4330
aS'@sect4{<code>AdvectionProblem::setup_smoother()</code>}'
p4331
aS'@sect4{<code>AdvectionProblem::solve()</code>}'
p4332
aS'Step-16'
p4333
aS'@sect4{<code>AdvectionProblem::output_results()</code>}'
p4334
aS'@sect4{<code>AdvectionProblem::run()</code>}'
p4335
aS'<code>[-1,1]^dim</code>'
p4336
aS'@sect3{The <code>main</code> function}'
p4337
aS'@sect3{Include files}'
p4338
aS'step-6'
p4339
aS'@sect3{Analytical solution and coefficient}'
p4340
aS'$f(\\mathbf{x}) = -3$'
p4341
aS'step-5'
p4342
aS'step-6'
p4343
aS'$u(x,y,z) = x^2 + y^2 + z^2$'
p4344
aS'$u(x,y,z) = 0.1(x^2 + y^2 + z^2) + 0.25-0.025$'
p4345
aS'@sect3{The PoissonProblem class}'
p4346
aS'step-5'
p4347
aS'step-10'
p4348
aS'step-11'
p4349
aS'`PoissonProblem::run()`'
p4350
aS'@sect3{Grid creation and initialization of the manifolds}'
p4351
aS'GridGenerator::hyper_cube()'
p4352
aS'GridGenerator::hyper_shell'
p4353
aS'$2d$'
p4354
aS'$[-1, 1]$'
p4355
aS'$(\\pm 1, \\pm 1, \\pm 1)$'
p4356
aS'$\\sqrt{d}$'
p4357
aS'$d$'
p4358
aS'$\\sqrt{3}$'
p4359
aS'GridGenerator::hyper_ball(),'
p4360
aS'$r^2-0.25 \\approx 0$'
p4361
aS'TransfiniteInterpolationManifold::initialize()'
p4362
aS'@sect3{Setup of data structures}'
p4363
aS'VectorTools::interpolate_boundary_values()'
p4364
aS'@sect3{Assembly of the system matrix and right hand side}'
p4365
aS'$a(\\mathbf{x}_q)$'
p4366
aS'$\\sqrt{\\text{det}(J) w_q a(x)} \\frac{\\partial \\varphi_i(\\boldsymbol\n \\xi_q)}{\\partial x_k}$'
p4367
aS'$\\sum_q \\sum_{k=1}^d \\sqrt{\\text{det}(J) w_q a(x)} \\frac{\\partial\n \\varphi_i(\\boldsymbol \\xi_q)}{\\partial x_k} \\sqrt{\\text{det}(J) w_q a(x)}\n \\frac{\\partial \\varphi_j(\\boldsymbol \\xi_q)}{\\partial x_k} = \\sum_q\n \\sum_{k=1}^d\\text{det}(J) w_q a(x)\\frac{\\partial \\varphi_i(\\boldsymbol\n \\xi_q)}{\\partial x_k} \\frac{\\partial \\varphi_j(\\boldsymbol\n \\xi_q)}{\\partial x_k}$'
p4368
aS'FullMatrix::mTmult()'
p4369
aS'$(p+1)^9$'
p4370
aS'$p$'
p4371
aS'$\\mathcal O((p+1)^7)$'
p4372
aS'step-37'
p4373
aS'@sect3{Solution of the linear system}'
p4374
aS'@sect3{Output of the solution and computation of errors}'
p4375
aS'DataOut::build_patches().)'
p4376
aS'DataOutBase::VtkFlags'
p4377
aS'DataOut::build_patches()'
p4378
aS'$L_2$'
p4379
aS'$H^1$'
p4380
aS'$10^{-7}$'
p4381
aS'step-6'
p4382
aS'@sect3{The PoissonProblem::run() function}'
p4383
aS'MappingQCache::initialize()'
p4384
aS'@sect3{Matrix-free JacobianOperator}'
p4385
aS'step-37'
p4386
aS'step-48'
p4387
aS'MatrixFreeOperators::Base'
p4388
aS'<code>JacobianOperator</code>'
p4389
aS'MatrixFreeOperators::Base'
p4390
aS'MatrixFreeOperators::Base::apply_add()'
p4391
aS'MatrixFreeOperators::Base::compute_diagonal()'
p4392
aS"$F'$"
p4393
aS'$u_h^n$'
p4394
aS'$s_h^n$'
p4395
aS'$u_h^n$'
p4396
aS'step-37'
p4397
aS'<code>nonlinear_values</code>'
p4398
aS'<code>evaluate_coefficient()</code>'
p4399
aS'<code>evaluate_newton_step()</code>'
p4400
aS'<code>JacobianOperator</code>'
p4401
aS'<code>local_apply()</code>'
p4402
aS'<code>local_compute_diagonal()</code>'
p4403
aS'MatrixFree::cell_loop()'
p4404
aS'<code>apply_add()</code>'
p4405
aS'MatrixFreeTools::compute_diagonal()'
p4406
aS'<code>JacobianOperator</code>'
p4407
aS'MatrixFreeOperators::Base,'
p4408
aS'<code>clear()</code>'
p4409
aS'<code>clear()</code>'
p4410
aS'@sect4{Evaluation of the old Newton step}'
p4411
aS'<code>evaluate_newton_step()</code>'
p4412
aS'<code>evaluate_coefficient()</code>'
p4413
aS'step-37'
p4414
aS'FEEvaluation::read_dof_values_plain()'
p4415
aS'FEEvaluation::evaluate()'
p4416
aS'<code>nonlinear_values</code>'
p4417
aS'<code>local_apply()</code>'
p4418
aS'<code>std::exp(newton_step[q])</code>'
p4419
aS'<code>vmult()</code>'
p4420
aS'@sect4{Nonlinear matrix-free operator application}'
p4421
aS'<code>local_apply()</code>'
p4422
aS'<code>nonlinear_values</code>'
p4423
aS'step-37'
p4424
aS'<code>src</code>'
p4425
aS'FEEvaluation::integrate_scatter()'
p4426
aS'<code> dst</code>'
p4427
aS'MatrixFree::cell_loop()'
p4428
aS'@sect4{Diagonal of the JacobianOperator}'
p4429
aS'<code>local_compute_diagonal()</code>'
p4430
aS'<code>local_apply()</code>'
p4431
aS'MatrixFreeOperators::Base::compute_diagonal()'
p4432
aS'<code>JacobianOperator</code>'
p4433
aS'<code>inverse_diagonal_entries</code>'
p4434
aS'<code>local_compute_diagonal()</code>'
p4435
aS'MatrixFreeTools::compute_diagonal()'
p4436
aS'@sect3{GelfandProblem class}'
p4437
aS'step-15'
p4438
aS'<code>vmult()</code>'
p4439
aS'<code>evaluate_residual()</code>'
p4440
aS'<code>assemble_rhs()</code> and the <code>compute_residual()</code>'
p4441
aS'<code>solve()</code>'
p4442
aS'<code>compute_update()</code>'
p4443
aS'parallel::distributed::Triangulation.'
p4444
aS'<code>use_mapping_q_on_all_cells</code>'
p4445
aS'<code>true</code>'
p4446
aS'<code>system_matrix</code>'
p4447
aS'<code>mg_matrices</code>'
p4448
aS'step-37'
p4449
aS'<code>solution</code>'
p4450
aS'<code>newton_update</code> and the <code>system_rhs</code>'
p4451
aS'<code>GelfandProblem</code>'
p4452
aS'parallel::distributed::Triangulation,'
p4453
aS'@sect4{GelfandProblem::make_grid}'
p4454
aS'<code>dim</code>'
p4455
aS'<code>dim</code>'
p4456
aS'@sect4{GelfandProblem::setup_system}'
p4457
aS'<code>setup_system()</code>'
p4458
aS'step-37'
p4459
aS'TimerOutput::Scope'
p4460
aS'<code>triangulation</code>'
p4461
aS'<code>JacobianOperator</code>'
p4462
aS'@sect4{GelfandProblem::evaluate_residual}'
p4463
aS'$\\texttt{dst} = F(\\texttt{src})$'
p4464
aS'MatrixFree::cell_loop(),'
p4465
aS'<code>apply_add()</code> function of the <code>JacobianOperator</code>'
p4466
aS'<code>system_matrix</code>'
p4467
aS'<code>local_evaluate_residual()</code>'
p4468
aS'MatrixFree::cell_loop().'
p4469
aS'MatrixFree::cell_loop().'
p4470
aS'@sect4{GelfandProblem::local_evaluate_residual}'
p4471
aS'<code>local_apply()</code>'
p4472
aS'<code>JacobianOperator</code>'
p4473
aS'<code>src</code>'
p4474
aS'<code>cell_range</code>'
p4475
aS'<code>local_apply()</code>'
p4476
aS'FEEvaluation::gather_evaluate()'
p4477
aS'FEEvaluation::read_dof_values_plain()'
p4478
aS'FEEvaluation::evaluate(),'
p4479
aS'@sect4{GelfandProblem::assemble_rhs}'
p4480
aS'<code>evaluate_residual()</code>'
p4481
aS'<code>evaluate_residual()</code>'
p4482
aS'@sect4{GelfandProblem::compute_residual}'
p4483
aS'step-15'
p4484
aS'$u_h^n + \\alpha s_h^n$'
p4485
aS'<code>evaluate_residual()</code>'
p4486
aS'$\\alpha$'
p4487
aS'$\\alpha=1$'
p4488
aS'$\\alpha<1$'
p4489
aS'step-15'
p4490
aS'@sect4{GelfandProblem::compute_update}'
p4491
aS'step-37'
p4492
aS'<code>JacobianOperator</code>'
p4493
aS'MGTransferMatrixFree::interpolate_to_mg().'
p4494
aS'<code>newton_update</code>'
p4495
aS'<code>newton_update</code>'
p4496
aS'SolverCG::solve().'
p4497
aS'<code>constraints</code>'
p4498
aS'@sect4{GelfandProblem::solve}'
p4499
aS'$\\|F(u^n_h)\\|<\\text{TOL}_f =\n 10^{-12}$'
p4500
aS'$\\|s_h^n\\| < \\text{TOL}_x =\n 10^{-10}$'
p4501
aS'$\\alpha$'
p4502
aS'$\\alpha$'
p4503
aS'@sect4{GelfandProblem::compute_solution_norm}'
p4504
aS'step-59'
p4505
aS'VectorTools::integrate_difference().'
p4506
aS'@sect4{GelfandProblem::output_results}'
p4507
aS'DataOut::write_vtu_with_pvtu_record()'
p4508
aS'step-37'
p4509
aS'step-40'
p4510
aS'types::subdomain_id'
p4511
aS'DataOut::build_patches().'
p4512
aS'<code>mapping</code>'
p4513
aS'DataOut::curved_inner_cells'
p4514
aS'DataOutBase::VtkFlags::write_higher_order_cells.'
p4515
aS'@sect4{GelfandProblem::run}'
p4516
aS'@sect3{The <code>main</code> function}'
p4517
aS'<code>GelfandProblem</code>'
p4518
aS'step-37'
p4519
aS'step-48'
p4520
aS'step-59'
p4521
aS'$\\Delta t =\n \\text{Cr} n_\\text{stages} \\frac{h}{(p+1)^{1.5} (\\|\\mathbf{u} +\n c)_\\text{max}}$'
p4522
aS'@sect3{Equation data}'
p4523
aS'$d+2$'
p4524
aS'$d$'
p4525
aS'$\\frac{1}{\\gamma -1}$'
p4526
aS'`std::pow()`'
p4527
aS'`std::pow()`,'
p4528
aS'$x$'
p4529
aS'$E = \\frac{c^2}{\\gamma (\\gamma\n -1)} + \\frac 12 \\rho \\|u\\|^2$'
p4530
aS'@sect3{Low-storage explicit Runge--Kutta time integrators}'
p4531
aS'$b_i$'
p4532
aS'$a_i$'
p4533
aS'$c_i = \\sum_{j=1}^{i-2} b_i + a_{i-1}$'
p4534
aS'$\\mathbf{w}$'
p4535
aS'$\\mathbf{w}^{n+1}$'
p4536
aS'$t^{n+1}$'
p4537
aS'$\\mathbf{r}_i$'
p4538
aS'$\\mathbf{k}_i$'
p4539
aS'$b_i$'
p4540
aS'$a_i$'
p4541
aS'$\\mathbf{r}_i$'
p4542
aS'$\\mathbf{w}$'
p4543
aS'$\\mathbf{w}^n$'
p4544
aS'$\\mathbf r_i$'
p4545
aS'$\\mathbf{r}_i$'
p4546
aS'$\\mathbf{r}_{s+1}$'
p4547
aS'$a_s$'
p4548
aS'@sect3{Implementation of point-wise operations of the Euler equations}'
p4549
aS'$[\\rho, \\rho\\mathbf{u}, E]$'
p4550
aS'$\\rho \\mathbf{u}$'
p4551
aS'$\\rho$'
p4552
aS'$\\frac{1}{\\rho}$'
p4553
aS'$p = (\\gamma - 1) \\left(E - \\frac 12 \\rho\n \\mathbf{u}\\cdot \\mathbf{u}\\right)$'
p4554
aS'$\\mathbf{w}^-$'
p4555
aS'$\\mathbf{w}^+$'
p4556
aS'$\\hat{\\mathbf{F}}\n =\\frac{\\mathbf{F}(\\mathbf{w}^-)+\\mathbf{F}(\\mathbf{w}^+)}{2} +\n \\frac{\\lambda}{2}\\left[\\mathbf{w}^--\\mathbf{w}^+\\right]\\otimes\n \\mathbf{n^-}$'
p4557
aS'$\\lambda =\n \\max\\left(\\|\\mathbf{u}^-\\|+c^-, \\|\\mathbf{u}^+\\|+c^+\\right)$'
p4558
aS'$c = \\sqrt{\\gamma p / \\rho}$'
p4559
aS'$\\lambda$'
p4560
aS'$\\sqrt{\\|\\mathbf{u}\\|^2+c^2}$'
p4561
aS'$\\lambda$'
p4562
aS'$\\mathbf{w}$'
p4563
aS'$\\lambda\\to 0$'
p4564
aS'$s$'
p4565
aS'$\\mathbf{w}^-$'
p4566
aS'$\\mathbf{w}^+$'
p4567
aS'step-37'
p4568
aS'@sect3{The EulerOperation class}'
p4569
aS'step-37'
p4570
aS'step-59'
p4571
aS'VectorTools::project()'
p4572
aS'types::boundary_id'
p4573
aS'$\\rho$'
p4574
aS'$\\rho\n \\mathbf{u}$'
p4575
aS'$E$'
p4576
aS'@sect4{Local evaluators}'
p4577
aS'step-37'
p4578
aS'step-48'
p4579
aS'step-59'
p4580
aS'FEEvaluation::n_q_points,'
p4581
aS'FEEvaluation::get_value()'
p4582
aS'FEEvaluationBase::read_dof_values()'
p4583
aS'FEEvaluation::distributed_local_to_global()'
p4584
aS'FEEvaluation::gather_evaluate()'
p4585
aS'FEEvaluation::integrate_scatter()'
p4586
aS'Functions::ConstantFunction),'
p4587
aS'$x,y,z$'
p4588
aS'FEEvaluationBase::submit_value()'
p4589
aS'FEEvaluationBase::submit_gradient().'
p4590
aS'MatrixFree::loop().'
p4591
aS'$\\mathbf{w}^-$'
p4592
aS'$\\mathbf{w}^+$'
p4593
aS'FEFaceEvaluation::gather_evaluate()'
p4594
aS'FEFaceEvaluation::integrate_scatter()'
p4595
aS'$(p+1)^{d-1}$'
p4596
aS'$(p+1)^d$'
p4597
aS'FEFaceEvaluation::evaluate()'
p4598
aS'$(p+1)^d$'
p4599
aS'$\\mathbf{w}^-$'
p4600
aS'$\\mathbf{w}^+$'
p4601
aS'$\\mathbf{w}^+$'
p4602
aS'$\\rho^+ = \\rho^-$'
p4603
aS'$E^+ = E^-$'
p4604
aS'$\\mathbf{w}_\\mathrm{D}$'
p4605
aS'$\\mathbf{w}^+ = -\\mathbf{w}^- + 2 \\mathbf{w}_\\mathrm{D}$'
p4606
aS'$\\mathbf{w}^+ = \\mathbf{w}^-$'
p4607
aS'`EulerOperator::set_..._boundary(...)`.'
p4608
aS'MatrixFreeOperators::CellwiseInverseMassMatrix'
p4609
aS'$S^{-1}$'
p4610
aS'$p+1$'
p4611
aS'@sect4{The apply() and related functions}'
p4612
aS'$\\mathcal M^{-1} \\mathcal L(t, \\mathbf{w})$'
p4613
aS'MatrixFree::loop()'
p4614
aS'$\\mathcal L$'
p4615
aS'MatrixFree::cell_loop()'
p4616
aS'EulerOperator::apply()'
p4617
aS'MatrixFree::cell_loop()'
p4618
aS'`std::function`'
p4619
aS'`std::function`'
p4620
aS'*/'
p4621
aS'*/'
p4622
aS'VectorTools::project(),'
p4623
aS'MatrixFreeOperators::CellwiseInverseMassMatrix.'
p4624
aS'$S$'
p4625
aS'$K$'
p4626
aS'$\\underbrace{S J^K S^\\mathrm\n T}_{\\mathcal M^K} \\mathbf{w}^K = S J^K\n \\tilde{\\mathbf{w}}(\\mathbf{x}_q)_{q=1:n_q}$'
p4627
aS'$J^K$'
p4628
aS'$\\mathcal M^K$'
p4629
aS'$\\tilde{\\mathbf{w}}(\\mathbf{x}_q)_{q=1:n_q}$'
p4630
aS'$S$'
p4631
aS'$\\mathbf{w}^K = \\left(S J^K S^\\mathrm T\\right)^{-1} S J^K\n \\tilde{\\mathbf{w}}(\\mathbf{x}_q)_{q=1:n_q} = S^{-\\mathrm T}\n \\left(J^K\\right)^{-1} S^{-1} S J^K\n \\tilde{\\mathbf{w}}(\\mathbf{x}_q)_{q=1:n_q}$'
p4632
aS'$S^{-1} S$'
p4633
aS'$\\left(J^K\\right)^{-1} J^K$'
p4634
aS'$\\mathbf{w}^K = S^{-\\mathrm T}\n \\tilde{\\mathbf{w}}(\\mathbf{x}_q)_{q=1:n_q}$'
p4635
aS'MatrixFreeOperators::CellwiseInverseMassMatrix::transform_from_q_points_to_basis().'
p4636
aS'$S^{-\\mathrm T}$'
p4637
aS'FEEvaluation::set_dof_values()'
p4638
aS'VectorTools::integrate_difference().'
p4639
aS'MatrixFree::n_active_entries_per_cell_batch()'
p4640
aS'VectorizedArray::size()'
p4641
aS'$\\mathbf{u}$'
p4642
aS'$c = \\sqrt{\\gamma p/\\rho}$'
p4643
aS'$\\mathbf u$'
p4644
aS'$\\mathbf u$'
p4645
aS'$\\|J^{-\\mathrm T} \\mathbf{u}\\|_\\infty$'
p4646
aS'$J$'
p4647
aS'FEEvaluationBase::inverse_jacobian()'
p4648
aS'$J$'
p4649
aS'$J^{-1}$'
p4650
aS'$J^{-1}J^{-\\mathrm T}$'
p4651
aS'@sect3{The EulerProblem class}'
p4652
aS'step-10'
p4653
aS'step-33'
p4654
aS'$\\rho$'
p4655
aS'$\\rho \\mathbf{u}$'
p4656
aS'$E$'
p4657
aS'$\\mathbf u$'
p4658
aS'$p$'
p4659
aS'$c=\\sqrt{\\gamma p / \\rho}$'
p4660
aS'$s = |\\nabla \\rho|^2$'
p4661
aS'step-69'
p4662
aS'$(0, 10) \\times (-5, 5)$'
p4663
aS'GridGenerator::channel_with_cylinder()),'
p4664
aS'step-32'
p4665
aS'$x$'
p4666
aS'step-33'
p4667
aS'step-65'
p4668
aS'`DataOutInterface::write_vtu_in_parallel()`'
p4669
aS'`std::ofstream`'
p4670
aS'DataOut::add_data_vector()'
p4671
aS'GridTools::get_subdomain_association().'
p4672
aS'DataOut::add_data_vector()'
p4673
aS'EulerProblem::run()'
p4674
aS'$\\mathbf{r}_i$'
p4675
aS'$\\mathbf{k}_i$'
p4676
aS'`EulerOperator::compute_cell_transport_speed()`'
p4677
aS'TimerOutput::print_wall_time_statistics()'
p4678
aS'Utilities::MPI::MPI_InitFinalize'
p4679
aS'@sect3{Include files}'
p4680
aS'Particles::Particle),'
p4681
aS'parallel::distributed::Triangulation.'
p4682
aS'@sect3{Run-time parameter handling}'
p4683
aS'step-60'
p4684
aS'ParameterHandler::add_parameter()'
p4685
aS'$Q_1$'
p4686
aS'@sect3{Velocity profile}'
p4687
aS'@sect3{The <code>ParticleTracking</code> class declaration}'
p4688
aS'step-40'
p4689
aS'@sect3{The <code>PatricleTracking</code> class implementation}'
p4690
aS'@sect4{Constructor}'
p4691
aS'step-40'
p4692
aS'<code>pcout</code>'
p4693
aS'@sect4{Cell weight}'
p4694
aS'@sect4{Particles generation}'
p4695
aS'parallel::distributed::Triangulation.'
p4696
aS'@sect4{Background DOFs and interpolation}'
p4697
aS'VectorTools::interpolate()'
p4698
aS'@sect4{Time integration of the trajectories}'
p4699
aS'@sect4{Data output}'
p4700
aS'@sect4{Running the simulation}'
p4701
aS'step-21'
p4702
aS'step-26'
p4703
aS'step-'
p4704
aS'<code>sort_particles_into_subdomains_and_cells</code>'
p4705
aS'@sect3{The main() function}'
p4706
aS'@sect3{Include files}'
p4707
aS'parallel::distributed::Triangulation'
p4708
aS'LinearAlgebra::distributed::Vector'
p4709
aS'<code>distributed/tria.h</code>'
p4710
aS'<code>lac/la_parallel_vector.h</code>'
p4711
aS'dealii::SparseMatrix'
p4712
aS'<code>lac/sparse_matrix.h</code>'
p4713
aS'$\\mathbf{c}_{ij}$'
p4714
aS'$\\mathbf{n}_{ij}$'
p4715
aS'$d_{ij}$'
p4716
aS'std::isnan,'
p4717
aS'std::isinf,'
p4718
aS'std::ifstream,'
p4719
aS'std::async,'
p4720
aS'std::future'
p4721
aS'@sect3{Class template declarations}'
p4722
aS'<code>Discretization</code>'
p4723
aS'<code>make_one_step()</code>'
p4724
aS'<code>%TimeStepping</code>'
p4725
aS'@note'
p4726
aS'step-60'
p4727
aS'types::boundary_id'
p4728
aS'<code>do_nothing</code>'
p4729
aS'@sect4{The <code>Discretization</code> class}'
p4730
aS'<code>Discretization</code>'
p4731
aS'<code>length</code>'
p4732
aS'<code>refinement</code>'
p4733
aS'<code>setup()</code>'
p4734
aS'ParameterAcceptor::initialize().'
p4735
aS'@sect4{The <code>OfflineData</code> class}'
p4736
aS'<code>OfflineData</code>'
p4737
aS'$\\mathbf{c}_{ij}$'
p4738
aS'$\\mathbf{n}_{ij}$'
p4739
aS'<code>OfflineData</code>'
p4740
aS'<code>boundary_normal_map</code>'
p4741
aS'types::global_dof_index'
p4742
aS'@note'
p4743
aS'<code>setup()</code> (and <code>assemble()</code>'
p4744
aS'@sect4{The <code>ProblemDescription</code> class}'
p4745
aS'<code>state_type</code>'
p4746
aS'$\\mathbf{U}_i^n$'
p4747
aS'<code>flux_type</code>'
p4748
aS'$\\mathbb{f}(\\mathbf{U}_j^n)$'
p4749
aS'<code>momentum</code>'
p4750
aS'$\\textbf{m}$'
p4751
aS'$[\\rho,\\textbf{m},E]$'
p4752
aS'<code>Tensor<1, dim></code>'
p4753
aS'<code>internal_energy</code>'
p4754
aS'$E -\n   \\frac{|\\textbf{m}|^2}{2\\rho}$'
p4755
aS'$[\\rho,\\textbf{m},E]$'
p4756
aS'<code>component_names</code>'
p4757
aS'<code>pressure</code>, and <code>speed_of_sound</code>'
p4758
aS'<code>compute_lambda_max()</code>'
p4759
aS'$\\lambda_{max}(\\mathbf{U},\\mathbf{V},\\mathbf{n})$'
p4760
aS'$d_{ij}$'
p4761
aS'@note'
p4762
aS'<code>DEAL_II_ALWAYS_INLINE</code>'
p4763
aS'<code>inline</code>'
p4764
aS'<code>DEAL_II_ALWAYS_INLINE</code>'
p4765
aS'@sect4{The <code>InitialValues</code> class}'
p4766
aS'<code>InitialValues</code>'
p4767
aS'std::function'
p4768
aS'<code>initial_state</code>'
p4769
aS'<code>setup()</code>'
p4770
aS'ParameterAcceptor::initialize()'
p4771
aS'<code>parse_parameters_call_back()</code>'
p4772
aS'ParameterAcceptor::initialize()'
p4773
aS'ParameterAcceptor::parse_parameters_call_back'
p4774
aS'@sect4{The <code>%TimeStepping</code> class}'
p4775
aS'<code>OfflineData</code> and <code>ProblemDescription</code>'
p4776
aS'<code>%TimeStepping</code>'
p4777
aS'<code>U</code> and a time point <code>t</code>'
p4778
aS'<code>temp</code>, swaps its contents with the vector <code>U</code>'
p4779
aS'step-'
p4780
aS'$\\tau$'
p4781
aS'<code>prepare()</code>'
p4782
aS'<code>temp</code> and the matrix <code>dij_matrix</code>'
p4783
aS'@sect4{The <code>SchlierenPostprocessor</code> class}'
p4784
aS'<code>compute_schlieren()</code>'
p4785
aS'<code>schlieren</code>'
p4786
aS'$r$'
p4787
aS'$r \\dealcoloneq \\rho$'
p4788
aS'step-67'
p4789
aS'@sect4{The <code>MainLoop</code> class}'
p4790
aS'<code>%TimeStepping</code>, <code>InitialValues</code>'
p4791
aS'<code>SchlierenPostprocessor</code>'
p4792
aS'<code>MainLoop</code>'
p4793
aS'@sect3{Implementation}'
p4794
aS'@sect4{Grid generation, setup of data structures}'
p4795
aS'<code>subsection</code>'
p4796
aS'ParameterAcceptor::add_parameter().'
p4797
aS'<code>triangulation</code>'
p4798
aS'<code>setup()</code>'
p4799
aS'ParameterAcceptor::initialize()'
p4800
aS'<code>setup()</code>'
p4801
aS'@cite GuermondEtAl2018'
p4802
aS'GridGenerator::hyper_cube_with_cylindrical_hole().'
p4803
aS'step-49'
p4804
aS'step-53'
p4805
aS'step-54'
p4806
aS'GridGenerator::merge_triangulation()'
p4807
aS'$(0,0)$'
p4808
aS'<code>disk_diameter</code>'
p4809
aS'<code>-disk_position</code>, <code>-height/2</code>'
p4810
aS'<code>length-disk_position</code>'
p4811
aS'<code>height/2</code>'
p4812
aS'$x=-$'
p4813
aS'<code>disk_diameter</code>'
p4814
aS'$x=-$'
p4815
aS'<code>disk_position</code>'
p4816
aS'<code>Boundaries::do_nothing</code>'
p4817
aS'<code>dirichlet</code> on the left and <code>free_slip</code>'
p4818
aS'@sect4{Assembly of offline matrices}'
p4819
aS'<code>OfflineData</code>'
p4820
aS'Utilities::MPI::Partitioner'
p4821
aS'@sect4{Translation to local index ranges}'
p4822
aS'@ref Sparsity'
p4823
aS'Utilities::MPI::Partitioner'
p4824
aS'$[0,$'
p4825
aS'<code>n_locally_relevant</code>'
p4826
aS'$)$'
p4827
aS'Utilities::MPI::Partitioner::global_to_local()'
p4828
aS'LinearAlgebra::distributed::Vector::local_element().'
p4829
aS'@ref'
p4830
aS'<code>dof_indices</code>'
p4831
aS'<code>partitioner->global_to_local(index)</code>'
p4832
aS'@note'
p4833
aS'$[0,$'
p4834
aS'<code>n_locally_owned</code>'
p4835
aS'$)$'
p4836
aS'<code>CopyData</code>'
p4837
aS'<code>local_boundary_normal_map</code>'
p4838
aS'<code>get_entry()</code>'
p4839
aS'<code>it</code> of <code>matrix</code>'
p4840
aS'<code>get_entry()</code>'
p4841
aS'<code>set_entry()</code>'
p4842
aS'<code>get_value()</code>'
p4843
aS'<code>gather_get_entry()</code>'
p4844
aS'$\\mathbf{c}_{ij} \\in\n \\mathbb{R}^d$'
p4845
aS'$d=2$'
p4846
aS'$\\mathbf{c}_{ij} =\n [\\mathbf{c}_{ij}^1,\\mathbf{c}_{ij}^2]^\\top$'
p4847
aS'$\\mathbf{c}_{ij}$'
p4848
aS'$\\mathbf{n}_{ij}$'
p4849
aS'<code>gather_get_entry()</code>'
p4850
aS'<code>Tensor<1, dim></code>'
p4851
aS'<code>gather()</code>'
p4852
aS'<code>(i,l)</code>'
p4853
aS'<code>gather_get_entry()</code>'
p4854
aS'<code>gather()</code>'
p4855
aS'<code>gather()</code>'
p4856
aS'<code>(i,l)</code>'
p4857
aS'<code>gather()</code>'
p4858
aS'<code>gather_get_entry()</code>'
p4859
aS'<code>gather()</code>'
p4860
aS'$d_{ij}$'
p4861
aS'$i$'
p4862
aS'$j$'
p4863
aS'@note'
p4864
aS'<code>(i,l)</code>'
p4865
aS'<code>gather()</code>'
p4866
aS'<code>i</code>'
p4867
aS'<code>Tensor<1,problem_dimension></code>'
p4868
aS'<code>scatter()</code>'
p4869
aS'<code>Tensor<1,problem_dimension></code>'
p4870
aS'<code>Tensor<1,problem_dimension></code>'
p4871
aS'<code>OfflineData</code>'
p4872
aS'$m_i$'
p4873
aS'$\\mathbf{c}_{ij}$'
p4874
aS'$\\mathbf{n}_{ij} =\n \\frac{\\mathbf{c}_{ij}}{|\\mathbf{c}_{ij}|}$'
p4875
aS'$\\boldsymbol{\\nu}_i$'
p4876
aS'@ref threads'
p4877
aS'<code>scratch_data</code>'
p4878
aS'<code>local_assemble_system()</code>'
p4879
aS'<code>CopyData<dim>()</code>'
p4880
aS'<code>copy_local_to_global()</code>'
p4881
aS'<code>local_assemble_system()</code>'
p4882
aS'<code>copy_local_to_global()</code>'
p4883
aS'step-9'
p4884
aS'step-13'
p4885
aS'step-32'
p4886
aS'$\\mathbf{x}_i$'
p4887
aS'<code>OfflineData<dim>::BoundaryNormalMap</code>'
p4888
aS'$m_i$'
p4889
aS'$c_{ij}$'
p4890
aS'$m_i$'
p4891
aS'$\\mathbf{c}_{ij}$'
p4892
aS'<code>nij_matrix</code>'
p4893
aS'<code>cij_matrix</code>'
p4894
aS'<code>norm_matrix</code>'
p4895
aS'<code>OfflineData<dim>::BoundaryNormalMap</code>'
p4896
aS'<code>norm_matrix</code> and the normalization of <code>nij_matrix</code>'
p4897
aS'$i$'
p4898
aS'$j$'
p4899
aS'$\\mathbf{c}_{ij} \\not \\equiv 0$'
p4900
aS'parallel::apply_to_subranges()'
p4901
aS'parallel::apply_to_subranges()'
p4902
aS'<code>indices.begin()</code>'
p4903
aS'<code>indices.end()</code>'
p4904
aS'<code>on_subranges(i1,i2)</code> (where <code>i1</code>'
p4905
aS'<code>i2</code>'
p4906
aS'<code>on_subranges</code>'
p4907
aS'<code>indices.begin()</code>'
p4908
aS'<code>indices.end()</code>'
p4909
aS'parallel::apply_to_subranges()'
p4910
aS'parallel::apply_to_subranges()'
p4911
aS'<code>indices.begin()</code>'
p4912
aS'<code>indices.end()</code>'
p4913
aS'std_cxx20::ranges::iota_view.'
p4914
aS'<code>on_subranges</code>'
p4915
aS'<code>row_index</code>'
p4916
aS'<code>sparsity_pattern.begin(row_index)</code>'
p4917
aS'<code>sparsity_pattern.end(row_index)</code>'
p4918
aS'`std::for_each`'
p4919
aS'parallel::apply_to_subranges()'
p4920
aS'$\\mathbf{c}_{ij}$'
p4921
aS'<code>OfflineData<dim>::BoundaryNormalMap</code>'
p4922
aS'@sect4{Equation of state and approximate Riemann solver}'
p4923
aS'<code>ProblemDescription</code>'
p4924
aS'step-69'
p4925
aS'<code>momentum</code>, <code>internal_energy</code>'
p4926
aS'<code>pressure</code>, <code>speed_of_sound</code>'
p4927
aS'<code>f</code>'
p4928
aS'$\\lambda_{\\text{max}}\n (\\mathbf{U}_i^{n},\\mathbf{U}_j^{n}, \\textbf{n}_{ij})$'
p4929
aS'@cite GuermondPopov2016b'
p4930
aS'<code>lambda_max_two_rarefaction()</code>'
p4931
aS'$p^*$'
p4932
aS'@cite Toro2009'
p4933
aS'<code>lambda_max_two_rarefaction()</code>'
p4934
aS'<code>lambda_max_expansion()</code>'
p4935
aS'<code>compute_lambda_max()</code>'
p4936
aS'<code>lambda_max_two_rarefaction()</code>'
p4937
aS'<code>lambda_max_expansion()</code>'
p4938
aS'<code>U</code>'
p4939
aS'<code>n_ij</code>'
p4940
aS'$\\textbf{m}\\cdot\n n_{ij}$'
p4941
aS'$\\rho$'
p4942
aS'$u$'
p4943
aS'$p$'
p4944
aS'$a$'
p4945
aS'$[\\rho, u, p, a]$'
p4946
aS'$p^\\ast$'
p4947
aS'@cite GuermondPopov2016'
p4948
aS'$(\\cdot)_{+}$'
p4949
aS'*/'
p4950
aS'@cite GuermondPopov2016'
p4951
aS'*/'
p4952
aS'$\\lambda^-$'
p4953
aS'$\\lambda^+$'
p4954
aS'@cite GuermondPopov2016'
p4955
aS'$p^\\ast$'
p4956
aS'@cite GuermondPopov2016'
p4957
aS'*/'
p4958
aS'*/'
p4959
aS'@note'
p4960
aS'$\\gamma \\in [0,5/3]$'
p4961
aS'$\\lambda_{\\text{max}} (\\mathbf{U}_i^{n},\\mathbf{U}_j^{n},\n \\textbf{n}_{ij})$'
p4962
aS'<code>component_names</code>'
p4963
aS'@sect4{Initial values}'
p4964
aS'<code>parse_parameters_call_back</code>'
p4965
aS'<code>parse_parameters_call_back</code>'
p4966
aS'ParameterAcceptor::initialize().'
p4967
aS'InitialValues<dim>::parse_parameters_callback'
p4968
aS'<code>InitialValues</code>'
p4969
aS'<code>initial_direction</code> and <code>initial_1d_state</code>'
p4970
aS'<code>initial_state()</code>'
p4971
aS'@note'
p4972
aS'<code>parse_parameters_call_back </code>'
p4973
aS'<code>setup()</code>'
p4974
aS'<code>initial_state()</code>'
p4975
aS'<code>initial_state</code>'
p4976
aS'$\\rho$'
p4977
aS'$u$'
p4978
aS'$p$'
p4979
aS'$\\rho$'
p4980
aS'$\\mathbf{m}$'
p4981
aS'$E$'
p4982
aS'@sect4{The Forward Euler step}'
p4983
aS'<code>%TimeStepping</code>'
p4984
aS'<code>prepare()</code>'
p4985
aS'<code>temp</code> and the matrix <code>dij_matrix</code>'
p4986
aS'<code>temp</code>'
p4987
aS'<code>U</code>'
p4988
aS'$t$'
p4989
aS'<code>U</code>'
p4990
aS'<code>sparsity</code>'
p4991
aS'<code>offline_data->sparsity_pattern</code>'
p4992
aS'$d_{ij}$'
p4993
aS'$d_{ij} = d_{ji}$'
p4994
aS'$\\int_{\\Omega} \\nabla \\phi_j \\phi_i \\, \\mathrm{d}\\mathbf{x}= -\n \\int_{\\Omega} \\nabla \\phi_i \\phi_j \\, \\mathrm{d}\\mathbf{x}$'
p4995
aS'$\\mathbf{c}_{ij} = - \\mathbf{c}_{ji}$'
p4996
aS'$\\mathbf{x}_i$'
p4997
aS'$\\mathbf{x}_j$'
p4998
aS'$\\lambda_{\\text{max}} (\\mathbf{U}_i^{n}, \\mathbf{U}_j^{n},\n \\textbf{n}_{ij}) = \\lambda_{\\text{max}} (\\mathbf{U}_j^{n},\n \\mathbf{U}_i^{n},\\textbf{n}_{ji})$'
p4999
aS'$d_{ij} = d_{ji}$'
p5000
aS'$\\mathbf{x}_i$'
p5001
aS'$\\mathbf{x}_j$'
p5002
aS'$\\mathbf{c}_{ij} =\n - \\mathbf{c}_{ji}$'
p5003
aS'$\\lambda_{\\text{max}} (\\mathbf{U}_i^{n},\n \\mathbf{U}_j^{n}, \\textbf{n}_{ij}) = \\lambda_{\\text{max}}\n (\\mathbf{U}_j^{n}, \\mathbf{U}_i^{n}, \\textbf{n}_{ji})$'
p5004
aS'$d_{ij}$'
p5005
aS'$d_{ji}$'
p5006
aS'$d_{ij}$'
p5007
aS'$d_{ij}$'
p5008
aS'parallel::apply_to_subranges()'
p5009
aS'<code>norm_matrix</code>'
p5010
aS'<code>nij_matrix</code>'
p5011
aS'<code>on_subranges</code>'
p5012
aS'$d_{ij}$'
p5013
aS'<code>sparsity.begin(i)</code>'
p5014
aS'<code>sparsity.end(i)</code>'
p5015
aS'$d_{ij}$'
p5016
aS'$j < i$'
p5017
aS'$d_{ji}$'
p5018
aS'$d_{ji}$'
p5019
aS'$\\max(d_{ij},d_{ji})$'
p5020
aS'$d_{ii}$'
p5021
aS'$\\tau_{\\text{max}}$'
p5022
aS'<code>dij_matrix</code>'
p5023
aS'$d_{ii}^n = - \\sum_{j \\in \\mathcal{I}(i)\\backslash \\{i\\}}\n d_{ij}^n$'
p5024
aS'parallel::apply_to_subranges()'
p5025
aS'$d_{ii}$'
p5026
aS'$\\min_{i \\in \\mathcal{V}}$'
p5027
aS'<code>tau_max</code>'
p5028
aS'<code>std::atomic</code>'
p5029
aS'<code>tau_max</code>'
p5030
aS'<code>Utilities::MPI::min</code>'
p5031
aS'<code>tau_max_on_subrange</code>'
p5032
aS'<code>tau</code>'
p5033
aS'<code>tau_max_on_subrange</code>'
p5034
aS'<code>tau_max</code>'
p5035
aS'$d_{ij}$'
p5036
aS'$\\tau_{\\text{max}}$'
p5037
aS'$\\mathbf{m}$'
p5038
aS'<code>U</code>'
p5039
aS'$\\tau_{\\text{max}}$'
p5040
aS'@sect4{Schlieren postprocessing}'
p5041
aS'<code>U</code>'
p5042
aS'<code>SchlierenPostprocessor</code>'
p5043
aS'$[\\rho, \\mathbf{m},E]$'
p5044
aS'<code>prepare()</code>'
p5045
aS'<code>r</code> and <code>schlieren</code>'
p5046
aS'<code>SchlierenPostprocessor<dim>::compute_schlieren()</code>'
p5047
aS'<code>U</code>'
p5048
aS'<code>SchlierenPostprocessor</code>'
p5049
aS'$\\nabla r_j$'
p5050
aS'$\\mathcal{C}^0$'
p5051
aS'$W^{1,p}(\\Omega)$'
p5052
aS'$S_i$'
p5053
aS'$\\phi_i$'
p5054
aS'$\\omega_i(\\mathbf{x})$'
p5055
aS'$\\omega_i(\\mathbf{x}) \\equiv 1$'
p5056
aS'$\\omega_i = \\phi_i$'
p5057
aS'$r_h(\\mathbf{x}) = \\sum_{j \\in \\mathcal{V}}\n r_j \\phi_j(\\mathbf{x})$'
p5058
aS'$\\mathbf{(*)}$'
p5059
aS'$\\max_j |\\nabla r_j|$'
p5060
aS'$\\min_j |\\nabla r_j|$'
p5061
aS'<code>%TimeStepping\\<dim>::%step()</code>'
p5062
aS'$\\max_j |\\nabla r_j|$'
p5063
aS'$\\min_j |\\nabla r_j|$'
p5064
aS'<code>Utilities::MPI::max()</code>'
p5065
aS'<code>Utilities::MPI::min()</code>'
p5066
aS'$|\\nabla r_i|$'
p5067
aS'$i \\in \\mathcal{V}$'
p5068
aS'$\\max_j |\\nabla r_j|$'
p5069
aS'$\\min_j |\\nabla r_j|$'
p5070
aS'<code>on_subranges</code>'
p5071
aS'$m_i$'
p5072
aS'<code>r_i_max</code> and <code>r_i_min</code>'
p5073
aS'<code>r</code>'
p5074
aS'<code>r_i_max</code> and <code>r_i_min</code>'
p5075
aS'@sect4{The main loop}'
p5076
aS'<code>Discretization<dim></code>, <code>OfflineData<dim></code>'
p5077
aS'<code>InitialValues<dim></code>, <code>%TimeStepping\\<dim></code>'
p5078
aS'<code>SchlierenPostprocessor<dim></code>'
p5079
aS'<code>MainLoop<dim></code>'
p5080
aS'<code>resume</code>'
p5081
aS'<code>print_head()</code>'
p5082
aS'*/'
p5083
aS'*/'
p5084
aS'<code>print_head</code>'
p5085
aS'<code>MainLoop<dim>::run()</code>'
p5086
aS'ParameterAcceptor::initialize'
p5087
aS'ParameterAcceptor::add_parameter()'
p5088
aS'<code>t</code> and vector <code>U</code>'
p5089
aS'@sect5{Resume}'
p5090
aS'<code>resume</code>'
p5091
aS'<code>resume==true</code>'
p5092
aS'<code>t</code>'
p5093
aS'<code>output_cycle</code>, and <code>U</code>'
p5094
aS'<code>output()</code>'
p5095
aS'<code>boost::archive</code>'
p5096
aS'<code>it1</code>'
p5097
aS'<code>U</code>'
p5098
aS'<code>U</code>'
p5099
aS'<code>time_stepping.make_one_step()</code>'
p5100
aS'<code>output()</code>'
p5101
aS'<code>output_granularity</code>'
p5102
aS'<code>interpolate_initial_values</code>'
p5103
aS'<code>U</code>'
p5104
aS'<code>InitialValues<dim>::initial_state</code>'
p5105
aS'<code>InitialValues<dim>::initial_state</code>'
p5106
aS'VectorTools::interpolate().'
p5107
aS'<code>x</code>'
p5108
aS'<code>i</code>'
p5109
aS'dealii::Function'
p5110
aS'@sect5{Output and checkpointing}'
p5111
aS'<code>output_worker</code>'
p5112
aS'<code>U</code>'
p5113
aS'<code>output_vector</code>'
p5114
aS'<code>std::future</code>'
p5115
aS'<code>void</code>'
p5116
aS'DataOut<dim>::build_patches()'
p5117
aS'DataOut<dim>::build_patches().'
p5118
aS'<code>this</code>'
p5119
aS'<code>output()</code>'
p5120
aS'@sect3{Include files}'
p5121
aS'step-2'
p5122
aS'VectorTools::integrate_difference()'
p5123
aS'<code>Step7</code>'
p5124
aS'<code>dealii</code>'
p5125
aS'@sect3{Equation data}'
p5126
aS'<code>std::array</code>'
p5127
aS'<code>dim</code>'
p5128
aS'<code>dim=1</code>'
p5129
aS'<code>dim</code>'
p5130
aS'<code>dim=2</code>'
p5131
aS'<code>dim</code>'
p5132
aS'<code>dim</code>'
p5133
aS'<code>dim</code>'
p5134
aS'<code>dim</code>'
p5135
aS'step-3'
p5136
aS'step-4'
p5137
aS'<code>dim</code> (so they have <code>dim</code>'
p5138
aS'<code>dim</code>'
p5139
aS'<code>this-&gt;source_centers</code>'
p5140
aS'<code>this-&gt;</code>'
p5141
aS'<code>return_value</code>'
p5142
aS'<code>1</code>'
p5143
aS'<code>dim</code>'
p5144
aS'@sect3{The Helmholtz solver class}'
p5145
aS'<code>process_solution</code>'
p5146
aS'@sect3{The HelmholtzProblem class implementation}'
p5147
aS'@sect4{HelmholtzProblem::HelmholtzProblem constructor}'
p5148
aS'@sect4{HelmholtzProblem::setup_system}'
p5149
aS'step-2'
p5150
aS'@sect4{HelmholtzProblem::assemble_system}'
p5151
aS'<code>dim-1</code>'
p5152
aS'<code>const</code>'
p5153
aS'<code>1</code>'
p5154
aS'<code>run()</code>'
p5155
aS'<code>0</code>'
p5156
aS'<code>1</code>'
p5157
aS'<code>reinit</code>'
p5158
aS'<code>fe_face_values</code>'
p5159
aS'<code>interpolate_boundary_values</code>'
p5160
aS'@sect4{HelmholtzProblem::solve}'
p5161
aS'@sect4{HelmholtzProblem::refine_grid}'
p5162
aS'<code>Assert</code> statement with a <code>false</code>'
p5163
aS'<code>Assert</code>'
p5164
aS'@sect4{HelmholtzProblem::process_solution}'
p5165
aS'<code>float</code>'
p5166
aS'<code>double</code>'
p5167
aS'<code>l</code>'
p5168
aS'<code>difference_per_cell</code>'
p5169
aS'<code>L2_error</code>'
p5170
aS'$H^1$'
p5171
aS'VectorTools::compute_global_error.'
p5172
aS'$k\\ge 2$'
p5173
aS'@cite Li2019'
p5174
aS'$u(\\mathbf x)-u_h(\\mathbf x)$'
p5175
aS'$\\mathbf x$'
p5176
aS'VectorTools::compute_global_error.'
p5177
aS'@sect4{HelmholtzProblem::run}'
p5178
aS'<code>run</code>'
p5179
aS'<code>0</code>'
p5180
aS'<code>1</code>'
p5181
aS'<code>1</code>'
p5182
aS'@sect5{Output of graphical data}'
p5183
aS'<code>vtk_filename</code>'
p5184
aS'<code>degree</code>'
p5185
aS'<code>x*y</code>'
p5186
aS'<code>Assert (false, ExcNotImplemented())</code>'
p5187
aS'<code>build_patches</code>'
p5188
aS'<code>1</code>'
p5189
aS'<code>2</code>'
p5190
aS'<code>q</code>, we use <code>q</code>'
p5191
aS'@sect5{Output of convergence tables}'
p5192
aS'<code>process_solution</code>'
p5193
aS'<code>scientific_flag</code> to <code>true</code>'
p5194
aS'<code>add_value</code>'
p5195
aS'$L^\\infty$'
p5196
aS'<code>std::cout</code>'
p5197
aS'@sect5{Further table manipulations}'
p5198
aS'<code>main()</code>'
p5199
aS'<code>Step7</code>'
p5200
aS'@sect3{Main function}'
p5201
aS'<code>try</code>'
p5202
aS'@sect3{Include files}'
p5203
aS'step-40'
p5204
aS'step-50'
p5205
aS'step-60'
p5206
aS'Particles::Particle),'
p5207
aS'parallel::distributed::Triangulation.'
p5208
aS'step-54'
p5209
aS'@sect3{Run-time parameter handling}'
p5210
aS'step-60'
p5211
aS'ParameterHandler::add_parameter()'
p5212
aS'`StokesImmersedProblemParameters::rhs`'
p5213
aS'`StokesImmersedProblemParameters::angular_velocity`'
p5214
aS'$Q_2\\times Q_1$'
p5215
aS'$\\beta$'
p5216
aS'GridGenerator::generate_from_name_and_arguments(),'
p5217
aS'Patterns::Tools::Convert'
p5218
aS'std::vector<double>,'
p5219
aS'std::set<int>,'
p5220
aS'`std::vector<std::vector<double>>`,'
p5221
aS'`std::vector<Point<dim>>`,'
p5222
aS'`std::pair<int,'
p5223
aS'`std::tuple<int,'
p5224
aS'std::vector<double>>`.'
p5225
aS'GridRefinement::refine_and_coarsen_fixed_fraction()'
p5226
aS'GridRefinement::refine_and_coarsen_fixed_number().'
p5227
aS'$z$'
p5228
aS'@sect3{The StokesImmersedProblem class declaration}'
p5229
aS'Particles::ParticleHandler'
p5230
aS'Particles::ParticleHandler'
p5231
aS'step-60'
p5232
aS'step-40'
p5233
aS'step-60'
p5234
aS'Particles::ParticleHandler'
p5235
aS'`std::unique_ptr`'
p5236
aS'step-22'
p5237
aS'Particles::ParticleHandler'
p5238
aS'$t=0$'
p5239
aS'parallel::distributed::Triangulation'
p5240
aS'parallel::distributed::Triangulation,'
p5241
aS'parallel::distributed::Triangulation'
p5242
aS'Utilities::MPI::n_mpi_processes())'
p5243
aS'@image html rtree-process-0.png'
p5244
aS'@image html rtree-process-1.png'
p5245
aS'@image html rtree-process-2.png'
p5246
aS'@sect3{The StokesImmersedProblem class implementation}'
p5247
aS'@sect4{Object construction and mesh initialization functions}'
p5248
aS'GridGenerator::generate_from_name_and_argument().'
p5249
aS'OpenCASCADE::ArcLengthProjectionLineManifold'
p5250
aS'OpenCASCADE::NURBSPatchManifold,'
p5251
aS'Patterns::Tools::Convert'
p5252
aS'OpenCASCADE::NormalToMeshProjectionManifold'
p5253
aS'OpenCASCADE::NURBSPatchManifold'
p5254
aS'OpenCASCADE::NormalToMeshProjectionManifold'
p5255
aS'@sect4{Particle initialization functions}'
p5256
aS'Particles::ParticleHandler'
p5257
aS'Particles::Particle'
p5258
aS'Particles::ParticleHandler'
p5259
aS'Particles::ParticleHandler'
p5260
aS'IndexSet::tensor_priduct()'
p5261
aS'Particles::ParticleHandler'
p5262
aS'Particles::Particle'
p5263
aS'Particles::Particle'
p5264
aS'Particles::ParticleHandler'
p5265
aS'Particles::Generators'
p5266
aS'@sect4{DoF initialization functions}'
p5267
aS'$Q_k \\times Q_{k-1}$'
p5268
aS'step-55'
p5269
aS'@sect4{Assembly functions}'
p5270
aS'step-55'
p5271
aS'step-27'
p5272
aS'@sect4{Solving the linear system}'
p5273
aS'$(0,0)$'
p5274
aS'$(1,1)$'
p5275
aS'@sect4{Mesh refinement}'
p5276
aS'@sect4{Creating output for visualization}'
p5277
aS'Particles::DataOut'
p5278
aS'@sect4{The "run" function}'
p5279
aS'step-21'
p5280
aS'step-26'
p5281
aS'@sect3{The main() function}'
p5282
aS'@sect3{An introductory example: The fundamentals of automatic and symbolic differentiation}'
p5283
aS'@ref auto_symb_diff'
p5284
aS'@sect4{An analytical function}'
p5285
aS'$f(x,y) = \\cos\\left(\\frac{y}{x}\\right)$'
p5286
aS'$\\frac{df(x,y)}{dx}$'
p5287
aS'$\\frac{df(x,y)}{dy}$'
p5288
aS'$\\frac{d^{2}f(x,y)}{dx^{2}}$'
p5289
aS'$\\frac{d^{2}f(x,y)}{dx dy}$'
p5290
aS'$\\frac{d^{2}f(x,y)}{dy dx}$'
p5291
aS'$\\frac{d^{2}f(x,y)}{dy^{2}}$'
p5292
aS'@sect4{Computing derivatives using automatic differentiation}'
p5293
aS'$f(x,y)$'
p5294
aS'Differentiation::AD::ScalarFunction'
p5295
aS'@p ADHelper'
p5296
aS'$f(x,y)$'
p5297
aS'$f(x,y)$'
p5298
aS'$\\frac{d(x)}{dx} = 1$'
p5299
aS'$\\frac{d(x)}{dy} = 0$'
p5300
aS'Differentiation::AD::VectorFunction'
p5301
aS'$\\rightarrow$'
p5302
aS'@sect4{Hand-calculated derivatives of the analytical solution}'
p5303
aS'$f(x,y) =\n \\cos\\left(\\frac{y}{x}\\right)$'
p5304
aS'$\\frac{df(x,y)}{dx} = \\frac{y}{x^2} \\sin\\left(\\frac{y}{x}\\right)$'
p5305
aS'$\\frac{df(x,y)}{dx} = -\\frac{1}{x} \\sin\\left(\\frac{y}{x}\\right)$'
p5306
aS'$f(x,y)$'
p5307
aS'$\\frac{d^{2}f(x,y)}{dx^{2}} = -\\frac{y}{x^4} (2x\n \\sin\\left(\\frac{y}{x}\\right) + y \\cos\\left(\\frac{y}{x}\\right))$'
p5308
aS'$\\frac{d^{2}f(x,y)}{dx dy} = \\frac{1}{x^3} (x\n \\sin\\left(\\frac{y}{x}\\right) + y \\cos\\left(\\frac{y}{x}\\right))$'
p5309
aS'$\\frac{d^{2}f(x,y)}{dy dx} = \\frac{1}{x^3} (x\n \\sin\\left(\\frac{y}{x}\\right) + y \\cos\\left(\\frac{y}{x}\\right))$'
p5310
aS'$\\frac{d^{2}f(x,y)}{dy^{2}} = -\\frac{1}{x^2}\n \\cos\\left(\\frac{y}{x}\\right)$'
p5311
aS'$f(x,y)$'
p5312
aS'@sect4{Computing derivatives using symbolic differentiation}'
p5313
aS'$f(x,y) = \\cos\\left(\\frac{y}{x}\\right)$'
p5314
aS'Differentiation::SD::Expression,'
p5315
aS'`std::string`,'
p5316
aS'$x$'
p5317
aS'$y$'
p5318
aS'$f(x,y)$'
p5319
aS'$\\cos\\left(\\frac{y}{x}\\right)$'
p5320
aS'Differentiation::SD'
p5321
aS'$(\\sin a)^2 + (\\cos a)^2$'
p5322
aS'$1$'
p5323
aS'$f$'
p5324
aS'Differentiation::SD::Expression::differentiate()'
p5325
aS'@sect4{The SimpleExample::run() function}'
p5326
aS'@sect3{A more complex example: Using automatic and symbolic differentiation to compute derivatives at continuum points}'
p5327
aS'$\\psi_{0}$'
p5328
aS'$\\psi_{0}$'
p5329
aS'$\\frac{\\partial\\psi_{0}}{\\partial \\mathbf{C}}$'
p5330
aS'$\\mathbf\n C$'
p5331
aS'@sect4{Constitutive parameters}'
p5332
aS'$\\psi_{0}$'
p5333
aS'@cite Pelteret2018a'
p5334
aS'$\\mu_{e}$'
p5335
aS'$\\mu_{e}^{\\infty}$'
p5336
aS'$h_{e}^{\\text{sat}}$'
p5337
aS'$\\nu$'
p5338
aS'$\\mu_{v}$'
p5339
aS'$\\mu_{v}^{\\infty}$'
p5340
aS'$h_{v}^{\\text{sat}}$'
p5341
aS'$\\tau$'
p5342
aS'$\\mu_{r}$'
p5343
aS'step-60'
p5344
aS'@sect4{Constitutive laws: Base class}'
p5345
aS'$\\boldsymbol{\\mathbb{H}}$'
p5346
aS'$\\mathbf{C}$'
p5347
aS'@p constitutive_parameters,'
p5348
aS'$\\psi_{0}$'
p5349
aS'$\\boldsymbol{\\mathbb{B}}$'
p5350
aS'$\\mathbf{S}^{\\text{tot}}$'
p5351
aS'$\\mathbb{D}$'
p5352
aS'$\\mathfrak{P}^{\\text{tot}}$'
p5353
aS'$\\mathcal{H}^{\\text{tot}}$'
p5354
aS'$\\mu_{0}$'
p5355
aS'@sect4{Magnetoelastic constitutive law (using automatic differentiation)}'
p5356
aS'@p ad_helper.'
p5357
aS'@p ad_helper'
p5358
aS'@p ad_helper'
p5359
aS'@p Dpsi'
p5360
aS'@p D2psi'
p5361
aS'@p ad_helper'
p5362
aS'$\\mathbf{C}$'
p5363
aS'$\\boldsymbol{\\mathbb{H}}$'
p5364
aS'@p ad_helper'
p5365
aS'@p ad_helper'
p5366
aS'@p ad_helper'
p5367
aS'@p ad_helper.'
p5368
aS'$\\psi_{0}$'
p5369
aS'$\\left[ \\mathfrak{P}^{\\text{tot}}\n \\right]^{T}$'
p5370
aS'@sect4{Magneto-viscoelastic constitutive law (using symbolic algebra and differentiation)}'
p5371
aS'@p constitutive_parameters,'
p5372
aS'Differentiation::SD::BatchOptimizer.'
p5373
aS'Differentiation::SD::BatchOptimizer'
p5374
aS'@p ConstitutiveParameters'
p5375
aS'@p delta_t_sd,'
p5376
aS'@p optimizer'
p5377
aS'Differentiation::SD::BatchOptimizer'
p5378
aS'@p optimizer'
p5379
aS'@p optimizer.'
p5380
aS'$\\mathbf{C}_{v} = \\mathbf{I}$'
p5381
aS'@p Magnetoviscoelastic_Constitutive_Law_SD'
p5382
aS'@p optimizer'
p5383
aS'$\\mathbf{C}$'
p5384
aS'@cite Pelteret2018a'
p5385
aS'@cite Pelteret2018a'
p5386
aS'@cite Linder2011a'
p5387
aS'@p Q_t_sd'
p5388
aS'@p C_sd.'
p5389
aS'@p Q_t_sd'
p5390
aS'@p C_sd.'
p5391
aS'@p C_sd'
p5392
aS'$\\mathbf{C}_{v} = \\mathbf{C}_{v} \\left( \\mathbf{C}, t \\right)$'
p5393
aS'$f = f(\\mathbf{C}, \\mathbf{Q})$'
p5394
aS'$\\mathbf{C}$'
p5395
aS'$\\frac{\\partial f(\\mathbf{C}, \\mathbf{Q})}{\\partial \\mathbf{C}}\n \\Big\\vert_{\\mathbf{Q}}$'
p5396
aS'$\\frac{d f(\\mathbf{C}, \\mathbf{Q}(\\mathbf{C}))}{d \\mathbf{C}} =\n \\frac{\\partial f(\\mathbf{C}, \\mathbf{Q}(\\mathbf{C}))}{\\partial\n \\mathbf{C}} \\Big\\vert_{\\mathbf{Q}} + \\frac{\\partial f(\\mathbf{C},\n \\mathbf{Q}(\\mathbf{C}))}{\\partial \\mathbf{Q}}\n \\Big\\vert_{\\mathbf{C}} : \\frac{d \\mathbf{Q}(\\mathbf{C}))}{d\n \\mathbf{C}}$'
p5397
aS'@p Q_t_sd'
p5398
aS'@p Q_t_sd'
p5399
aS'@p C_sd,'
p5400
aS'$\\mathbf{C}_{v} = \\mathbf{C}_{v} \\left( \\mathbf{C}, t\n \\right)$'
p5401
aS'@p C_sd'
p5402
aS'$f(\\mathbf{C}, \\mathbf{Q})$'
p5403
aS'$f(\\mathbf{C}, \\mathbf{Q}(\\mathbf{C}))$'
p5404
aS'@p Q_t_sd'
p5405
aS'@p Q_t_sd_explicit.'
p5406
aS'@p optimizer'
p5407
aS'@p optimizer'
p5408
aS'@p optimizer'
p5409
aS'@p optimizer'
p5410
aS'@sect3{A more complex example (continued): Parameters and hand-derived material classes}'
p5411
aS'@sect4{Magnetoelastic constitutive law (hand-derived)}'
p5412
aS'$\\text{sym} \\left( \\bullet \\right)$'
p5413
aS'$\\mathbf{C}$'
p5414
aS'step-44'
p5415
aS'$\\psi_{0}$'
p5416
aS'$f_{\\mu_e}$'
p5417
aS'$\\frac{d \\tanh(x)}{dx} = \\text{sech}^{2}(x)$'
p5418
aS'$\\frac{d \\text{sech}^{2}(x)}{dx} = -2 \\tanh(x) \\text{sech}^{2}(x)$'
p5419
aS'@sect4{Magneto-viscoelastic constitutive law (hand-derived)}'
p5420
aS'$\\mathbf{C}$'
p5421
aS'$\\psi_{0}^{ME} \\left( \\mathbf{C}, \\boldsymbol{\\mathbb{H}} \\right)$'
p5422
aS'$ME$'
p5423
aS'$MVE$'
p5424
aS'$f_{\\mu_{v}}^{MVE} \\left( \\boldsymbol{\\mathbb{H}} \\right)$'
p5425
aS'$f_{\\mu_{e}}^{ME} \\left( \\boldsymbol{\\mathbb{H}} \\right)$'
p5426
aS'$\\mu_{v}$'
p5427
aS'$\\mu_{e}$'
p5428
aS'$\\mathbf{C}_{v}^{(t)} \\left( \\mathbf{C} \\right)$'
p5429
aS'$\\psi_{0}^{MVE} \\left( \\mathbf{C},\n \\mathbf{C}_{v} \\left( \\mathbf{C} \\right), \\boldsymbol{\\mathbb{H}}\n \\right)$'
p5430
aS'$\\mathbf{C}$'
p5431
aS'$\\mathbf{C}_{v}^{(t)}$'
p5432
aS'$\\mathbf{C}$'
p5433
aS'$\\mathcal{H}^{\\text{tot}, MVE}$'
p5434
aS'@cite Koprowski'
p5435
aS'$\\boldsymbol{\\mathbb{H}}$'
p5436
aS'$\\mathbf{C}$'
p5437
aS'@sect4{Rheological experiment parameters}'
p5438
aS'@p RheologicalExperimentParameters'
p5439
aS'@sect4{Rheological experiment: Parallel plate rotational rheometer}'
p5440
aS'@sect4{The CoupledConstitutiveLaws::run() function}'
p5441
aS'@sect3{The main() function}'
p5442
aS'step-15'
p5443
aS'@sect3{Include files}'
p5444
aS'MeshWorker::mesh_loop()'
p5445
aS'@sect3{The <code>MinimalSurfaceProblemParameters</code> class}'
p5446
aS'step-15'
p5447
aS'step-15'
p5448
aS'@sect3{The <code>MinimalSurfaceProblem</code> class template}'
p5449
aS'step-15'
p5450
aS'@sect3{Boundary condition}'
p5451
aS'@sect3{The <code>MinimalSurfaceProblem</code> class implementation}'
p5452
aS'@sect4{MinimalSurfaceProblem::MinimalSurfaceProblem}'
p5453
aS'@sect4{MinimalSurfaceProblem::setup_system}'
p5454
aS'@sect4{Assembling the linear system}'
p5455
aS'@sect5{Manual assembly}'
p5456
aS'step-15'
p5457
aS'MeshWorker::mesh_loop()'
p5458
aS'MeshWorker::mesh_loop()'
p5459
aS'MeshWorker::mesh_loop()'
p5460
aS'step-12'
p5461
aS'step-16'
p5462
aS'MeshWorker::mesh_loop()'
p5463
aS'MeshWorker::ScratchData'
p5464
aS'MeshWorker::CopyData'
p5465
aS'MeshWorker::CopyData'
p5466
aS'@p dof_handler.'
p5467
aS'MeshWorker::mesh_loop(),'
p5468
aS'@p this'
p5469
aS'MeshWorker::mesh_loop()'
p5470
aS'step-15'
p5471
aS'MeshWorker::mesh_loop()'
p5472
aS'@a'
p5473
aS'MeshWorker::mesh_loop()'
p5474
aS'MeshWorker::mesh_loop()'
p5475
aS'step-15'
p5476
aS'$\\delta u^n$'
p5477
aS'@sect5{Assembly via differentiation of the residual vector}'
p5478
aS'$F(U)^K$'
p5479
aS'$K$'
p5480
aS'$J(U)_{ij}^K=\\frac{\\partial F(U)^K_i}{\\partial U_j}$'
p5481
aS'$u(\\mathbf x)=\\sum_j U_j \\varphi_j(\\mathbf x)$'
p5482
aS'step-71'
p5483
aS'$j$'
p5484
aS'$u (\\mathbf{x})|_K = \\sum\\limits_{j} U^K_i \\varphi_j(\\mathbf{x})$'
p5485
aS'FiniteElement::dofs_per_cell.'
p5486
aS'$U_j$'
p5487
aS'$U_j$'
p5488
aS'$j$'
p5489
aS'$F(U)^{K}$'
p5490
aS'<em>'
p5491
aS'</em>'
p5492
aS'@p ADNumberType'
p5493
aS'@p dof_values_ad'
p5494
aS'<em>'
p5495
aS'</em>'
p5496
aS'@p coeff'
p5497
aS'@p old_solution_gradients'
p5498
aS'@sect5{Assembly via differentiation of the energy functional}'
p5499
aS'`Differentiation::AD::ResidualLinearization<Differentiation::AD::NumberTypes::sacado_dfad,double>`.'
p5500
aS'$U$'
p5501
aS'$E(U)^K$'
p5502
aS'@sect4{MinimalSurfaceProblem::solve}'
p5503
aS'step-15'
p5504
aS'@sect4{MinimalSurfaceProblem::refine_mesh}'
p5505
aS'step-15'
p5506
aS'@sect4{MinimalSurfaceProblem::set_boundary_values}'
p5507
aS'step-15'
p5508
aS'@sect4{MinimalSurfaceProblem::compute_residual}'
p5509
aS'step-15'
p5510
aS'@sect4{MinimalSurfaceProblem::determine_step_length}'
p5511
aS'step-15'
p5512
aS'@sect4{MinimalSurfaceProblem::output_results}'
p5513
aS'@sect4{MinimalSurfaceProblem::run}'
p5514
aS'step-15'
p5515
aS'@sect4{The main function}'
p5516
aS'Utilities::MPI::MPI_InitFinalize'
p5517
aS'@sect3{Equation data}'
p5518
aS'Functions::LSingularityFunction.'
p5519
aS'Functions::LSingularityFunction,'
p5520
aS'$\\nu = 1$'
p5521
aS'@sect3{Auxiliary functions}'
p5522
aS'$u_h$'
p5523
aS'$\\nabla u_h$'
p5524
aS'$\\sigma$'
p5525
aS'@sect3{The CopyData}'
p5526
aS'MeshWorker::mesh_loop(),'
p5527
aS'step-12'
p5528
aS'MeshWorker::ScratchData<dim>'
p5529
aS'@sect3{The SIPGLaplace class}'
p5530
aS'$\\nu$'
p5531
aS'@sect3{The assemble_system function}'
p5532
aS'step-12'
p5533
aS'step-47'
p5534
aS'MeshWorker::mesh_loop().'
p5535
aS'AffineConstraints::distribute_local_to_global()'
p5536
aS'MeshWorker::mesh_loop().'
p5537
aS'@sect3{The solve() and output_results() function}'
p5538
aS'@sect3{The compute_error_estimate() function}'
p5539
aS'MeshWorker::mesh_loop()'
p5540
aS'$h_K^2 \\left\\| f + \\nu \\Delta u_h \\right\\|_K^2$'
p5541
aS'$\\sum_{f\\in \\partial K \\cap \\partial \\Omega}\n \\sigma \\left\\| [  u_h-g_D ]  \\right\\|_f^2  $'
p5542
aS'$\\sum_{f\\in \\partial K}\\lbrace \\sigma\n \\left\\| [u_h]  \\right\\|_f^2   +  h_f \\left\\|  [\\nu \\nabla u_h \\cdot\n \\mathbf n ] \\right\\|_f^2 \\rbrace$'
p5543
aS'MeshWorker::mesh_loop()'
p5544
aS'@sect3{The compute_energy_norm_error() function}'
p5545
aS'$\\sum_{K \\in \\Gamma_h} \\nu\\|\\nabla (u_h - u)  \\|_K^2 $'
p5546
aS'$\\sum_{f \\in F_b}\\sigma  \\|u_h-g_D\\|_f^2$'
p5547
aS'$\\sum_{f \\in F_i} \\sigma  \\| [ u_h ] \\|_f^2$'
p5548
aS'@sect3{The refine_grid() function}'
p5549
aS'@sect3{The compute_errors() function}'
p5550
aS'$L_2$'
p5551
aS'$H_1$'
p5552
aS'@sect3{The run() function}'
p5553
aS'@sect3{The main() function}'
p5554
aS'<code>main</code>'
p5555
aS'@sect3{Include files}'
p5556
aS'step-27'
p5557
aS'step-40'
p5558
aS'parallel::CellWeights.'
p5559
aS'GeometricUtilities::Coordinates'
p5560
aS'LinearAlgebra::distributed::Vector'
p5561
aS'@sect3{The <code>Solution</code> class template}'
p5562
aS'GeometricUtilities::Coordinates'
p5563
aS'@sect3{Parameters}'
p5564
aS'@sect3{Matrix-free Laplace operator}'
p5565
aS'$-1$'
p5566
aS'$0$'
p5567
aS'MatrixFreeTools::compute_matrix()'
p5568
aS'@sect3{Solver and preconditioner}'
p5569
aS'@sect4{Conjugate-gradient solver with multigrid preconditioner}'
p5570
aS'@sect4{Hybrid polynomial/geometric-global-coarsening multigrid preconditioner}'
p5571
aS'Triangulation::coarsen_global().'
p5572
aS'@sect3{The <code>LaplaceProblem</code> class template}'
p5573
aS'step-27'
p5574
aS'step-40'
p5575
aS'parallel::CellWeights,'
p5576
aS'@sect3{The <code>LaplaceProblem</code> class implementation}'
p5577
aS'@sect4{Constructor}'
p5578
aS'step-40'
p5579
aS'hp::Refinement'
p5580
aS'<code>[min_p_degree, max_p_degree]</code>'
p5581
aS'*/'
p5582
aS'*/'
p5583
aS'FESeries::Legendre'
p5584
aS'Triangulation::Signals:'
p5585
aS'parallel::CellWeights'
p5586
aS'$a (n_\\text{dofs})^b$'
p5587
aS'$(a,b)$'
p5588
aS'Triangulation::Signals::cell_weight).'
p5589
aS'$10^6$'
p5590
aS'$1$'
p5591
aS'hp::Refinement::limit_p_level_difference'
p5592
aS'parallel::distributed::TemporarilyMatchRefineFlags'
p5593
aS'Triangulation::Signals::post_p4est_refinement,'
p5594
aS'*/'
p5595
aS'@sect4{LaplaceProblem::initialize_grid}'
p5596
aS'GridGenerator::hyper_L()'
p5597
aS'step-50'
p5598
aS'GridGenerator::subdivided_hyper_L()'
p5599
aS'GridGenerator::subdivided_hyper_rectangle().'
p5600
aS'<code>cells_to_remove</code>'
p5601
aS'@sect4{LaplaceProblem::setup_system}'
p5602
aS'step-40'
p5603
aS'<code>laplace_operator</code>'
p5604
aS'@sect4{LaplaceProblem::print_diagnostics}'
p5605
aS'Utilities::MPI::gather'
p5606
aS'Utilities::MPI::sum.'
p5607
aS'@sect4{LaplaceProblem::solve_system}'
p5608
aS'step-40'
p5609
aS'@sect4{LaplaceProblem::compute_indicators}'
p5610
aS'<code>refine_grid</code>'
p5611
aS'@cite davydov2017hp'
p5612
aS'SmoothnessEstimator::Legendre.'
p5613
aS'*/'
p5614
aS'*/'
p5615
aS'/*n_threads=*/numbers::invalid_unsigned_int,'
p5616
aS'/*subdomain_id=*/numbers::invalid_subdomain_id,'
p5617
aS'/*material_id=*/numbers::invalid_material_id,'
p5618
aS'*/'
p5619
aS'@sect4{LaplaceProblem::adapt_resolution}'
p5620
aS'Triangulation::execute_coarsening_and_refinement()'
p5621
aS'step-31'
p5622
aS'@sect4{LaplaceProblem::output_results}'
p5623
aS'step-40'
p5624
aS'@sect4{LaplaceProblem::run}'
p5625
aS'step-40'
p5626
aS'@sect4{main()}'
p5627
aS'<code>main</code>'
p5628
aS'@sect3{Parameters and utility functions}'
p5629
aS'step-67'
p5630
aS'step-67'
p5631
aS'numbers::invalid_unsigned_int'
p5632
aS'<code>using VectorizedArrayType = VectorizedArray<Number, 4></code>'
p5633
aS'step-67'
p5634
aS'step-67'
p5635
aS'step-67'
p5636
aS'@sect3{Euler operator using a cell-centric loop and MPI-3.0 shared memory}'
p5637
aS'step-67'
p5638
aS'MatrixFree::reinit()'
p5639
aS'<code>size</code> to <code>-1</code>'
p5640
aS'<code>1</code>'
p5641
aS'<code>MPI_Isend</code>'
p5642
aS'<code>MPI_Irecv</code>'
p5643
aS'EulerOperator::perform_stage()'
p5644
aS'step-67'
p5645
aS'step-67'
p5646
aS'MatrixFree::loop())'
p5647
aS'MatrixFree::cell_loop())'
p5648
aS'MatrixFree::loop_cell_centric().'
p5649
aS'step-67'
p5650
aS'<code>EulerDG::EulerOperator::local_apply_cell</code>'
p5651
aS'<code>EulerDG::EulerOperator::local_apply_face</code>'
p5652
aS'<code>EulerDG::EulerOperator::local_apply_boundary_face</code>'
p5653
aS'<code>EulerDG::EulerOperator::local_apply_inverse_mass_matrix</code>'
p5654
aS'MatrixFree::loop_cell_centric()'
p5655
aS'FEEvaluation::submit_value()'
p5656
aS'<code>EulerOperator::local_apply_cell()</code>'
p5657
aS'step-67'
p5658
aS'<code>EulerDG::EulerOperator::local_apply_face</code>'
p5659
aS'step-67'
p5660
aS'<code>EulerDG::EulerOperator::local_apply_boundary_face</code>'
p5661
aS'step-67'
p5662
aS'<code>EulerDG::EulerOperator::local_apply_inverse_mass_matrix()</code>'
p5663
aS'step-67'
p5664
aS'step-67'
p5665
aS'@sect3{Include files}'
p5666
aS'step-15'
p5667
aS'@sect3{The <code>MinimalSurfaceProblem</code> class template}'
p5668
aS'step-15'
p5669
aS'@sect3{Boundary condition}'
p5670
aS'step-15'
p5671
aS'@sect3{The <code>MinimalSurfaceProblem</code> class implementation}'
p5672
aS'@sect4{Constructor and set up functions}'
p5673
aS'step-15'
p5674
aS'@sect4{Assembling and factorizing the Jacobian matrix}'
p5675
aS'step-15'
p5676
aS'TimerOutput::Scope'
p5677
aS'@sect4{Computing the residual vector}'
p5678
aS'step-15'
p5679
aS'step-15'
p5680
aS'$F(U^k + \\alpha_k \\delta\n U^K)$'
p5681
aS'$\\alpha_k$'
p5682
aS'$F$'
p5683
aS'$F(\\cdot)$'
p5684
aS'@sect4{Solving linear systems with the Jacobian matrix}'
p5685
aS'SparseDirectUMFPACK::vmult()'
p5686
aS'AffineConstraints::distribute().'
p5687
aS'@sect4{Refining the mesh, setting boundary values, and generating graphical output}'
p5688
aS'step-15'
p5689
aS'@sect4{The run() function and the overall logic of the program}'
p5690
aS'$\\tau=10^{-3} \\frac{1}{10^k}$'
p5691
aS'$k$'
p5692
aS'SUNDIALS::KINSOL::AdditionalData'
p5693
aS'SUNDIALS::KINSOL'
p5694
aS'`std::function`,'
p5695
aS'step-12'
p5696
aS'@sect3{Include files}'
p5697
aS'<code>MMS</code>'
p5698
aS'@sect3{Solution Class}'
p5699
aS'$v(\\tau,S) = -\\tau^2 -S^2 + 6$'
p5700
aS'@sect3{Equation Data}'
p5701
aS'@sect3{The <code>BlackScholes</code> Class}'
p5702
aS'Step-26'
p5703
aS'$V_{diff}$'
p5704
aS'<code>maximum_stock_price</code>'
p5705
aS'<code>maturity_time</code>'
p5706
aS'<code>asset_volatility</code>'
p5707
aS'<code>interest_rate</code>'
p5708
aS'<code>strike_price</code>'
p5709
aS'step-26'
p5710
aS'<code>a_matrix</code> and the <code>b_matrix</code>'
p5711
aS'<code>DataOutStack</code>'
p5712
aS'<code>process_solution</code>'
p5713
aS'step-7'
p5714
aS'@sect3{The <code>BlackScholes</code> Implementation}'
p5715
aS'@sect4{<code>BlackScholes::setup_system</code>}'
p5716
aS'*/'
p5717
aS'<code>current_coefficient</code>'
p5718
aS'<code>current_coefficient</code>'
p5719
aS'<code>current_coefficient</code>'
p5720
aS'@sect4{<code>BlackScholes::solve_time_step</code>}'
p5721
aS'@sect4{<code>BlackScholes::add_results_for_output</code>}'
p5722
aS'@sect4{<code>BlackScholes::refine_grid</code>}'
p5723
aS'@sect4{<code>BlackScholes::process_solution</code>}'
p5724
aS'$L^2$'
p5725
aS'$H^1$'
p5726
aS'$L^{\\infty}$'
p5727
aS'@sect4{<code>BlackScholes::write_convergence_table</code> }'
p5728
aS'<code>BlackScholes::process_solution</code>'
p5729
aS'$L^2$'
p5730
aS'$H^1$'
p5731
aS'$L^{\\infty}$'
p5732
aS'@sect4{<code>BlackScholes::run</code>}'
p5733
aS'$\\left[-\\frac{1}{4}k_n\\sigma^2\\mathbf{D}-k_nr\\mathbf{M}+k_n\\sigma^2\n \\mathbf{B}-k_nr\\mathbf{A}+\\mathbf{M}\\right]V^{n-1}$'
p5734
aS'$-k_n\\left[\\frac{1}{2}F^{n-1}\n   +\\frac{1}{2}F^n\\right]$'
p5735
aS'VectorTools::create_right_hand_side'
p5736
aS'$F$'
p5737
aS'$\\left[\\mathbf{M}+\n   \\frac{1}{4}k_n\\sigma^2\\mathbf{D}+k_nr\\mathbf{M}\\right]$'
p5738
aS'@sect3{The <code>main</code> Function}'
p5739
aS'step-6'
p5740
aS'@sect3{Preliminaries}'
p5741
aS'$9\\times 9$'
p5742
aS'step-19'
p5743
aS'@sect3{The SANDTopOpt main class}'
p5744
aS'@sect3{Constructor and set-up functions}'
p5745
aS'$\\times$'
p5746
aS'$y$'
p5747
aS'$x$'
p5748
aS'@sect3{Setting up block matrices and vectors}'
p5749
aS'step-22'
p5750
aS'`coupling[SolutionComponents::density_upper_slack_multiplier<dim>][SolutionComponents::density<dim>]`'
p5751
aS'*/'
p5752
aS'*/'
p5753
aS'@sect3{Creating the filter matrix}'
p5754
aS'$H$'
p5755
aS'$H$'
p5756
aS'@sect3{Assembling the Newton matrix}'
p5757
aS'step-22'
p5758
aS'$\\rho=H\\varrho$'
p5759
aS'$\\rho^k\\neq H\\varrho^k$'
p5760
aS'$\\rho^k-H\\varrho^k$'
p5761
aS'$d_{\\bullet}$'
p5762
aS'$c_{\\bullet}$'
p5763
aS'*/'
p5764
aS'*/'
p5765
aS'*/'
p5766
aS'*/'
p5767
aS'*/'
p5768
aS'*/'
p5769
aS'*/'
p5770
aS'@sect3{Solving the Newton linear system}'
p5771
aS'step-29'
p5772
aS'@sect3{Details of the optimization algorithm}'
p5773
aS'@sect4{Computing step lengths}'
p5774
aS'$s>0$'
p5775
aS'$z>0$'
p5776
aS'$s$'
p5777
aS'$z$'
p5778
aS'@sect4{Computing residuals}'
p5779
aS'$l_1$'
p5780
aS'*/'
p5781
aS'*/'
p5782
aS'@sect4{Computing the merit function}'
p5783
aS'$l_1$'
p5784
aS'$l_1$'
p5785
aS'$l_1$'
p5786
aS'$l_1$'
p5787
aS'@sect4{Finding a search direction}'
p5788
aS'$s>0$'
p5789
aS'$z>0$'
p5790
aS'@sect4{Computing a scaled step}'
p5791
aS'@sect4{Checking for convergence}'
p5792
aS'$l_1$'
p5793
aS'@sect3{Postprocessing the solution}'
p5794
aS'step-22'
p5795
aS'$z$'
p5796
aS'$z=0.25$'
p5797
aS'*/'
p5798
aS'*/'
p5799
aS'*/'
p5800
aS'*/'
p5801
aS'$z$'
p5802
aS'@sect3{The run() function driving the overall algorithm}'
p5803
aS'step-15'
p5804
aS'@sect3{The main function}'
p5805
aS'@sect3{Include files}'
p5806
aS'step-7'
p5807
aS'@sect3{The <code>ElasticProblem</code> class template}'
p5808
aS'step-6'
p5809
aS'<code>fe</code>'
p5810
aS'<code>FE_Q(1)</code>'
p5811
aS'@sect3{Right hand side values}'
p5812
aS'<code>points[point_n]</code>'
p5813
aS'<code>points[point_n]</code>'
p5814
aS'@sect3{The <code>ElasticProblem</code> class implementation}'
p5815
aS'@sect4{ElasticProblem::ElasticProblem constructor}'
p5816
aS'<code>dim</code>'
p5817
aS'@sect4{ElasticProblem::setup_system}'
p5818
aS'step-6'
p5819
aS'*/'
p5820
aS'@sect4{ElasticProblem::assemble_system}'
p5821
aS'step-'
p5822
aS'<code>n_q_points</code>'
p5823
aS'<code>dofs_per_cell</code>'
p5824
aS'<code>dim</code>'
p5825
aS'<code>comp(i)</code>'
p5826
aS'<code>i</code>'
p5827
aS'<code>fe.system_to_component_index(i).first</code>'
p5828
aS'<code>first</code>'
p5829
aS'<code>system_to_component_index</code>'
p5830
aS'<code>std::pair@<unsigned'
p5831
aS'@></code>,'
p5832
aS'<code>comp(i)</code>'
p5833
aS'<code>base(i)</code>'
p5834
aS'<code>base(i)</code>'
p5835
aS'$\\lambda \\partial_i u_i, \\partial_j\n             v_j) + (\\mu \\partial_i u_j, \\partial_j v_i)$'
p5836
aS'<code>shape_grad(i,q_point)</code>'
p5837
aS'<code>comp(i)</code>'
p5838
aS'$(\\mu \\nabla u_i, \\nabla\n               v_j)$'
p5839
aS'@sect4{ElasticProblem::solve}'
p5840
aS'@sect4{ElasticProblem::refine_grid}'
p5841
aS'step-6'
p5842
aS'@sect4{ElasticProblem::output_results}'
p5843
aS'DataOut::add_vector()'
p5844
aS'<code>switch</code>'
p5845
aS'<code>false</code>'
p5846
aS'@sect4{ElasticProblem::run}'
p5847
aS'<code>run</code>'
p5848
aS'step-6'
p5849
aS'Triangulation::refine_and_coarsen_fixed_number()'
p5850
aS'@sect3{The <code>main</code> function}'
p5851
aS'<code>Step8</code>'
p5852
aS'step-6'
p5853
aS'<code>WorkStream</code>'
p5854
aS'<code>TensorFunction</code>'
p5855
aS'<code>Function</code>'
p5856
aS'TensorFunction::value'
p5857
aS'@sect3{Equation data declaration}'
p5858
aS'<code>Function</code>'
p5859
aS'Function::value()'
p5860
aS'<code>DeclExceptionN</code>, where <code>N</code>'
p5861
aS'<code>DeclException2</code>'
p5862
aS'<code>std::cerr</code>'
p5863
aS'<code>@<@<</code>'
p5864
aS'<code>Assert</code>'
p5865
aS'<code>arg1</code> through <code>argN</code>'
p5866
aS'<code>N</code>'
p5867
aS'<code>DeclExceptionN</code>'
p5868
aS'<code>ExcDimensionMismatch</code>'
p5869
aS'<code>right hand side</code>'
p5870
aS'<code>center_point</code>'
p5871
aS'step-7'
p5872
aS'<code>component</code>'
p5873
aS'<code>ExcIndexRange</code>'
p5874
aS'<code>Function</code>'
p5875
aS'@sect3{AdvectionProblem class declaration}'
p5876
aS'<code>assemble_system()</code>'
p5877
aS'<code>assemble_local_system()</code>'
p5878
aS'<code>copy_local_to_global()</code>'
p5879
aS'@ref threads'
p5880
aS'<code>AssemblyScratchData</code>'
p5881
aS'<code>AssemblyCopyData</code>'
p5882
aS'@sect3{GradientEstimation class declaration}'
p5883
aS'<code>DerivativeApproximation</code>'
p5884
aS'<code>estimate</code>'
p5885
aS'<code>namespace</code>'
p5886
aS'<ol>'
p5887
aS'<li>'
p5888
aS'</li>'
p5889
aS'<li>'
p5890
aS'</li>'
p5891
aS'<li>'
p5892
aS'</li>'
p5893
aS'</ol>'
p5894
aS'WorkStream::run()'
p5895
aS'@sect3{AdvectionProblem class implementation}'
p5896
aS'<code>setup_system</code>'
p5897
aS'*/'
p5898
aS'@ref threads'
p5899
aS'@ref threads'
p5900
aS'<code>assemble_system</code>'
p5901
aS'FEValues::reinit()'
p5902
aS'<code>AdvectionField</code>'
p5903
aS'<code>RightHandSide</code> and <code>BoundaryValues</code>'
p5904
aS'<code>rhs_values</code>'
p5905
aS'<code>AssemblyScratchData</code>'
p5906
aS'<code>FEValues</code>'
p5907
aS'<code>inflow</code>'
p5908
aS'<code>GradientEstimation</code>'
p5909
aS'<em>'
p5910
aS'</em>'
p5911
aS'@sect3{GradientEstimation class implementation}'
p5912
aS'<code>GradientEstimation</code>'
p5913
aS'<code>EstimateScratchData</code>'
p5914
aS'<code>estimate_cell()</code>'
p5915
aS'<code>GradientEstimation</code>'
p5916
aS'WorkStream::run'
p5917
aS'@ref threads'
p5918
aS'WorkStream::run()'
p5919
aS'WorkStream::run'
p5920
aS'WorkStream::run'
p5921
aS'WorkStream::run():'
p5922
aS'<code>Y</code>'
p5923
aS'<code>FEValues</code>'
p5924
aS'<code>Y</code>'
p5925
aS'<code>n==1</code> for <code>n==0</code>'
p5926
aS'<code>FEValues</code>'
p5927
aS'<code>y</code>'
p5928
aS'<code>y</code>'
p5929
aS'<code>y</code>'
p5930
aS'<code>AssertThrow</code>'
p5931
aS'<code>Assert</code>'
p5932
aS'<code>Assert</code>'
p5933
aS'<code>throw</code>'
p5934
aS'@sect3{Main function}'
p5935
aS'<code>main</code>'
p5936
aS'@ref threads'
p5937
aS'<code>set_thread_limit</code>'
p5938
aS'<code>set_thread_limit</code>'
p5939
aS'<code>set_thread_limit</code>'
p5940
a.