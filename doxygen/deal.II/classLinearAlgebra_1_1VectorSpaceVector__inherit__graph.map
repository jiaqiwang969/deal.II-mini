<map id="LinearAlgebra::VectorSpaceVector&lt; Number &gt;" name="LinearAlgebra::VectorSpaceVector&lt; Number &gt;">
<area shape="rect" id="node2" href="$classLinearAlgebra_1_1CUDAWrappers_1_1Vector.html" title="{LinearAlgebra::CUDAWrappers\l::Vector\&lt; Number \&gt;\n|&#45; val\l&#45; n_elements\l|+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ operator=()\l+ operator=()\l+ swap()\l+ reinit()\l+ reinit()\l+ import()\land 25 more...\l}" alt="" coords="5,1260,209,1513"/>
<area shape="rect" id="node3" href="$classLinearAlgebra_1_1distributed_1_1BlockVector.html" title="{LinearAlgebra::distributed\l::BlockVector\&lt; Number \&gt;\n|+ communication_block_size\l|+ DeclException0()\l+ DeclException0()\l+ BlockVector()\l+ BlockVector()\l+ BlockVector()\l+ BlockVector()\l+ BlockVector()\l+ BlockVector()\l+ ~BlockVector()\l+ operator=()\l+ operator=()\l+ operator=()\land 17 more...\l+ reinit()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ import()\l+ operator*()\l+ multivector_inner_product()\l+ multivector_inner_product\l_with_metric()\l+ mmult()\land 16 more...\l* BlockVector()\l* BlockVector()\l* BlockVector()\l* BlockVector()\l* BlockVector()\l* BlockVector()\l* ~BlockVector()\l* operator=()\l* operator=()\l* operator=()\land 17 more...\l* reinit()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* import()\l* operator*()\l* multivector_inner_product()\l* multivector_inner_product\l_with_metric()\l* mmult()\land 16 more...\l}" alt="" coords="233,996,424,1777"/>
<area shape="rect" id="node4" href="$classLinearAlgebra_1_1distributed_1_1Vector.html" title="{LinearAlgebra::distributed\l::Vector\&lt; Number \&gt;\n|&#45; partitioner\l&#45; allocated_size\l&#45; data\l&#45; thread_loop_partitioner\l&#45; import_data\l&#45; vector_is_ghosted\l&#45; compress_requests\l&#45; update_ghost_values\l_requests\l&#45; mutex\l&#45; comm_sm\l|+ DeclException0()\l+ DeclException0()\l+ DeclException3()\l+ DeclException4()\l+ operator=()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ ~Vector()\l+ reinit()\l+ reinit()\l+ reinit()\land 6 more...\l+ compress()\l+ update_ghost_values()\l+ compress_start()\l+ compress_finish()\l+ update_ghost_values\l_start()\l+ update_ghost_values\l_finish()\l+ zero_out_ghosts()\l+ zero_out_ghost_values()\l+ has_ghost_elements()\l+ copy_locally_owned\l_data_from()\l+ import()\l+ reinit()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ import()\l+ operator*()\l+ add()\l+ add()\l+ add()\land 13 more...\l+ operator=()\l+ add()\l+ add()\l+ sadd()\l+ local_size()\l+ locally_owned_size()\l+ in_local_range()\l+ begin()\l+ begin()\l+ end()\l+ end()\l+ operator()()\l+ operator()()\l+ operator[]()\land 9 more...\l+ get_mpi_communicator()\l+ get_partitioner()\l+ partitioners_are_compatible()\l+ partitioners_are_globally\l_compatible()\l+ set_ghost_state()\l+ shared_vector_data()\l&#45; add_local()\l&#45; sadd_local()\l&#45; inner_product_local()\l&#45; norm_sqr_local()\l&#45; mean_value_local()\l&#45; l1_norm_local()\l&#45; lp_norm_local()\l&#45; linfty_norm_local()\l&#45; add_and_dot_local()\l&#45; clear_mpi_requests()\l&#45; resize_val()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* ~Vector()\l* reinit()\l* reinit()\l* reinit()\land 6 more...\l* compress()\l* update_ghost_values()\l* compress_start()\l* compress_finish()\l* update_ghost_values\l_start()\l* update_ghost_values\l_finish()\l* zero_out_ghosts()\l* zero_out_ghost_values()\l* has_ghost_elements()\l* copy_locally_owned\l_data_from()\l* import()\l* reinit()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* import()\l* operator*()\l* add()\l* add()\l* add()\land 13 more...\l* operator=()\l* add()\l* add()\l* sadd()\l* local_size()\l* locally_owned_size()\l* in_local_range()\l* begin()\l* begin()\l* end()\l* end()\l* operator()()\l* operator()()\l* operator[]()\land 9 more...\l* get_mpi_communicator()\l* get_partitioner()\l* partitioners_are_compatible()\l* partitioners_are_globally\l_compatible()\l* set_ghost_state()\l* shared_vector_data()\l}" alt="" coords="448,307,649,2467"/>
<area shape="rect" id="node6" href="$classLinearAlgebra_1_1TpetraWrappers_1_1Vector.html" title="{LinearAlgebra::TpetraWrappers\l::Vector\&lt; Number \&gt;\n|&#45; vector\l&#45; source_stored_elements\l&#45; tpetra_comm_pattern\l|+ Vector()\l+ Vector()\l+ Vector()\l+ reinit()\l+ reinit()\l+ operator=()\l+ operator=()\l+ import()\l+ operator*=()\l+ operator/=()\land 27 more...\l&#45; create_tpetra_comm\l_pattern()\l}" alt="" coords="773,1238,975,1535"/>
<area shape="rect" id="node7" href="$classLinearAlgebra_1_1Vector.html" title="{LinearAlgebra::Vector\l\&lt; Number \&gt;\n||+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ reinit()\l+ reinit()\l+ reinit()\l+ reinit()\l+ has_ghost_elements()\l+ operator=()\land 29 more...\l}" alt="" coords="999,1267,1162,1506"/>
<area shape="rect" id="node8" href="$classLinearAlgebra_1_1distributed_1_1Vector.html" title="{Vector\&lt; Number \&gt;\n|&#45; partitioner\l&#45; allocated_size\l&#45; data\l&#45; thread_loop_partitioner\l&#45; import_data\l&#45; vector_is_ghosted\l&#45; compress_requests\l&#45; update_ghost_values\l_requests\l&#45; mutex\l&#45; comm_sm\l|+ operator=()\l+ DeclException0()\l+ DeclException0()\l+ DeclException3()\l+ DeclException4()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ ~Vector()\l+ reinit()\l+ reinit()\l+ reinit()\land 6 more...\l+ reinit()\l+ import()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*()\l+ add()\l+ add()\l+ add()\land 13 more...\l+ operator=()\l+ add()\l+ add()\l+ sadd()\l+ compress()\l+ update_ghost_values()\l+ compress_start()\l+ compress_finish()\l+ update_ghost_values\l_start()\l+ update_ghost_values\l_finish()\l+ zero_out_ghosts()\l+ zero_out_ghost_values()\l+ has_ghost_elements()\l+ copy_locally_owned\l_data_from()\l+ import()\l+ local_size()\l+ locally_owned_size()\l+ in_local_range()\l+ begin()\l+ begin()\l+ end()\l+ end()\l+ operator()()\l+ operator()()\l+ operator[]()\land 9 more...\l+ get_mpi_communicator()\l+ get_partitioner()\l+ partitioners_are_compatible()\l+ partitioners_are_globally\l_compatible()\l+ set_ghost_state()\l+ shared_vector_data()\l&#45; add_local()\l&#45; sadd_local()\l&#45; inner_product_local()\l&#45; norm_sqr_local()\l&#45; mean_value_local()\l&#45; l1_norm_local()\l&#45; lp_norm_local()\l&#45; linfty_norm_local()\l&#45; add_and_dot_local()\l&#45; clear_mpi_requests()\l&#45; resize_val()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* ~Vector()\l* reinit()\l* reinit()\l* reinit()\land 6 more...\l* reinit()\l* import()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* operator*()\l* add()\l* add()\l* add()\land 13 more...\l* operator=()\l* add()\l* add()\l* sadd()\l* compress()\l* update_ghost_values()\l* compress_start()\l* compress_finish()\l* update_ghost_values\l_start()\l* update_ghost_values\l_finish()\l* zero_out_ghosts()\l* zero_out_ghost_values()\l* has_ghost_elements()\l* copy_locally_owned\l_data_from()\l* import()\l* local_size()\l* locally_owned_size()\l* in_local_range()\l* begin()\l* begin()\l* end()\l* end()\l* operator()()\l* operator()()\l* operator[]()\land 9 more...\l* get_mpi_communicator()\l* get_partitioner()\l* partitioners_are_compatible()\l* partitioners_are_globally\l_compatible()\l* set_ghost_state()\l* shared_vector_data()\l}" alt="" coords="1187,314,1388,2459"/>
<area shape="rect" id="node9" href="$classLinearAlgebra_1_1VectorSpaceVector.html" title="{LinearAlgebra::VectorSpace\lVector\&lt; double \&gt;\n||+ reinit()\l+ operator=()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ import()\l+ operator*()\l+ add()\l+ add()\land 16 more...\l}" alt="" coords="1413,1267,1597,1506"/>
<area shape="rect" id="node5" href="$classLinearAlgebra_1_1distributed_1_1Vector.html" title="{LinearAlgebra::distributed\l::Vector\&lt; double \&gt;\n|&#45; partitioner\l&#45; allocated_size\l&#45; data\l&#45; thread_loop_partitioner\l&#45; import_data\l&#45; vector_is_ghosted\l&#45; compress_requests\l&#45; update_ghost_values\l_requests\l&#45; mutex\l&#45; comm_sm\l|+ operator=()\l+ DeclException0()\l+ DeclException0()\l+ DeclException3()\l+ DeclException4()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ ~Vector()\l+ reinit()\l+ reinit()\l+ reinit()\land 6 more...\l+ reinit()\l+ import()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*()\l+ add()\l+ add()\l+ add()\land 13 more...\l+ operator=()\l+ add()\l+ add()\l+ sadd()\l+ compress()\l+ update_ghost_values()\l+ compress_start()\l+ compress_finish()\l+ update_ghost_values\l_start()\l+ update_ghost_values\l_finish()\l+ zero_out_ghosts()\l+ zero_out_ghost_values()\l+ has_ghost_elements()\l+ copy_locally_owned\l_data_from()\l+ import()\l+ local_size()\l+ locally_owned_size()\l+ in_local_range()\l+ begin()\l+ begin()\l+ end()\l+ end()\l+ operator()()\l+ operator()()\l+ operator[]()\land 9 more...\l+ get_mpi_communicator()\l+ get_partitioner()\l+ partitioners_are_compatible()\l+ partitioners_are_globally\l_compatible()\l+ set_ghost_state()\l+ shared_vector_data()\l&#45; add_local()\l&#45; sadd_local()\l&#45; inner_product_local()\l&#45; norm_sqr_local()\l&#45; mean_value_local()\l&#45; l1_norm_local()\l&#45; lp_norm_local()\l&#45; linfty_norm_local()\l&#45; add_and_dot_local()\l&#45; clear_mpi_requests()\l&#45; resize_val()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* ~Vector()\l* reinit()\l* reinit()\l* reinit()\land 6 more...\l* reinit()\l* import()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* operator*()\l* add()\l* add()\l* add()\land 13 more...\l* operator=()\l* add()\l* add()\l* sadd()\l* compress()\l* update_ghost_values()\l* compress_start()\l* compress_finish()\l* update_ghost_values\l_start()\l* update_ghost_values\l_finish()\l* zero_out_ghosts()\l* zero_out_ghost_values()\l* has_ghost_elements()\l* copy_locally_owned\l_data_from()\l* import()\l* local_size()\l* locally_owned_size()\l* in_local_range()\l* begin()\l* begin()\l* end()\l* end()\l* operator()()\l* operator()()\l* operator[]()\land 9 more...\l* get_mpi_communicator()\l* get_partitioner()\l* partitioners_are_compatible()\l* partitioners_are_globally\l_compatible()\l* set_ghost_state()\l* shared_vector_data()\l}" alt="" coords="995,2529,1196,4689"/>
<area shape="rect" id="node10" href="$classLinearAlgebra_1_1EpetraWrappers_1_1Vector.html" title="{LinearAlgebra::EpetraWrappers\l::Vector\n|&#45; vector\l&#45; source_stored_elements\l&#45; epetra_comm_pattern\l|+ Vector()\l+ Vector()\l+ Vector()\l+ reinit()\l+ reinit()\l+ operator=()\l+ operator=()\l+ import()\l+ operator*=()\l+ operator/=()\land 27 more...\l&#45; create_epetra_comm\l_pattern()\l}" alt="" coords="1403,3461,1606,3758"/>
</map>
