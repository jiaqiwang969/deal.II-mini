<map id="MGLevelGlobalTransfer&lt; LinearAlgebra::distributed::Vector&lt; Number &gt; &gt;" name="MGLevelGlobalTransfer&lt; LinearAlgebra::distributed::Vector&lt; Number &gt; &gt;">
<area shape="rect" id="node2" href="$classMGTransferBase.html" title="{MGTransferBase\&lt; LinearAlgebra\l::distributed::Vector\&lt; Number \&gt; \&gt;\n||+ ~MGTransferBase()\l+ prolongate()\l+ prolongate_and_add()\l+ restrict_and_add()\l}" alt="" coords="509,4372,728,4508"/>
<area shape="rect" id="node3" href="$classSubscriptor.html" title="{Subscriptor\n||+ Subscriptor()\l+ Subscriptor()\l+ Subscriptor()\l+ ~Subscriptor()\l+ operator=()\l+ operator=()\l+ serialize()\l+ subscribe()\l+ unsubscribe()\l+ n_subscriptions()\l+ list_subscribers()\l+ list_subscribers()\l+ ExcInUse()\l+ ExcNoSubscriber()\l&#45; check_no_subscribers()\l* subscribe()\l* unsubscribe()\l* n_subscriptions()\l* list_subscribers()\l* list_subscribers()\l}" alt="" coords="559,682,727,1038"/>
<area shape="rect" id="node17" href="$classMGTransferBase.html" title="{MGTransferBase\&lt; VectorType \&gt;\n||+ ~MGTransferBase()\l+ prolongate()\l+ prolongate_and_add()\l+ restrict_and_add()\l}" alt="" coords="537,2179,749,2300"/>
<area shape="rect" id="node18" href="$classMGLevelObject.html" title="{MGLevelObject\&lt; LinearAlgebra\l::distributed::Vector\&lt; Number \&gt; \&gt;\n||+ MGLevelObject()\l+ MGLevelObject()\l+ operator[]()\l+ operator[]()\l+ resize()\l+ operator=()\l+ clear_elements()\l+ min_level()\l+ max_level()\l+ apply()\l+ memory_consumption()\l}" alt="" coords="156,4321,375,4559"/>
<area shape="rect" id="node21" href="$classMGLevelObject.html" title="{MGLevelObject\&lt; Object \&gt;\n||+ MGLevelObject()\l+ MGLevelObject()\l+ operator[]()\l+ operator[]()\l+ resize()\l+ operator=()\l+ clear_elements()\l+ min_level()\l+ max_level()\l+ apply()\l+ memory_consumption()\l}" alt="" coords="207,2127,382,2351"/>
<area shape="rect" id="node25" href="$classLinearAlgebra_1_1distributed_1_1Vector.html" title="{LinearAlgebra::distributed\l::Vector\&lt; Number \&gt;\n||+ operator=()\l+ DeclException0()\l+ DeclException0()\l+ DeclException3()\l+ DeclException4()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ ~Vector()\l+ reinit()\l+ reinit()\l+ reinit()\land 6 more...\l+ reinit()\l+ import()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ operator*()\l+ add()\l+ add()\l+ add()\land 13 more...\l+ operator=()\l+ add()\l+ add()\l+ sadd()\l+ compress()\l+ update_ghost_values()\l+ compress_start()\l+ compress_finish()\l+ update_ghost_values\l_start()\l+ update_ghost_values\l_finish()\l+ zero_out_ghosts()\l+ zero_out_ghost_values()\l+ has_ghost_elements()\l+ copy_locally_owned\l_data_from()\l+ import()\l+ local_size()\l+ locally_owned_size()\l+ in_local_range()\l+ begin()\l+ begin()\l+ end()\l+ end()\l+ operator()()\l+ operator()()\l+ operator[]()\land 9 more...\l+ get_mpi_communicator()\l+ get_partitioner()\l+ partitioners_are_compatible()\l+ partitioners_are_globally\l_compatible()\l+ set_ghost_state()\l+ shared_vector_data()\l&#45; add_local()\l&#45; sadd_local()\l&#45; inner_product_local()\l&#45; norm_sqr_local()\l&#45; mean_value_local()\l&#45; l1_norm_local()\l&#45; lp_norm_local()\l&#45; linfty_norm_local()\l&#45; add_and_dot_local()\l&#45; clear_mpi_requests()\l&#45; resize_val()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* ~Vector()\l* reinit()\l* reinit()\l* reinit()\land 6 more...\l* reinit()\l* import()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* operator*()\l* add()\l* add()\l* add()\land 13 more...\l* operator=()\l* add()\l* add()\l* sadd()\l* compress()\l* update_ghost_values()\l* compress_start()\l* compress_finish()\l* update_ghost_values\l_start()\l* update_ghost_values\l_finish()\l* zero_out_ghosts()\l* zero_out_ghost_values()\l* has_ghost_elements()\l* copy_locally_owned\l_data_from()\l* import()\l* local_size()\l* locally_owned_size()\l* in_local_range()\l* begin()\l* begin()\l* end()\l* end()\l* operator()()\l* operator()()\l* operator[]()\land 9 more...\l* get_mpi_communicator()\l* get_partitioner()\l* partitioners_are_compatible()\l* partitioners_are_globally\l_compatible()\l* set_ghost_state()\l* shared_vector_data()\l}" alt="" coords="1577,3433,1778,5447"/>
<area shape="rect" id="node34" href="$classLinearAlgebra_1_1distributed_1_1Vector.html" title="{LinearAlgebra::distributed\l::Vector\&lt; Number, MemorySpace \&gt;\n||+ DeclException0()\l+ DeclException0()\l+ DeclException3()\l+ DeclException4()\l+ operator=()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ Vector()\l+ ~Vector()\l+ reinit()\l+ reinit()\l+ reinit()\land 6 more...\l+ compress()\l+ update_ghost_values()\l+ compress_start()\l+ compress_finish()\l+ update_ghost_values\l_start()\l+ update_ghost_values\l_finish()\l+ zero_out_ghosts()\l+ zero_out_ghost_values()\l+ has_ghost_elements()\l+ copy_locally_owned\l_data_from()\l+ import()\l+ reinit()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ import()\l+ operator*()\l+ add()\l+ add()\l+ add()\land 13 more...\l+ operator=()\l+ add()\l+ add()\l+ sadd()\l+ local_size()\l+ locally_owned_size()\l+ in_local_range()\l+ begin()\l+ begin()\l+ end()\l+ end()\l+ operator()()\l+ operator()()\l+ operator[]()\land 9 more...\l+ get_mpi_communicator()\l+ get_partitioner()\l+ partitioners_are_compatible()\l+ partitioners_are_globally\l_compatible()\l+ set_ghost_state()\l+ shared_vector_data()\l&#45; add_local()\l&#45; sadd_local()\l&#45; inner_product_local()\l&#45; norm_sqr_local()\l&#45; mean_value_local()\l&#45; l1_norm_local()\l&#45; lp_norm_local()\l&#45; linfty_norm_local()\l&#45; add_and_dot_local()\l&#45; clear_mpi_requests()\l&#45; resize_val()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* Vector()\l* ~Vector()\l* reinit()\l* reinit()\l* reinit()\land 6 more...\l* compress()\l* update_ghost_values()\l* compress_start()\l* compress_finish()\l* update_ghost_values\l_start()\l* update_ghost_values\l_finish()\l* zero_out_ghosts()\l* zero_out_ghost_values()\l* has_ghost_elements()\l* copy_locally_owned\l_data_from()\l* import()\l* reinit()\l* operator*=()\l* operator/=()\l* operator+=()\l* operator&#45;=()\l* import()\l* operator*()\l* add()\l* add()\l* add()\land 13 more...\l* operator=()\l* add()\l* add()\l* sadd()\l* local_size()\l* locally_owned_size()\l* in_local_range()\l* begin()\l* begin()\l* end()\l* end()\l* operator()()\l* operator()()\l* operator[]()\land 9 more...\l* get_mpi_communicator()\l* get_partitioner()\l* partitioners_are_compatible()\l* partitioners_are_globally\l_compatible()\l* set_ghost_state()\l* shared_vector_data()\l}" alt="" coords="1251,1233,1482,3246"/>
<area shape="rect" id="node42" href="$classMGConstrainedDoFs.html" title="{MGConstrainedDoFs\n||+ initialize()\l+ make_zero_boundary\l_constraints()\l+ add_user_constraints()\l+ make_no_normal_flux\l_constraints()\l+ clear()\l+ is_boundary_index()\l+ at_refinement_edge()\l+ is_interface_matrix\l_entry()\l+ get_boundary_indices()\l+ get_refinement_edge\l_indices()\l+ have_boundary_indices()\l+ get_level_constraints()\l+ get_user_constraint\l_matrix()\l}" alt="" coords="3076,5524,3255,5851"/>
<area shape="rect" id="node48" href="$classAffineConstraints.html" title="{AffineConstraints\&lt;\l double \&gt;\n||+ AffineConstraints()\l+ AffineConstraints()\l+ AffineConstraints()\l+ operator=()\l+ operator=()\l+ copy_from()\l+ reinit()\l+ can_store_line()\l+ get_local_lines()\l+ add_selected_constraints()\land 12 more...\l+ add_line()\l+ add_lines()\l+ add_lines()\l+ add_lines()\l+ add_entry()\l+ add_entries()\l+ set_inhomogeneity()\l+ close()\l+ merge()\l+ shift()\l+ clear()\l+ n_constraints()\l+ is_constrained()\l+ is_identity_constrained()\l+ are_identity_constrained()\l+ max_constraint_indirections()\l+ is_inhomogeneously\l_constrained()\l+ has_inhomogeneities()\l+ get_constraint_entries()\l+ get_inhomogeneity()\l+ print()\l+ write_dot()\l+ memory_consumption()\l+ resolve_indices()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ condense()\l+ set_zero()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ distribute_local_to\l_global()\l+ add_entries_local_to\l_global()\l+ add_entries_local_to\l_global()\l+ get_dof_values()\l+ distribute()\l&#45; distribute_local_to\l_global()\l&#45; distribute_local_to\l_global()\l&#45; add_entries_local_to\l_global()\l&#45; add_entries_local_to\l_global()\l&#45; calculate_line_index()\l&#45; make_sorted_row_list()\l&#45; make_sorted_row_list()\l&#45; resolve_vector_entry()\l* add_line()\l* add_lines()\l* add_lines()\l* add_lines()\l* add_entry()\l* add_entries()\l* set_inhomogeneity()\l* close()\l* merge()\l* shift()\l* clear()\l* n_constraints()\l* is_constrained()\l* is_identity_constrained()\l* are_identity_constrained()\l* max_constraint_indirections()\l* is_inhomogeneously\l_constrained()\l* has_inhomogeneities()\l* get_constraint_entries()\l* get_inhomogeneity()\l* print()\l* write_dot()\l* memory_consumption()\l* resolve_indices()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* condense()\l* set_zero()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* distribute_local_to\l_global()\l* add_entries_local_to\l_global()\l* add_entries_local_to\l_global()\l* get_dof_values()\l* distribute()\l}" alt="" coords="2730,1152,2934,3327"/>
<area shape="rect" id="node5" href="$classint.html" title="{int\n||}" alt="" coords="29,175,67,252"/>
<area shape="rect" id="node6" title="STL class. " alt="" coords="3665,175,3745,252"/>
<area shape="rect" id="node40" href="$classSmartPointer.html" title="{SmartPointer\&lt; const\l MGConstrainedDoFs,\l MGLevelGlobalTransfer\l\&lt; LinearAlgebra::distributed\l::Vector\&lt; Number \&gt; \&gt; \&gt;\n||+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ ~SmartPointer()\l+ operator=()\l+ operator=()\l+ operator=()\l+ clear()\land 6 more...\l}" alt="" coords="3509,5943,3691,6225"/>
<area shape="rect" id="node50" href="$classSmartPointer.html" title="{SmartPointer\&lt; T, P \&gt;\n||+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ SmartPointer()\l+ ~SmartPointer()\l+ operator=()\l+ operator=()\l+ operator=()\l+ clear()\land 6 more...\l}" alt="" coords="3588,359,3735,583"/>
<area shape="rect" id="node7" title="STL class. " alt="" coords="3642,5,3769,97"/>
<area shape="rect" id="node8" title="STL class. " alt="" coords="496,175,619,252"/>
<area shape="rect" id="node15" title="STL class. " alt="" coords="1509,175,1625,252"/>
<area shape="rect" id="node24" href="$classbool.html" title="{bool\n||}" alt="" coords="2529,432,2575,509"/>
<area shape="rect" id="node44" href="$classIndexSet.html" title="{IndexSet\n||+ IndexSet()\l+ IndexSet()\l+ IndexSet()\l+ operator=()\l+ IndexSet()\l+ operator=()\l+ IndexSet()\l+ clear()\l+ set_size()\l+ size()\land 35 more...\l+ begin()\l+ at()\l+ end()\l+ begin_intervals()\l+ end_intervals()\l+ ExcIndexNotPresent()\l&#45; do_compress()\l* begin()\l* at()\l* end()\l* begin_intervals()\l* end_intervals()\l}" alt="" coords="2996,660,3159,1060"/>
<area shape="rect" id="node26" href="$classLinearAlgebra_1_1VectorSpaceVector.html" title="{LinearAlgebra::VectorSpace\lVector\&lt; Number \&gt;\n||+ reinit()\l+ operator=()\l+ operator*=()\l+ operator/=()\l+ operator+=()\l+ operator&#45;=()\l+ import()\l+ operator*()\l+ add()\l+ add()\land 16 more...\l}" alt="" coords="1948,741,2132,979"/>
<area shape="rect" id="node28" href="$classMPI__Request.html" title="{MPI_Request\n||}" alt="" coords="1258,432,1361,509"/>
<area shape="rect" id="node29" href="$structMemorySpace_1_1Host.html" title="{MemorySpace::Host\n||}" alt="" coords="1085,2201,1227,2278"/>
<area shape="rect" id="node32" href="$classMPI__Comm.html" title="{MPI_Comm\n||}" alt="" coords="1831,821,1923,899"/>
<area shape="rect" id="node33" href="$classunsigned_01int.html" title="{unsigned int\n||}" alt="" coords="2370,432,2462,509"/>
<area shape="rect" id="node37" href="$classTable.html" title="{Table\&lt; 2, unsigned\l int \&gt;\n||}" alt="" coords="3437,167,3571,259"/>
<area shape="rect" id="node38" href="$classTable.html" title="{Table\&lt; N, T \&gt;\n||}" alt="" coords="3443,13,3547,90"/>
<area shape="rect" id="node45" href="$classThreads_1_1Mutex.html" title="{Threads::Mutex\n||+ Mutex()\l+ Mutex()\l+ operator=()\l}" alt="" coords="3021,417,3134,524"/>
<area shape="rect" id="node49" href="$classThreads_1_1ThreadLocalStorage.html" title="{Threads::ThreadLocalStorage\l\&lt; internal::AffineConstraints\l::ScratchData\&lt; double \&gt; \&gt;\n||+ ThreadLocalStorage()\l+ ThreadLocalStorage()\l+ ThreadLocalStorage()\l+ ThreadLocalStorage()\l+ ThreadLocalStorage()\l+ operator=()\l+ operator=()\l+ operator=()\l+ operator=()\l+ get()\l+ get()\l+ operator internal::\lAffineConstraints::Scratch\lData\&lt; double \&gt; &amp;()\l+ clear()\l}" alt="" coords="2778,704,2971,1016"/>
</map>
