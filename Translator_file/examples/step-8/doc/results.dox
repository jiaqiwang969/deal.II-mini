examples/step-8/doc/results.dox



<h1>Results</h1>


关于这个程序的结果，除了它们看起来很好之外，没有什么可说的。所有图片都是用VisIt从程序写入磁盘的输出文件中制作的。前两张图片显示了 $x$ -和 $y$ -位移的标量分量。

 <table width="100%">
<tr>
<td>
<img src="https://www.dealii.org/images/steps/developer/step-8.x.png" alt="">
</td>
<td>
<img src="https://www.dealii.org/images/steps/developer/step-8.y.png" alt="">
</td>
</tr>
</table> 


你可以清楚地看到 $x$ 周围的位移 $x=0.5$ 和 $x=-0.5$ 的来源，以及 $y$ 在原点的位移。

人们经常想做的是将位移显示为一个矢量场，也就是说，每一个点的矢量都说明了位移的方向和大小。不幸的是，这就有点麻烦了。为了理解为什么会这样，请记住，我们刚刚将我们的有限元定义为两个分量的集合（在 <code>dim=2</code> 维度）。我们没有说过这不仅仅是一个压力和一个浓度（两个标量），而是说这两个分量实际上是一个矢量值量的一部分，即位移。如果没有这方面的知识，DataOut类就会假定我们打印的所有单个变量都是独立的标量，然后VisIt和Paraview就会忠实地假定这确实是这样的。换句话说，一旦我们把数据写成标量，这些程序中就没有任何东西可以让我们把这两个标量字段粘贴到一起作为一个矢量字段。我们必须从根本上解决这个问题，即在  <code>ElasticProblem::output_results()</code>  。我们不会在这里这样做，而是让读者参考step-22程序，在那里我们展示了如何在一个更普遍的情况下这样做。话虽如此，我们还是忍不住要生成数据，以显示如果按照步骤22中讨论的方式实施，这将是什么样子。矢量场看起来是这样的（VisIt和Paraview随机选择几百个顶点来绘制矢量；从每个顶点绘制矢量会使图片无法阅读）。

 <img src="https://www.dealii.org/images/steps/developer/step-8.vectors.png" alt=""> 


我们注意到，由于 $x$ -和 $y$ -力相对于这些轴是对称的，人们可能直观地期望解是关于 $x$ -和 $y$ -轴的对称。然而，作为矢量的力是不对称的，因此解决方案也不对称。


