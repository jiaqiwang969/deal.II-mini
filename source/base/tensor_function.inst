// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class TensorFunction< 1 ,  1 ,  double >;
 template class ConstantTensorFunction< 1 ,  1 ,  double >;
 template class ZeroTensorFunction< 1 ,  1 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class TensorFunction< 1 ,  2 ,  double >;
 template class ConstantTensorFunction< 1 ,  2 ,  double >;
 template class ZeroTensorFunction< 1 ,  2 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template class TensorFunction< 1 ,  3 ,  double >;
 template class ConstantTensorFunction< 1 ,  3 ,  double >;
 template class ZeroTensorFunction< 1 ,  3 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template class TensorFunction< 2 ,  1 ,  double >;
 template class ConstantTensorFunction< 2 ,  1 ,  double >;
 template class ZeroTensorFunction< 2 ,  1 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template class TensorFunction< 2 ,  2 ,  double >;
 template class ConstantTensorFunction< 2 ,  2 ,  double >;
 template class ZeroTensorFunction< 2 ,  2 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template class TensorFunction< 2 ,  3 ,  double >;
 template class ConstantTensorFunction< 2 ,  3 ,  double >;
 template class ZeroTensorFunction< 2 ,  3 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template class TensorFunction< 3 ,  1 ,  double >;
 template class ConstantTensorFunction< 3 ,  1 ,  double >;
 template class ZeroTensorFunction< 3 ,  1 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template class TensorFunction< 3 ,  2 ,  double >;
 template class ConstantTensorFunction< 3 ,  2 ,  double >;
 template class ZeroTensorFunction< 3 ,  2 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template class TensorFunction< 3 ,  3 ,  double >;
 template class ConstantTensorFunction< 3 ,  3 ,  double >;
 template class ZeroTensorFunction< 3 ,  3 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template class TensorFunction< 4 ,  1 ,  double >;
 template class ConstantTensorFunction< 4 ,  1 ,  double >;
 template class ZeroTensorFunction< 4 ,  1 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template class TensorFunction< 4 ,  2 ,  double >;
 template class ConstantTensorFunction< 4 ,  2 ,  double >;
 template class ZeroTensorFunction< 4 ,  2 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template class TensorFunction< 4 ,  3 ,  double >;
 template class ConstantTensorFunction< 4 ,  3 ,  double >;
 template class ZeroTensorFunction< 4 ,  3 ,  double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template class TensorFunction< 1 ,  1 ,  float >;
 template class ConstantTensorFunction< 1 ,  1 ,  float >;
 template class ZeroTensorFunction< 1 ,  1 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template class TensorFunction< 1 ,  2 ,  float >;
 template class ConstantTensorFunction< 1 ,  2 ,  float >;
 template class ZeroTensorFunction< 1 ,  2 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template class TensorFunction< 1 ,  3 ,  float >;
 template class ConstantTensorFunction< 1 ,  3 ,  float >;
 template class ZeroTensorFunction< 1 ,  3 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template class TensorFunction< 2 ,  1 ,  float >;
 template class ConstantTensorFunction< 2 ,  1 ,  float >;
 template class ZeroTensorFunction< 2 ,  1 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template class TensorFunction< 2 ,  2 ,  float >;
 template class ConstantTensorFunction< 2 ,  2 ,  float >;
 template class ZeroTensorFunction< 2 ,  2 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template class TensorFunction< 2 ,  3 ,  float >;
 template class ConstantTensorFunction< 2 ,  3 ,  float >;
 template class ZeroTensorFunction< 2 ,  3 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template class TensorFunction< 3 ,  1 ,  float >;
 template class ConstantTensorFunction< 3 ,  1 ,  float >;
 template class ZeroTensorFunction< 3 ,  1 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template class TensorFunction< 3 ,  2 ,  float >;
 template class ConstantTensorFunction< 3 ,  2 ,  float >;
 template class ZeroTensorFunction< 3 ,  2 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template class TensorFunction< 3 ,  3 ,  float >;
 template class ConstantTensorFunction< 3 ,  3 ,  float >;
 template class ZeroTensorFunction< 3 ,  3 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template class TensorFunction< 4 ,  1 ,  float >;
 template class ConstantTensorFunction< 4 ,  1 ,  float >;
 template class ZeroTensorFunction< 4 ,  1 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template class TensorFunction< 4 ,  2 ,  float >;
 template class ConstantTensorFunction< 4 ,  2 ,  float >;
 template class ZeroTensorFunction< 4 ,  2 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template class TensorFunction< 4 ,  3 ,  float >;
 template class ConstantTensorFunction< 4 ,  3 ,  float >;
 template class ZeroTensorFunction< 4 ,  3 ,  float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template class TensorFunction< 1 ,  1 ,  std::complex<double> >;
 template class ConstantTensorFunction< 1 ,  1 ,  std::complex<double> >;
 template class ZeroTensorFunction< 1 ,  1 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template class TensorFunction< 1 ,  2 ,  std::complex<double> >;
 template class ConstantTensorFunction< 1 ,  2 ,  std::complex<double> >;
 template class ZeroTensorFunction< 1 ,  2 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template class TensorFunction< 1 ,  3 ,  std::complex<double> >;
 template class ConstantTensorFunction< 1 ,  3 ,  std::complex<double> >;
 template class ZeroTensorFunction< 1 ,  3 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template class TensorFunction< 2 ,  1 ,  std::complex<double> >;
 template class ConstantTensorFunction< 2 ,  1 ,  std::complex<double> >;
 template class ZeroTensorFunction< 2 ,  1 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template class TensorFunction< 2 ,  2 ,  std::complex<double> >;
 template class ConstantTensorFunction< 2 ,  2 ,  std::complex<double> >;
 template class ZeroTensorFunction< 2 ,  2 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template class TensorFunction< 2 ,  3 ,  std::complex<double> >;
 template class ConstantTensorFunction< 2 ,  3 ,  std::complex<double> >;
 template class ZeroTensorFunction< 2 ,  3 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template class TensorFunction< 3 ,  1 ,  std::complex<double> >;
 template class ConstantTensorFunction< 3 ,  1 ,  std::complex<double> >;
 template class ZeroTensorFunction< 3 ,  1 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template class TensorFunction< 3 ,  2 ,  std::complex<double> >;
 template class ConstantTensorFunction< 3 ,  2 ,  std::complex<double> >;
 template class ZeroTensorFunction< 3 ,  2 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template class TensorFunction< 3 ,  3 ,  std::complex<double> >;
 template class ConstantTensorFunction< 3 ,  3 ,  std::complex<double> >;
 template class ZeroTensorFunction< 3 ,  3 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template class TensorFunction< 4 ,  1 ,  std::complex<double> >;
 template class ConstantTensorFunction< 4 ,  1 ,  std::complex<double> >;
 template class ZeroTensorFunction< 4 ,  1 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template class TensorFunction< 4 ,  2 ,  std::complex<double> >;
 template class ConstantTensorFunction< 4 ,  2 ,  std::complex<double> >;
 template class ZeroTensorFunction< 4 ,  2 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template class TensorFunction< 4 ,  3 ,  std::complex<double> >;
 template class ConstantTensorFunction< 4 ,  3 ,  std::complex<double> >;
 template class ZeroTensorFunction< 4 ,  3 ,  std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template class TensorFunction< 1 ,  1 ,  std::complex<float> >;
 template class ConstantTensorFunction< 1 ,  1 ,  std::complex<float> >;
 template class ZeroTensorFunction< 1 ,  1 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template class TensorFunction< 1 ,  2 ,  std::complex<float> >;
 template class ConstantTensorFunction< 1 ,  2 ,  std::complex<float> >;
 template class ZeroTensorFunction< 1 ,  2 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template class TensorFunction< 1 ,  3 ,  std::complex<float> >;
 template class ConstantTensorFunction< 1 ,  3 ,  std::complex<float> >;
 template class ZeroTensorFunction< 1 ,  3 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template class TensorFunction< 2 ,  1 ,  std::complex<float> >;
 template class ConstantTensorFunction< 2 ,  1 ,  std::complex<float> >;
 template class ZeroTensorFunction< 2 ,  1 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template class TensorFunction< 2 ,  2 ,  std::complex<float> >;
 template class ConstantTensorFunction< 2 ,  2 ,  std::complex<float> >;
 template class ZeroTensorFunction< 2 ,  2 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template class TensorFunction< 2 ,  3 ,  std::complex<float> >;
 template class ConstantTensorFunction< 2 ,  3 ,  std::complex<float> >;
 template class ZeroTensorFunction< 2 ,  3 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(42))
template class TensorFunction< 3 ,  1 ,  std::complex<float> >;
 template class ConstantTensorFunction< 3 ,  1 ,  std::complex<float> >;
 template class ZeroTensorFunction< 3 ,  1 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(43))
template class TensorFunction< 3 ,  2 ,  std::complex<float> >;
 template class ConstantTensorFunction< 3 ,  2 ,  std::complex<float> >;
 template class ZeroTensorFunction< 3 ,  2 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(44))
template class TensorFunction< 3 ,  3 ,  std::complex<float> >;
 template class ConstantTensorFunction< 3 ,  3 ,  std::complex<float> >;
 template class ZeroTensorFunction< 3 ,  3 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(45))
template class TensorFunction< 4 ,  1 ,  std::complex<float> >;
 template class ConstantTensorFunction< 4 ,  1 ,  std::complex<float> >;
 template class ZeroTensorFunction< 4 ,  1 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(46))
template class TensorFunction< 4 ,  2 ,  std::complex<float> >;
 template class ConstantTensorFunction< 4 ,  2 ,  std::complex<float> >;
 template class ZeroTensorFunction< 4 ,  2 ,  std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(47))
template class TensorFunction< 4 ,  3 ,  std::complex<float> >;
 template class ConstantTensorFunction< 4 ,  3 ,  std::complex<float> >;
 template class ZeroTensorFunction< 4 ,  3 ,  std::complex<float> >;
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
