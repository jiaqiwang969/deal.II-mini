// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class RelaxationBlock<SparseMatrix< double >,  double , Vector< double >>;
 template class RelaxationBlockJacobi<SparseMatrix< double >,  double , Vector< double >>;
 template class RelaxationBlockSOR<SparseMatrix< double >,  double , Vector< double >>;
 template class RelaxationBlockSSOR<SparseMatrix< double >,  double , Vector< double >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class RelaxationBlock<SparseMatrix< double >,  double , Vector< float >>;
 template class RelaxationBlockJacobi<SparseMatrix< double >,  double , Vector< float >>;
 template class RelaxationBlockSOR<SparseMatrix< double >,  double , Vector< float >>;
 template class RelaxationBlockSSOR<SparseMatrix< double >,  double , Vector< float >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template class RelaxationBlock<SparseMatrix< double >,  float , Vector< double >>;
 template class RelaxationBlockJacobi<SparseMatrix< double >,  float , Vector< double >>;
 template class RelaxationBlockSOR<SparseMatrix< double >,  float , Vector< double >>;
 template class RelaxationBlockSSOR<SparseMatrix< double >,  float , Vector< double >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template class RelaxationBlock<SparseMatrix< double >,  float , Vector< float >>;
 template class RelaxationBlockJacobi<SparseMatrix< double >,  float , Vector< float >>;
 template class RelaxationBlockSOR<SparseMatrix< double >,  float , Vector< float >>;
 template class RelaxationBlockSSOR<SparseMatrix< double >,  float , Vector< float >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template class RelaxationBlock<SparseMatrix< float >,  double , Vector< double >>;
 template class RelaxationBlockJacobi<SparseMatrix< float >,  double , Vector< double >>;
 template class RelaxationBlockSOR<SparseMatrix< float >,  double , Vector< double >>;
 template class RelaxationBlockSSOR<SparseMatrix< float >,  double , Vector< double >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template class RelaxationBlock<SparseMatrix< float >,  double , Vector< float >>;
 template class RelaxationBlockJacobi<SparseMatrix< float >,  double , Vector< float >>;
 template class RelaxationBlockSOR<SparseMatrix< float >,  double , Vector< float >>;
 template class RelaxationBlockSSOR<SparseMatrix< float >,  double , Vector< float >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template class RelaxationBlock<SparseMatrix< float >,  float , Vector< double >>;
 template class RelaxationBlockJacobi<SparseMatrix< float >,  float , Vector< double >>;
 template class RelaxationBlockSOR<SparseMatrix< float >,  float , Vector< double >>;
 template class RelaxationBlockSSOR<SparseMatrix< float >,  float , Vector< double >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template class RelaxationBlock<SparseMatrix< float >,  float , Vector< float >>;
 template class RelaxationBlockJacobi<SparseMatrix< float >,  float , Vector< float >>;
 template class RelaxationBlockSOR<SparseMatrix< float >,  float , Vector< float >>;
 template class RelaxationBlockSSOR<SparseMatrix< float >,  float , Vector< float >>;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
#ifdef DEAL_II_WITH_TRILINOS
 template class RelaxationBlock<TrilinosWrappers::SparseMatrix,
  double ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockJacobi<TrilinosWrappers::SparseMatrix,
  double ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockSOR<TrilinosWrappers::SparseMatrix,
  double ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockSSOR<TrilinosWrappers::SparseMatrix,
  double ,
 TrilinosWrappers::MPI::Vector>;
#endif
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
#ifdef DEAL_II_WITH_TRILINOS
 template class RelaxationBlock<TrilinosWrappers::SparseMatrix,
  float ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockJacobi<TrilinosWrappers::SparseMatrix,
  float ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockSOR<TrilinosWrappers::SparseMatrix,
  float ,
 TrilinosWrappers::MPI::Vector>;
 template class RelaxationBlockSSOR<TrilinosWrappers::SparseMatrix,
  float ,
 TrilinosWrappers::MPI::Vector>;
#endif
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
