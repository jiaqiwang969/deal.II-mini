// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class ChunkSparseMatrix< double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class ChunkSparseMatrix< float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template ChunkSparseMatrix< double > &ChunkSparseMatrix< double >::copy_from< double >(
 const ChunkSparseMatrix< double > &);

 template void ChunkSparseMatrix< double >::copy_from< double >(const FullMatrix< double > &);

 template void ChunkSparseMatrix< double >::add< double >(const  double ,
 const ChunkSparseMatrix< double > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template ChunkSparseMatrix< double > &ChunkSparseMatrix< double >::copy_from< float >(
 const ChunkSparseMatrix< float > &);

 template void ChunkSparseMatrix< double >::copy_from< float >(const FullMatrix< float > &);

 template void ChunkSparseMatrix< double >::add< float >(const  double ,
 const ChunkSparseMatrix< float > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template ChunkSparseMatrix< float > &ChunkSparseMatrix< float >::copy_from< double >(
 const ChunkSparseMatrix< double > &);

 template void ChunkSparseMatrix< float >::copy_from< double >(const FullMatrix< double > &);

 template void ChunkSparseMatrix< float >::add< double >(const  float ,
 const ChunkSparseMatrix< double > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template ChunkSparseMatrix< float > &ChunkSparseMatrix< float >::copy_from< float >(
 const ChunkSparseMatrix< float > &);

 template void ChunkSparseMatrix< float >::copy_from< float >(const FullMatrix< float > &);

 template void ChunkSparseMatrix< float >::add< float >(const  float ,
 const ChunkSparseMatrix< float > &);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template  double  ChunkSparseMatrix< double >::matrix_norm_square< double >(
 const Vector< double > &) const;

 template  double  ChunkSparseMatrix< double >::matrix_scalar_product< double >(
 const Vector< double > &, const Vector< double > &) const;

 template  double  ChunkSparseMatrix< double >::residual< double >(Vector< double > &,
 const Vector< double > &,
 const Vector< double > &) const;

 template void ChunkSparseMatrix< double >::precondition_SSOR< double >(
 Vector< double > &, const Vector< double > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_SOR< double >(
 Vector< double > &, const Vector< double > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_TSOR< double >(
 Vector< double > &, const Vector< double > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_Jacobi< double >(
 Vector< double > &, const Vector< double > &, const  double ) const;

 template void ChunkSparseMatrix< double >::SOR< double >(Vector< double > &, const  double ) const;
 template void ChunkSparseMatrix< double >::TSOR< double >(Vector< double > &, const  double ) const;
 template void ChunkSparseMatrix< double >::SSOR< double >(Vector< double > &, const  double ) const;
 template void ChunkSparseMatrix< double >::PSOR< double >(
 Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::TPSOR< double >(
 Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::SOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::TSOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::SSOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  double ) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template  float  ChunkSparseMatrix< double >::matrix_norm_square< float >(
 const Vector< float > &) const;

 template  float  ChunkSparseMatrix< double >::matrix_scalar_product< float >(
 const Vector< float > &, const Vector< float > &) const;

 template  float  ChunkSparseMatrix< double >::residual< float >(Vector< float > &,
 const Vector< float > &,
 const Vector< float > &) const;

 template void ChunkSparseMatrix< double >::precondition_SSOR< float >(
 Vector< float > &, const Vector< float > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_SOR< float >(
 Vector< float > &, const Vector< float > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_TSOR< float >(
 Vector< float > &, const Vector< float > &, const  double ) const;

 template void ChunkSparseMatrix< double >::precondition_Jacobi< float >(
 Vector< float > &, const Vector< float > &, const  double ) const;

 template void ChunkSparseMatrix< double >::SOR< float >(Vector< float > &, const  double ) const;
 template void ChunkSparseMatrix< double >::TSOR< float >(Vector< float > &, const  double ) const;
 template void ChunkSparseMatrix< double >::SSOR< float >(Vector< float > &, const  double ) const;
 template void ChunkSparseMatrix< double >::PSOR< float >(
 Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::TPSOR< float >(
 Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::SOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::TSOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  double ) const;
 template void ChunkSparseMatrix< double >::SSOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  double ) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template  double  ChunkSparseMatrix< float >::matrix_norm_square< double >(
 const Vector< double > &) const;

 template  double  ChunkSparseMatrix< float >::matrix_scalar_product< double >(
 const Vector< double > &, const Vector< double > &) const;

 template  double  ChunkSparseMatrix< float >::residual< double >(Vector< double > &,
 const Vector< double > &,
 const Vector< double > &) const;

 template void ChunkSparseMatrix< float >::precondition_SSOR< double >(
 Vector< double > &, const Vector< double > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_SOR< double >(
 Vector< double > &, const Vector< double > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_TSOR< double >(
 Vector< double > &, const Vector< double > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_Jacobi< double >(
 Vector< double > &, const Vector< double > &, const  float ) const;

 template void ChunkSparseMatrix< float >::SOR< double >(Vector< double > &, const  float ) const;
 template void ChunkSparseMatrix< float >::TSOR< double >(Vector< double > &, const  float ) const;
 template void ChunkSparseMatrix< float >::SSOR< double >(Vector< double > &, const  float ) const;
 template void ChunkSparseMatrix< float >::PSOR< double >(
 Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::TPSOR< double >(
 Vector< double > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::SOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::TSOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::SSOR_step< double >(Vector< double > &,
 const Vector< double > &,
 const  float ) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template  float  ChunkSparseMatrix< float >::matrix_norm_square< float >(
 const Vector< float > &) const;

 template  float  ChunkSparseMatrix< float >::matrix_scalar_product< float >(
 const Vector< float > &, const Vector< float > &) const;

 template  float  ChunkSparseMatrix< float >::residual< float >(Vector< float > &,
 const Vector< float > &,
 const Vector< float > &) const;

 template void ChunkSparseMatrix< float >::precondition_SSOR< float >(
 Vector< float > &, const Vector< float > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_SOR< float >(
 Vector< float > &, const Vector< float > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_TSOR< float >(
 Vector< float > &, const Vector< float > &, const  float ) const;

 template void ChunkSparseMatrix< float >::precondition_Jacobi< float >(
 Vector< float > &, const Vector< float > &, const  float ) const;

 template void ChunkSparseMatrix< float >::SOR< float >(Vector< float > &, const  float ) const;
 template void ChunkSparseMatrix< float >::TSOR< float >(Vector< float > &, const  float ) const;
 template void ChunkSparseMatrix< float >::SSOR< float >(Vector< float > &, const  float ) const;
 template void ChunkSparseMatrix< float >::PSOR< float >(
 Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::TPSOR< float >(
 Vector< float > &,
 const std::vector<types::global_dof_index> &,
 const std::vector<types::global_dof_index> &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::SOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::TSOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  float ) const;
 template void ChunkSparseMatrix< float >::SSOR_step< float >(Vector< float > &,
 const Vector< float > &,
 const  float ) const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template void ChunkSparseMatrix< double >::vmult( Vector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < double > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < double > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template void ChunkSparseMatrix< double >::vmult( Vector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < double > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < double > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template void ChunkSparseMatrix< double >::vmult( BlockVector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < double > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < double > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template void ChunkSparseMatrix< double >::vmult( BlockVector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < double > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < double > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template void ChunkSparseMatrix< double >::vmult( Vector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < double > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < double > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template void ChunkSparseMatrix< double >::vmult( Vector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < double > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < double > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(16))
template void ChunkSparseMatrix< double >::vmult( BlockVector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < double > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < double > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(17))
template void ChunkSparseMatrix< double >::vmult( BlockVector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < double > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < double > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(18))
template void ChunkSparseMatrix< double >::vmult( Vector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < float > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < float > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(19))
template void ChunkSparseMatrix< double >::vmult( Vector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < float > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < float > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(20))
template void ChunkSparseMatrix< double >::vmult( BlockVector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < float > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < float > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(21))
template void ChunkSparseMatrix< double >::vmult( BlockVector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < float > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < float > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(22))
template void ChunkSparseMatrix< double >::vmult( Vector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < float > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < float > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(23))
template void ChunkSparseMatrix< double >::vmult( Vector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( Vector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( Vector < float > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( Vector < float > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(24))
template void ChunkSparseMatrix< double >::vmult( BlockVector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < float > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < float > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(25))
template void ChunkSparseMatrix< double >::vmult( BlockVector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::Tvmult( BlockVector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< double >::vmult_add( BlockVector < float > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< double >::Tvmult_add( BlockVector < float > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(26))
template void ChunkSparseMatrix< float >::vmult( Vector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < double > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < double > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(27))
template void ChunkSparseMatrix< float >::vmult( Vector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < double > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < double > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(28))
template void ChunkSparseMatrix< float >::vmult( BlockVector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < double > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < double > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < double > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(29))
template void ChunkSparseMatrix< float >::vmult( BlockVector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < double > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < double > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < double > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(30))
template void ChunkSparseMatrix< float >::vmult( Vector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < double > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < double > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(31))
template void ChunkSparseMatrix< float >::vmult( Vector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < double > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < double > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(32))
template void ChunkSparseMatrix< float >::vmult( BlockVector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < double > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < double > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < double > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(33))
template void ChunkSparseMatrix< float >::vmult( BlockVector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < double > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < double > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < double > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(34))
template void ChunkSparseMatrix< float >::vmult( Vector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < float > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < float > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(35))
template void ChunkSparseMatrix< float >::vmult( Vector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < float > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < float > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(36))
template void ChunkSparseMatrix< float >::vmult( BlockVector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < float > &, const  Vector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < float > &, const  Vector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < float > &, const  Vector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(37))
template void ChunkSparseMatrix< float >::vmult( BlockVector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < float > &, const  BlockVector < double > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < float > &, const  BlockVector < double > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < float > &, const  BlockVector < double > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(38))
template void ChunkSparseMatrix< float >::vmult( Vector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < float > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < float > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(39))
template void ChunkSparseMatrix< float >::vmult( Vector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( Vector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( Vector < float > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( Vector < float > &, const  BlockVector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(40))
template void ChunkSparseMatrix< float >::vmult( BlockVector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < float > &, const  Vector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < float > &, const  Vector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < float > &, const  Vector < float > &)
 const;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(41))
template void ChunkSparseMatrix< float >::vmult( BlockVector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::Tvmult( BlockVector < float > &, const  BlockVector < float > &) const;
 template void ChunkSparseMatrix< float >::vmult_add( BlockVector < float > &, const  BlockVector < float > &)
 const;
 template void ChunkSparseMatrix< float >::Tvmult_add( BlockVector < float > &, const  BlockVector < float > &)
 const;
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
