// This file is automatically generated from corresponding .inst.in, do not edit.

#ifdef SPLIT_INSTANTIATIONS_COUNT
  #define SPLIT_INSTANTIATIONS_CHECK(C) (((C) % SPLIT_INSTANTIATIONS_COUNT) == SPLIT_INSTANTIATIONS_INDEX)
#else
  #define SPLIT_INSTANTIATIONS_CHECK(C) (1)
#endif

#if (SPLIT_INSTANTIATIONS_CHECK(0))
template class Vector< double >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(1))
template class Vector< float >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(2))
template class Vector< std::complex<double> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(3))
template class Vector< std::complex<float> >;
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(4))
template bool Vector< double >::operator==< double >(const Vector< double > &) const;
 template  double  Vector< double >::operator*< double >(const Vector< double > &) const;
 template void Vector< double >::reinit< double >(const Vector< double > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(5))
template bool Vector< double >::operator==< float >(const Vector< float > &) const;
 template  double  Vector< double >::operator*< float >(const Vector< float > &) const;
 template void Vector< double >::reinit< float >(const Vector< float > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(6))
template bool Vector< float >::operator==< double >(const Vector< double > &) const;
 template  float  Vector< float >::operator*< double >(const Vector< double > &) const;
 template void Vector< float >::reinit< double >(const Vector< double > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(7))
template bool Vector< float >::operator==< float >(const Vector< float > &) const;
 template  float  Vector< float >::operator*< float >(const Vector< float > &) const;
 template void Vector< float >::reinit< float >(const Vector< float > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(8))
template bool Vector< std::complex<double> >::operator==< std::complex<double> >(const Vector< std::complex<double> > &) const;
 template  std::complex<double>  Vector< std::complex<double> >::operator*< std::complex<double> >(const Vector< std::complex<double> > &) const;
 template void Vector< std::complex<double> >::reinit< std::complex<double> >(const Vector< std::complex<double> > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(9))
template bool Vector< std::complex<double> >::operator==< std::complex<float> >(const Vector< std::complex<float> > &) const;
 template  std::complex<double>  Vector< std::complex<double> >::operator*< std::complex<float> >(const Vector< std::complex<float> > &) const;
 template void Vector< std::complex<double> >::reinit< std::complex<float> >(const Vector< std::complex<float> > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(10))
template bool Vector< std::complex<float> >::operator==< std::complex<double> >(const Vector< std::complex<double> > &) const;
 template  std::complex<float>  Vector< std::complex<float> >::operator*< std::complex<double> >(const Vector< std::complex<double> > &) const;
 template void Vector< std::complex<float> >::reinit< std::complex<double> >(const Vector< std::complex<double> > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(11))
template bool Vector< std::complex<float> >::operator==< std::complex<float> >(const Vector< std::complex<float> > &) const;
 template  std::complex<float>  Vector< std::complex<float> >::operator*< std::complex<float> >(const Vector< std::complex<float> > &) const;
 template void Vector< std::complex<float> >::reinit< std::complex<float> >(const Vector< std::complex<float> > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(12))
template Vector< std::complex<double> > &Vector< std::complex<double> >::operator=< double >(const Vector< double > &);
 template void Vector< std::complex<double> >::reinit< double >(const Vector< double > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(13))
template Vector< std::complex<double> > &Vector< std::complex<double> >::operator=< float >(const Vector< float > &);
 template void Vector< std::complex<double> >::reinit< float >(const Vector< float > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(14))
template Vector< std::complex<float> > &Vector< std::complex<float> >::operator=< double >(const Vector< double > &);
 template void Vector< std::complex<float> >::reinit< double >(const Vector< double > &, const bool);
 
#endif
#if (SPLIT_INSTANTIATIONS_CHECK(15))
template Vector< std::complex<float> > &Vector< std::complex<float> >::operator=< float >(const Vector< float > &);
 template void Vector< std::complex<float> >::reinit< float >(const Vector< float > &, const bool);
 
#endif

#undef SPLIT_INSTANTIATIONS_CHECK
