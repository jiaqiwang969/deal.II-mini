// ---------------------------------------------------------------------
//
// Copyright (C) 2019 by the deal.II authors
//
// This file is part of the deal.II library.
//
// The deal.II library is free software; you can use it, redistribute
// it, and/or modify it under the terms of the GNU Lesser General
// Public License as published by the Free Software Foundation; either
// version 2.1 of the License, or (at your option) any later version.
// The full text of the license can be found in the file LICENSE at
// the top level of the deal.II distribution.
//
// ---------------------------------------------------------------------

// TODO: Include complex types

for (number : REAL_SCALARS)
  {
    namespace Differentiation
    \{
      namespace AD
      \{
        // -------------------------- HelperBase ----------------------

        template class HelperBase<NumberTypes::none, number>;

        // -------------------------- CellLevelBase ----------------------

        template class CellLevelBase<NumberTypes::none, number>;

        // -------------------------- EnergyFunctional ----------------------

        template class EnergyFunctional<NumberTypes::none, number>;

        // ------------------------ ResidualLinearization --------------------

        template class ResidualLinearization<NumberTypes::none, number>;

      \}
    \}
  }


for (deal_II_dimension : DIMENSIONS; number : REAL_SCALARS)
  {
    namespace Differentiation
    \{
      namespace AD
      \{
        // ----------------------- PointLevelFunctionsBase -------------------

        template class PointLevelFunctionsBase<deal_II_dimension,
                                               NumberTypes::none,
                                               number>;

        // -------------------------- ScalarFunction ----------------------

        template class ScalarFunction<deal_II_dimension,
                                      NumberTypes::none,
                                      number>;

        // -------------------------- VectorFunction ----------------------

        template class VectorFunction<deal_II_dimension,
                                      NumberTypes::none,
                                      number>;

      \}
    \}
  }
